<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>React-Native之旅Day4 Text Input</title>
      <link href="/donaldwu.github.com/2022/07/08/React-Native%E4%B9%8B%E6%97%85Day4/"/>
      <url>/donaldwu.github.com/2022/07/08/React-Native%E4%B9%8B%E6%97%85Day4/</url>
      
        <content type="html"><![CDATA[<p>今天就來看看 Reac-Native 如何利用<a href="https://reactnative.dev/docs/intro-react-native-components">核心元件</a>來處理文字輸入</p><p><a href="https://reactnative.dev/docs/textinput#content">TextInput</a> 帶有一個 <code>onChangeText</code> 的 prop</p><p>這個 prop 接受一個 Funciton 可在文字變化時被呼叫</p><p>以及在文字送出時呼叫的 <code>onSubmitEditing</code></p><span id="more"></span><p>這裡的範例會將用戶輸入的文字用空格格開並將文字轉換成 🍕</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span>, <span class="title class_">TextInput</span>, <span class="title class_">View</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">PizzaTranslator</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">const</span> [text, setText] = <span class="title function_">useState</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;padding:</span> <span class="attr">10</span>&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">TextInput</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;height:</span> <span class="attr">40</span>&#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;Type here to translate!&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        // <span class="attr">3</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onChangeText</span>=<span class="string">&#123;newText</span> =&gt;</span> setText(newText)&#125;</span></span><br><span class="line"><span class="language-xml">        defaultValue=&#123;text&#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span> <span class="attr">style</span>=<span class="string">&#123;&#123;padding:</span> <span class="attr">10</span>, <span class="attr">fontSize:</span> <span class="attr">42</span>&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;text.split(&#x27; &#x27;).map((word) =&gt; word &amp;&amp; &#x27;🍕&#x27;).join(&#x27; &#x27;)&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">PizzaTranslator</span>;</span><br></pre></td></tr></table></figure><ol><li><p>Import Text</p></li><li><p>因為 text 是會改變的，因此這裡使用 state 儲存</p></li><li><p>在元件內將觀察輸入的文字並更改 state</p></li><li><p>在 Text 元件內根據 text 顯示轉換完成的資訊</p></li></ol><p>延伸閱讀</p><p><a href="https://reactjs.org/docs/forms.html#controlled-components">Controlled Component</a></p><p><a href="https://reactnative.dev/docs/textinput">TextInput</a></p><p><a href="https://reactnative.dev/docs/handling-touches">Handle touches</a></p><p>下篇待續 …</p>]]></content>
      
      
      
        <tags>
            
            <tag> React-Native </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React-Native之旅Day3-React Fundamentals</title>
      <link href="/donaldwu.github.com/2022/07/06/React-Native%E4%B9%8B%E6%97%85Day3-ReactFundamentals/"/>
      <url>/donaldwu.github.com/2022/07/06/React-Native%E4%B9%8B%E6%97%85Day3-ReactFundamentals/</url>
      
        <content type="html"><![CDATA[<p>接下來繼續跟著文件來認識 React Fundamentals</p><p>React-Native 是基於 React 發展的技術</p><p>因此深入瞭解 React 如何運作也是學習 React-Native 的好方法</p><span id="more"></span><p>首先我們會來了解 React 的幾個核心觀念</p><ul><li><p>components</p></li><li><p>JSX</p></li><li><p>props</p></li><li><p>state</p></li></ul><p><a href="https://reactjs.org/docs/getting-started.html">React’s official documentation</a></p><h2 id="First-component"><a href="#First-component" class="headerlink" title="First component"></a>First component</h2><p>接下來我們就跟著文件來寫第一個 component </p><h3 id="Function-Component"><a href="#Function-Component" class="headerlink" title="Function Component"></a>Function Component</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 4</span></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hellow, I am your cat!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cat</span>;</span><br></pre></td></tr></table></figure><ol><li>import</li></ol><p>要使用 Function Component 的方式定義一個 <code>Cat</code> Component</p><p>首先會需要 import React 以及原生 Text Component</p><ol start="2"><li>此 Component 從一個 fuction 開始</li></ol><p>我們可以將 components 當作一個藍圖，而 function 會 return 一個 React element</p><p>這個 React element 即用來渲染你的畫面</p><br><p>在這裡 return 一個 Text element 表示我們會在畫面上渲染一個 Text 元件</p><ol start="3"><li>為了讓其他地方可以引用這個 Component，這裡使用了 <code>export default</code></li></ol><blockquote><p><a href="https://www.samanthaming.com/tidbits/79-module-cheatsheet/">導出元件整理</a></p></blockquote><ol start="4"><li>最後我們來看看 return 語句</li></ol><p><code>&lt;Text&gt;Hellow, I am your cat!&lt;/Text&gt;</code></p><p>這是種簡化 React 元素的寫法，我們稱為 JSX</p><br><h3 id="Class-Component"><a href="#Class-Component" class="headerlink" title="Class Component"></a>Class Component</h3><blockquote><p>Class components 寫起來稍微比 Function Component 繁複一點</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; <span class="title class_">Component</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line">  <span class="comment">// 3</span></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 5</span></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hellow, I am your cat!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cat</span>;</span><br></pre></td></tr></table></figure><ol><li><p>首先我們要從 React import <code>Component</code></p></li><li><p>這個 Component 從一個 class extending 開始</p></li><li><p>Class 會有一個 <code>render()</code> 函數，裡面也是會 return 一個 React element</p></li><li><p>如同 Function component，這裡也需要將元件 export 出來</p></li><li><p>JSX</p></li></ol><h2 id="JSX"><a href="#JSX" class="headerlink" title="JSX"></a>JSX</h2><p>JSX 語法讓我們可以在 JavaScript 內建構元件</p><p><a href="https://reactjs.org/docs/jsx-in-depth.html">A comporehensice guide to JSX</a></p><p>而且 JSX 其實也是 JavaScript，我們可以在語法裡使用變數</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> name = <span class="string">&quot;Maru&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hello, I am &#123;name&#125;!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cat</span>;</span><br></pre></td></tr></table></figure><p>如上範例，我們可以用括號來引入變數</p><p>而括號內也可以使用 JavaScript 表達式</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getFullName</span> = (<span class="params">firstName, secondName, thirdName</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> firstName + <span class="string">&quot; &quot;</span> + secondName + <span class="string">&quot; &quot;</span> + thirdName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      Hello, I am &#123;getFullName(&quot;Rum&quot;, &quot;Tum&quot;, &quot;Tugger&quot;)&#125;!</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cat</span>;</span><br></pre></td></tr></table></figure><blockquote><p>JSX 語法需要引入 <code>react</code></p></blockquote><h2 id="Custom-Component"><a href="#Custom-Component" class="headerlink" title="Custom Component"></a>Custom Component</h2><p>我們也可以將原生組件組合再一起做出我們的客製化元件</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span>, <span class="title class_">TextInput</span>, <span class="title class_">View</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hello, I am...<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">TextInput</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">height:</span> <span class="attr">40</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">borderColor:</span> &#x27;<span class="attr">gray</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">borderWidth:</span> <span class="attr">1</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">defaultValue</span>=<span class="string">&quot;Name me!&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cat</span>;</span><br></pre></td></tr></table></figure><p>也可以將做好的元件包入其他元件</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span>, <span class="title class_">View</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>I am also a cat!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cafe</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Welcome!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cafe</span>;</span><br></pre></td></tr></table></figure><p>如果有個元件包含這其他元件，則此元件被稱為父元件</p><p>被包含的則稱為子元件</p><p>在這裡每次呼叫 <Cat> 渲染都是不同元件</p><p>意味者我們可以使用不同的 props 來客製化他們</p><h2 id="Props"><a href="#Props" class="headerlink" title="Props"></a>Props</h2><p>就像給貓取名字，我們可以給元件定義 props</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span>, <span class="title class_">View</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params">props</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hello, I am &#123;props.name&#125;!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cafe</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> <span class="attr">name</span>=<span class="string">&quot;Maru&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> <span class="attr">name</span>=<span class="string">&quot;Jellylorum&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> <span class="attr">name</span>=<span class="string">&quot;Spot&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cafe</span>;</span><br></pre></td></tr></table></figure><p>大多數的 React 核心元件都可以通過 props 來完成客製化</p><p>例如 Image 可以從訂製圖片來源</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span>, <span class="title class_">View</span>, <span class="title class_">Image</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">CatApp</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Image</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">source</span>=<span class="string">&#123;&#123;uri:</span> &quot;<span class="attr">https:</span>//<span class="attr">reactnative.dev</span>/<span class="attr">docs</span>/<span class="attr">assets</span>/<span class="attr">p_cat1.png</span>&quot;&#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;width:</span> <span class="attr">200</span>, <span class="attr">height:</span> <span class="attr">200</span>&#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hello, I am your cat!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">CatApp</span>;</span><br></pre></td></tr></table></figure><p>核心元件通常有多種不同的 props</p><p>通常由 property-value pair 的方式設計</p><blockquote><p>雙括號用來在 JSX 中傳遞 JS Object</p></blockquote><h2 id="State"><a href="#State" class="headerlink" title="State"></a>State</h2><p>如果 props 理解成參數，那 State 就是使用紀錄了</p><p>通常用來處理用戶交互的變化</p><p>也就是 props 用來進行初次的元件畫面渲染</p><p>然後利用 state 紀錄可能隨時間變化的資料</p><h3 id="Function-Component-1"><a href="#Function-Component-1" class="headerlink" title="Function Component"></a>Function Component</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span>, <span class="title class_">Text</span>, <span class="title class_">View</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-native&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cat</span> = (<span class="params">props</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">const</span> [isHungry, setIsHungry] = <span class="title function_">useState</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        I am &#123;props.name&#125;, and I am &#123;isHungry ? &quot;hungry&quot; : &quot;full&quot;&#125;!</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      // 3</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onPress</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">          setIsHungry(false);</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        // 4</span></span><br><span class="line"><span class="language-xml">        disabled=&#123;!isHungry&#125;</span></span><br><span class="line"><span class="language-xml">        title=&#123;isHungry ? &quot;Pour me some milk, please!&quot; : &quot;Thank you!&quot;&#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Cafe</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> <span class="attr">name</span>=<span class="string">&quot;Munkustrap&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Cat</span> <span class="attr">name</span>=<span class="string">&quot;Spot&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Cafe</span>;</span><br></pre></td></tr></table></figure><p>可以利用 Hook 為 component 新增 state</p><p><a href="https://reactjs.org/docs/hooks-state.html">useState 相關文件</a></p><p>Hook 是種 function 讓我們可以連結至 React 的功能中</p><p>例如 <code>useState</code> 就是個可以加入 component 的 Hook</p><p><a href="https://reactjs.org/docs/hooks-intro.html">各種 Hooks in React</a></p><ol><li><p>首先還是從 react 中 import useState</p></li><li><p>然後我們就可以利用在 Function 中調用 useState 來幫組建創建變數</p></li></ol><blockquote><p>可以用 useState 紀錄 strings, numbers, Booleans, arrays, objects.</p></blockquote><p>在這邊創建了一個狀態變數 <code>isHungry</code> 並給一個初始值 <code>true</code></p><p>並創建一個用於改變狀態變量的值 <code>setIsHugry</code></p><blockquote><p>[<getter>, <setter>] &#x3D; useState(<initalValue>)</p></blockquote><ol start="3"><li>接下來設定了一個 Button 並帶了一個 <code>onPress</code> 的初始值</li></ol><p>當 <code>onPress</code> 被觸發，就會呼叫到 <code>setIsHungry(false)</code> 改變到 <code>isHungry</code> 的值改變為 false</p><ol start="4"><li>而當 <code>isHungry</code> 為 false，Button 的 <code>disabled</code> prop 就會變為 true 並改變 title</li></ol><blockquote><p><code>isHungry</code> 是使用了 const 關鍵字依然看起來可以被修改的原因是當我們調用 <code>setIsHungry</code> 時，所在的 component 將會重新渲染(整個 Cat 會從頭執行，此時 <code>useState</code> 會返回新值)</p></blockquote><ol start="5"><li>將不同 props 的 <code>Cat</code> 放入 <code>Cafe 元件</code></li></ol><blockquote><p>這裡<code>&lt;&gt;&lt;/&gt;</code> 是JSX 的 <a href="https://zh-hans.reactjs.org/docs/fragments.html">Fragments</a>，可以簡化多餘宣告 View 的麻煩</p></blockquote><h3 id="Class-Components"><a href="#Class-Components" class="headerlink" title="Class Components"></a>Class Components</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &quot;react&quot;;</span><br><span class="line">import &#123; Button, Text, View &#125; from &quot;react-native&quot;;</span><br><span class="line"></span><br><span class="line">class Cat extends Component &#123;</span><br><span class="line">  // 1</span><br><span class="line">  state = &#123; isHungry: true &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;View&gt;</span><br><span class="line">        &lt;Text&gt;</span><br><span class="line">          I am &#123;this.props.name&#125;, and I am</span><br><span class="line">          &#123;this.state.isHungry ? &quot; hungry&quot; : &quot; full&quot;&#125;!</span><br><span class="line">        &lt;/Text&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">          onPress=&#123;() =&gt; &#123;</span><br><span class="line">            // 3</span><br><span class="line">            this.setState(&#123; isHungry: false &#125;);</span><br><span class="line">          &#125;&#125;</span><br><span class="line">          disabled=&#123;!this.state.isHungry&#125;</span><br><span class="line">          title=&#123;</span><br><span class="line">            this.state.isHungry ? &quot;Pour me some milk, please!&quot; : &quot;Thank you!&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/View&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Cafe extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;&gt;</span><br><span class="line">        &lt;Cat name=&quot;Munkustrap&quot; /&gt;</span><br><span class="line">        &lt;Cat name=&quot;Spot&quot; /&gt;</span><br><span class="line">      &lt;/&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default  Cafe;</span><br></pre></td></tr></table></figure><ol><li><p>與 Function 方式不同的是 state 以 object 方式存放</p></li><li><p>元件中獲取 state 是通過 <code>this.state</code></p></li><li><p>修改狀態僅需 <code>this.setState()</code> 傳入要修改的 key-value 物件即可</p></li></ol><blockquote><p>不要給 state 直接賦值，使用 <code>this.setState</code> 才能讓 React 知道狀態的變化且觸發渲染。</p></blockquote><p>接下來就與 Function 類似拉</p><br><p>下篇繼續來學習更多核心元件用法</p>]]></content>
      
      
      
        <tags>
            
            <tag> React-Native </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React-Native之旅Day2-Core Components</title>
      <link href="/donaldwu.github.com/2022/07/05/React-Native%E4%B9%8B%E6%97%85Day2-Core%20Components/"/>
      <url>/donaldwu.github.com/2022/07/05/React-Native%E4%B9%8B%E6%97%85Day2-Core%20Components/</url>
      
        <content type="html"><![CDATA[<p>第二篇就接續 Introduction</p><p>來看看<a href="https://reactnative.dev/docs/intro-react-native-components">Core Components and Native Components</a></p><p>這篇主要討論這些元件是如何在 React-Native 裡運作的。</p><span id="more"></span><h3 id="Views-and-mobile-development"><a href="#Views-and-mobile-development" class="headerlink" title="Views and mobile development"></a>Views and mobile development</h3><p>view 在 Android 跟 iOS 中 view 是建構 UI 的基本元件</p><p>可以是 text、可以是 button, Image 或是負責響應用戶 input 的元件</p><p>這些東西可以互相組合</p><h3 id="Native-Components"><a href="#Native-Components" class="headerlink" title="Native Components"></a>Native Components</h3><p>如同 iOS 開發使用 Swift or Objective-C</p><p>Android 使用 Kotlin or Java</p><p>在 React-Native 使用 JavaScript 調用 React 的元件</p><p>React-Native 會在 Runtime 生成對應的原生畫面的元件</p><p>這部分原生元件稱為 Native Components</p><br><p>React-Native 有著這些已經能馬上使用的元件可以用在 app 開發上的元件我們稱為 Core Components</p><br> <p>React-Native 也可以讓針對平台建立自己的 Native Components</p><p>也可以在<a href="https://reactnative.directory/">社區</a>中尋找別人貢獻的元件</p><h3 id="Core-Components"><a href="#Core-Components" class="headerlink" title="Core Components"></a>Core Components</h3><p><a href="https://reactnative.dev/docs/components-and-apis">API</a></p><p>接下去的章節會來教我們 React 元件的應用</p><p>下篇待續…</p>]]></content>
      
      
      
        <tags>
            
            <tag> React-Native </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>從文件開始React-Native之旅Day1</title>
      <link href="/donaldwu.github.com/2022/07/04/React-Native%E4%B9%8B%E6%97%85Day1/"/>
      <url>/donaldwu.github.com/2022/07/04/React-Native%E4%B9%8B%E6%97%85Day1/</url>
      
        <content type="html"><![CDATA[<p>因為工作需要，開始要跟 React-Native 打交道拉</p><p>那要學習一項技術，<a href="https://reactnative.dev/docs/getting-started">官方文件</a>總是要面對的</p><p>但總覺得年紀大了過目就忘</p><p>自己有時做筆記還是太精簡了</p><p>那不如就寫成 Blog 順便拯救我那可悲的更新頻率🤪</p><span id="more"></span><h3 id="設定環境"><a href="#設定環境" class="headerlink" title="設定環境"></a>設定環境</h3><p>首先就進入導覽首頁看看摟</p><p>看沒兩句果然還是需要先去<a href="https://reactnative.dev/docs/environment-setup">設置一下環境</a></p><p>文件已經蠻清楚了，m1 的 mac 也沒遇到太大問題</p><p>安裝 node, Xcode, cocoapods</p><p>然後創建一個新的初始 App</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx react-native init AwesomeProject</span><br></pre></td></tr></table></figure><p>然後先啟動 <code>Metro</code> 看來是幫我們搞定 <code>javaScript</code> 一些 bunding 設定的工具</p><blockquote><p>If you’re familiar with web development, Metro is a lot like webpack—for React Native apps. Unlike Swift or Objective-C, JavaScript isn’t compiled—and neither is React Native. Bundling isn’t the same as compiling, but it can help improve startup performance and translate some platform-specific JavaScript into more widely supported JavaScript.</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx react-native start</span><br></pre></td></tr></table></figure><p>然後就可以把 App 跑起來看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx react-native run-ios</span><br></pre></td></tr></table></figure><br><p>接下來文檔提到了該如何使用這份文件，可以線性的看下去</p><p>又或者對 React 有了解的可以跳過一些部分</p><p>但對我來說就是看下去拉</p><br><p>前置作業，文檔告訴我們至少要懂些 javaScript </p><br> <p>玩一下慣例的 <a href="https://snack.expo.dev/">Hello World 範例</a> <del>預設不是 Hello World 差評</del></p><br><h3 id="Function-Components-and-Class-Components"><a href="#Function-Components-and-Class-Components" class="headerlink" title="Function Components and Class Components"></a>Function Components and Class Components</h3><p>原本只有 class components 有 state，在 0.59 有了 Hooks API 之後 function components 也可以有 state 了</p><p>因此後面範例官方也會附上兩種方式的寫法</p><p>以前面的 Hello World 為例</p><p>Function Component</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span>, <span class="title class_">View</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">HelloWorldApp</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">flex:</span> <span class="attr">1</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">justifyContent:</span> &#x27;<span class="attr">center</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">alignItems:</span> &#x27;<span class="attr">center</span>&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">HelloWorldApp</span>;</span><br></pre></td></tr></table></figure><p>Class Component</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; <span class="title class_">Component</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Text</span>, <span class="title class_">View</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HelloWorldApp</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">flex:</span> <span class="attr">1</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">justifyContent:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Text</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">HelloWorldApp</span>;</span><br></pre></td></tr></table></figure><p>後面就是提醒你在文章裡會有不同領域開發者熟悉的想法出現在文檔中可以查看</p><p>跟選單路徑會用粗體呈現</p><p>Introduction 就到這邊拉</p><p>下篇待續…</p>]]></content>
      
      
      
        <tags>
            
            <tag> React-Native </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改Mac預設截圖儲存位置</title>
      <link href="/donaldwu.github.com/2022/07/02/%E4%BF%AE%E6%94%B9Mac%E9%A0%90%E8%A8%AD%E6%88%AA%E5%9C%96%E5%84%B2%E5%AD%98%E4%BD%8D%E7%BD%AE/"/>
      <url>/donaldwu.github.com/2022/07/02/%E4%BF%AE%E6%94%B9Mac%E9%A0%90%E8%A8%AD%E6%88%AA%E5%9C%96%E5%84%B2%E5%AD%98%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>近期在用 vim 撰寫 markdown 文檔時感受到其他筆記軟體最大的落差</p><p>大概就是無法簡單截圖畫面後拖進文檔裡了吧</p><p>但轉念一想，既然都要用 vim 了</p><p>還要用滑鼠去拖圖片好像也蠻浪費時間的</p><p>那我能不能截圖完就知道圖檔位置直接用 markdown 語法寫入文檔中呢？</p><span id="more"></span><p>那既然都想到了，就試著改良一下吧</p><p>首先我預想的流程如下</p><ol><li><p>截圖</p></li><li><p>截圖同時複製位置跟檔名到剪貼簿</p></li><li><p>文檔內貼入鏈結</p></li></ol><p>但目前我找到的資訊在截圖時是可以按住 ctrl 複製到剪貼簿</p><p>可以貼上其他有支援的筆記軟體</p><p>但我還不知道如何取得我要的資訊</p><br><p>既然這條路卡住了，那就轉個想法</p><p>我知道我的截圖預設會存在電腦某個指定位置</p><p>可以按下 command + shift + 5 點擊 option 進行儲存位置的修改</p><p>那我可以把流程修改一下</p><ol><li><p>截圖存放到已知位置(放到文檔附近就可以直接取用)</p></li><li><p>文檔內直接用 markdown 語法叫出圖</p></li></ol><br><p>那接下來的問題就是改變截圖儲存位置的動作過於繁瑣</p><p>光要改變截圖儲存位置的操作就太久了</p><p>如果我可以一步就把儲存位置換到現在文件的路徑底下，也可以一步切回原本預設的位置</p><p>使用上應該會更加的方便吧</p><br><p>經過尋找後確定了以下指令可以在 terminal 進行截圖儲存路徑的切換</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.screencapture location &#123;save_path_youwant&#125;</span><br></pre></td></tr></table></figure><p>但每次都要手動打入路徑肯定是不能接受的</p><p>我希望可以利用 script 跳出一個選單給我進行選擇</p><p>我目前應該需要兩個選項</p><ol><li><p>儲存到當前目錄</p></li><li><p>儲存到預設目錄</p></li></ol><p>這樣我就可以簡單選擇了</p><br><p>最終完成了這個簡易的 helper script</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;=========== select the operation ============&quot;</span><br><span class="line">echo &quot;  1) Default&quot;</span><br><span class="line">echo &quot;  2) PWD&quot;</span><br><span class="line"> </span><br><span class="line">read n</span><br><span class="line">case $n in</span><br><span class="line">  1) </span><br><span class="line">    defaults write com.apple.screencapture location ~/Screenshot</span><br><span class="line">    echo &quot;SCREENSHOT WILL SAVE TO: Default&quot;;;</span><br><span class="line">  2) </span><br><span class="line">    defaults write com.apple.screencapture location $(pwd)</span><br><span class="line">    echo &quot;SSCREENSHOT WILL SAVE TO: $(pwd)&quot;;;</span><br><span class="line">  *) echo &quot;invalid option&quot;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>最後再新增個 alias 到 .zshrc 讓呼叫 script 更加方便</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias shot=&#x27;sh Screenshot.sh&#x27;</span><br></pre></td></tr></table></figure><p>使用起來就會是</p><ol><li><p>輸入 script</p></li><li><p>選擇儲存位置</p></li><li><p>開心寫作？(<code>![filename](filename.png)</code>)</p></li></ol><img src=https://dl.dropboxusercontent.com/s/btwg4ca94wno98g/2022-07-02%2019.46.39.gif><p>至於截圖完能不能再更方便一點 …</p><p>像是目前預設檔名是包含時間的一坨，改名也是挺麻煩的</p><p>又或是 snippet 讓圖片插入更輕鬆點</p><p>下次有空繼續玩摟。</p>]]></content>
      
      
      
        <tags>
            
            <tag> terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift 與 Vim</title>
      <link href="/donaldwu.github.com/2022/03/15/Swift%E8%88%87Vim/"/>
      <url>/donaldwu.github.com/2022/03/15/Swift%E8%88%87Vim/</url>
      
        <content type="html"><![CDATA[<p>在 Apple 官方推出 <a href="https://github.com/apple/sourcekit-lsp">sourcekit-lsp</a> 之後</p><p>我就一直在尋找一個使用 Vim 來完成一些日常 Swift 使用的流程</p><p>雖然說在使用 UIKit 的自動補完上目前還是悲劇</p><p>但拿來取代個 Playground 應該是綽綽有餘</p><p>目前配置上是使用 nvim + <a href="https://github.com/neovim/nvim-lspconfig">nvim-lspconfig</a> 配合 sourcekit-lsp</p><p>加上 <a href="https://github.com/glepnir/lspsaga.nvim">lspsaga.nvim</a> 的漂浮視窗來做輸出驗證</p><span id="more"></span><p>使用上可以簡單的打開一個 .swift 檔案</p><p>直接呼叫 Terminal 執行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Swift &#123;filename&#125;</span><br></pre></td></tr></table></figure><img src=https://dl.dropboxusercontent.com/s/71n0wvay4vsoj6i/2022-03-15%2014.56.57.gif><p>或是開一個新的 Swift Package</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#123;SomeFolder&#125;</span><br><span class="line">swift package init</span><br></pre></td></tr></table></figure><p>就可以順道利用裡面的 XCTest 模組來利用測試產出想要的程式碼</p><p>寫完一樣叫出 Terminal 然後執行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Swift test</span><br></pre></td></tr></table></figure><p>就可以看到結果拉</p><img src=https://dl.dropboxusercontent.com/s/g5ej6wc1ipe9yfr/2022-03-15%2015.04.15.gif>]]></content>
      
      
      
        <tags>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>關於App Store上架圖，你可能想知道的那些事</title>
      <link href="/donaldwu.github.com/2022/03/09/%E9%97%9C%E6%96%BCApp%20Store%E4%B8%8A%E6%9E%B6%E5%9C%96%EF%BC%8C%E4%BD%A0%E5%8F%AF%E8%83%BD%E6%83%B3%E7%9F%A5%E9%81%93%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
      <url>/donaldwu.github.com/2022/03/09/%E9%97%9C%E6%96%BCApp%20Store%E4%B8%8A%E6%9E%B6%E5%9C%96%EF%BC%8C%E4%BD%A0%E5%8F%AF%E8%83%BD%E6%83%B3%E7%9F%A5%E9%81%93%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<p>在公司，要上架的時候通常都有 Design Team 提供設計好的上架圖。</p><p>但當你作為一名獨立開發者，這些事就都得自己處理拉。</p><p>抑或是你家設計初來乍到對 App Store 上架圖的規則不太了解，你得跟他解釋一下需求。</p><p>這邊就來統整一下過去我碰過的問題，以及一些好用的工具。</p><span id="more"></span><h3 id="1-我需要哪些尺寸的上架圖？"><a href="#1-我需要哪些尺寸的上架圖？" class="headerlink" title="1. 我需要哪些尺寸的上架圖？"></a>1. 我需要哪些尺寸的上架圖？</h3><hr><p>請看 Apple 提供的 <a href="https://help.apple.com/app-store-connect/#/devd274dd925">Screenshot specifications</a></p><p>細看 Screenshot specifications 裡提供的資訊，</p><p>我們可以依據 Requirement 以及 Screenshot source 這兩個欄位裡是不是必要，是不是有預設值來決定我們要提供哪些尺寸的截圖。</p><p>依照目前蘋果的要求，如果我想上架一款 iOS app，那我會需要提供 </p><table><thead><tr><th>6.5 inch</th></tr></thead><tbody><tr><td>1284 x 2778 pixels (portrait)<br>2778 x 1284 pixels (landscape)<br>1242 x 2688 pixels (portrait)<br>2688 x 1242 pixels (landscape)</td></tr></tbody></table><br><table><thead><tr><th>5.5 inch</th></tr></thead><tbody><tr><td>1242 x 2208 pixels (portrait)<br>2208 x 1242 pixels (landscape)</td></tr></tbody></table><br><p>如果 iPad 也可以用的話，加上</p><table><thead><tr><th>12.9 inch</th></tr></thead><tbody><tr><td>2048 x 2732 pixels (portrait)<br>2732 x 2048 pixels (landscape)</td></tr></tbody></table><br><h3 id="2-調整圖片大小的工具網站"><a href="#2-調整圖片大小的工具網站" class="headerlink" title="2. 調整圖片大小的工具網站"></a>2. 調整圖片大小的工具網站</h3><hr><p><a href="https://www.iloveimg.com/zh-tw">iloveimg</a></p><p>這網站把圖丟進去就可以自己調整需要的大小拉。</p><p>這方法簡單粗暴，可謂獨立開發者的好朋友。</p><br><h3 id="3-iPhone-外殼？"><a href="#3-iPhone-外殼？" class="headerlink" title="3. iPhone 外殼？"></a>3. iPhone 外殼？</h3><hr><p><a href="https://www.appstorescreenshot.com/">App Store Screenshot Generator</a></p><p>這網站可以讓你選擇一些裝置外殼，加上背景以及一些廣告詞。</p><p>而 <a href="https://mockuphone.com/">MockUPhone</a> 可以幫你的圖片單純的加上手機殼，並產生直立跟橫躺兩種圖片。</p><br><h3 id="4-我的-Side-Project-想自己想畫圖？"><a href="#4-我的-Side-Project-想自己想畫圖？" class="headerlink" title="4. 我的 Side Project 想自己想畫圖？"></a>4. 我的 Side Project 想自己想畫圖？</h3><hr><p>作為一款免費工具我想 <a href="https://www.figma.com/?fuid=">Figma</a> 是個不錯的選擇。</p><p>畫完還能利用他提供的 Export 功能把圖輸出。</p><br><h3 id="5-圖像不能包含alpha通道或透明度？"><a href="#5-圖像不能包含alpha通道或透明度？" class="headerlink" title="5. 圖像不能包含alpha通道或透明度？"></a>5. 圖像不能包含alpha通道或透明度？</h3><hr><p>簡單處理可以用 preview 打開圖片 file -&gt; export 把 alpha 的勾選清掉</p><br><h3 id="6-因為圖片被退件？"><a href="#6-因為圖片被退件？" class="headerlink" title="6. 因為圖片被退件？"></a>6. 因為圖片被退件？</h3><p>我遇過的是外框沒有依照尺寸給，我統一都用 6.5 inch 瀏海家族的 iPhoneX 外殼放在 5.5 inch 圖上然後就被退了🤪</p>]]></content>
      
      
      
        <tags>
            
            <tag> 上架圖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nvim + shell script 漂浮視窗快速筆記</title>
      <link href="/donaldwu.github.com/2021/11/30/nvim%20+%20shell%20script%20%E6%BC%82%E6%B5%AE%E8%A6%96%E7%AA%97%E5%BF%AB%E9%80%9F%E7%AD%86%E8%A8%98/"/>
      <url>/donaldwu.github.com/2021/11/30/nvim%20+%20shell%20script%20%E6%BC%82%E6%B5%AE%E8%A6%96%E7%AA%97%E5%BF%AB%E9%80%9F%E7%AD%86%E8%A8%98/</url>
      
        <content type="html"><![CDATA[<p>雖然 mac 本身的 notes 就相當不錯</p><p>甚至在更新到 Monterey 之後也新增了<em>隨處可用</em> 的功能</p><p>第三方也有很多好用的軟體 Notion, hackmd 等等</p><p>但身為一名懶惰到不想把手移動到觸控板上的人來說</p><p>每次有些想法想快速紀錄一點想法</p><p>按下 <code>Option + Space</code> 叫出 Alfred 快速搜尋叫出 notes 或其他軟體之後的操作總覺得就是差了一點點</p><p>因此就決定自己來調整看看</p><span id="more"></span><p>所以首先要確定目標</p><p><em>Target: 鍵盤可以獨自完成從叫出筆記 -&gt; 寫筆記 -&gt; 關閉筆記這一連串動作，並繼續原本的作業</em></p><p>再來確認一下現況</p><ol><li>目前切換 app 都是使用 Alfred 搜索進行切換</li><li>notes 或 Notion 、hackmd 看起來後續操作都不太方便</li></ol><p>依照以上整理，切換看起來不會是大問題，問題是目前我用過的筆記軟體純用鍵盤的操作我都不太習慣</p><p>既然這樣，那就換一款我熟的吧</p><p>nvim + <a href="https://github.com/glepnir/lspsaga.nvim">lspsaga</a></p><p>看來是個不錯的選項</p><p>nvim 跟 tmux 的 terminal 可以提供我熟悉的文檔操作</p><p>而 lspsaga 可以提供漂亮的漂浮視窗並呼叫出 terminal</p><p>可以叫出 terminal 也就代表我們可以執行自訂的 script 來做事</p><hr><p>那這個 script 我希望可以做到幾件事</p><pre><code>1. 用日期為檔名建立一個新的 .md 檔案(如果檔案已存在就直接執行 2)2. 用 nvim 打開檔案，3. 並新增一行時間標題4. 移動至下一行並置中5. 開啟 insert mode</code></pre><p>OK，那接下來就是要實作的細節</p><ol><li><p>lspsaga 叫出漂浮視窗叫出 teminal 並執行 script</p></li><li><p>新增 notetaker.script 執行 <em>新增&#x2F;編輯</em> 筆記文檔</p></li></ol><p>根據 lspsaga 的文件，我們可以在設定檔內加上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nnoremap &lt;silent&gt; nt &lt;cmd&gt;lua require(&#x27;lspsaga.floaterm&#x27;).open_float_terminal(&#x27;notetaker.sh&#x27;)&lt;CR&gt;</span><br></pre></td></tr></table></figure><p>這樣只要在 nvim 的 normal mode 依序按下 nt 就會跳出 terminal 並執行 <code>notaker.sh</code> 這個命令了</p><p>然後就是關鍵的 Script 內容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#/bin/bash</span><br><span class="line"></span><br><span class="line">noteFilename=&quot;/Users/wuderen/Desktop/Note/note-$(date +%Y-%m-%d).md&quot;</span><br><span class="line"></span><br><span class="line">if [ ! -f $noteFilename ]; then</span><br><span class="line">    echo &quot;# Notes for $date&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">nvim -c &quot;norm Go&quot; \</span><br><span class="line">    -c &quot;norm Go## $(date +%H:%M)&quot; \</span><br><span class="line">    -c &quot;norm G2o&quot; \</span><br><span class="line">    -c &quot;norm zz&quot; \</span><br><span class="line">    -c &quot;startinsert&quot; $noteFilename</span><br></pre></td></tr></table></figure><hr><p>然後來執行吧</p><p>相信一定會很順利的…失敗</p><p>首先要先把 <code>notetaker.sh</code> 放到 <code>/usr/local/bin</code> </p><p>讓這個 script 可以順利在全域都可以執行</p><p>然後調整一下檔案的權限，不然也是沒辦法在跳出來的終端上執行的 </p><p><code>chmod u+x notetaker.sh</code></p><p>完成之後就可以來試試看拉</p><p>按下 nt 打開檔案 -&gt; 編輯文檔 -&gt; <code>Option + q</code> 離開</p><img src=https://dl.dropboxusercontent.com/s/5g22qc0gll4phxu/notetaker.gif><p>用起來還不錯 d(&#96;･∀･)b</p><br><p>參考資料</p><ol><li><a href="https://www.youtube.com/watch?v=zB_3FIGRWRU&t=274s">Calin Leafshade: Note Taking in vim with markdown and pandoc and bears, oh my!</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> BASH </tag>
            
            <tag> nvim </tag>
            
            <tag> lspsaga </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tmux入坑心得</title>
      <link href="/donaldwu.github.com/2021/09/08/TMUX%E5%85%A5%E5%9D%91%E5%BF%83%E5%BE%97/"/>
      <url>/donaldwu.github.com/2021/09/08/TMUX%E5%85%A5%E5%9D%91%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<p>自從拿到新的 M1 Mac，免不了是要設定一下環境啦</p><p>在過去的機器上我的終端是使用 iterm2 </p><p>換機器順便摸摸新東西</p><p>主要是覺得切換作業區跟分類的方式是我比較喜歡的</p><p>這篇主要就是紀錄一下我個人常用的功能</p><p>安裝和介紹 google 非常多，這裡就不多重複了</p><span id="more"></span><p>首先是 key 鍵，我把預設使用的 <code>Ctrl + c</code> 改成了 <code>Ctrl + a</code></p><p>然後調整了一下複製貼上的設定</p><p><code>Ctrl + a + [</code> 進入複製模式，然後跟 vim 一樣按下 v 開始選取需要複製的範圍(加上 <code>Ctrl + v</code> 開啟垂直選取)  </p><p>按下 y 確定複製，同時複製到系統剪貼簿</p><p>而且只要在 Tmux 底下都可以用，開著 vim 也可以輕鬆的共用，相當方便．</p><img src=https://dl.dropboxusercontent.com/s/lbges95s9ad53eb/tmuxcopy.gif><p>然後就是切換 Window 與 Session 了</p><p><code>Ctrl + a + w</code> 個人覺得這樣非常清楚知道整體狀況非常舒服</p><img src=https://dl.dropboxusercontent.com/s//oeldggnr94oqwin/tmuxSplit.png><p>螢幕切割其實我並沒有很常用，我通常喜歡直接開全新 Window 或 Session</p><p>但偶爾需要又忘記的時候就按下 <code>Ctrl + a + ?</code> 直接找</p><p>最後先附個 tmux.conf 裡的設定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#Send prefix</span><br><span class="line">set-option -g prefix C-a</span><br><span class="line">unbind-key C-a</span><br><span class="line">bind-key C-a send-prefix</span><br><span class="line"></span><br><span class="line"># Shift arrow to switch windows</span><br><span class="line">bind -n S-Left previous-window</span><br><span class="line">bind -n S-Right next-window</span><br><span class="line"></span><br><span class="line"># Mouse mode</span><br><span class="line">set -g mouse on</span><br><span class="line"></span><br><span class="line">setw -g mode-keys vi</span><br><span class="line">set-option -g default-command &quot;reattach-to-user-namespace -l zsh&quot;</span><br><span class="line">bind-key -T copy-mode-vi &#x27;v&#x27; send-keys -X begin-selection</span><br><span class="line">bind-key -T copy-mode-vi &#x27;y&#x27; send -X copy-pipe-and-cancel &quot;reattach-to-user-namespace pbcopy&quot;</span><br><span class="line">bind-key -T copy-mode-vi &#x27;r&#x27; send-keys -X rectangle-toggle</span><br><span class="line"></span><br><span class="line"># Set easier window split keys</span><br><span class="line">bind-key v split-window -h</span><br><span class="line">bind-key h split-window -v</span><br><span class="line"></span><br><span class="line"># Easy config reload</span><br><span class="line">bind-key r source-file ~/.tmux.conf \; display-message &quot;tmux.conf reloaded&quot;</span><br></pre></td></tr></table></figure><p>再來預計也將 vim 換成 nvim </p><p>原因是看到一些我覺得很好玩的東西</p><p>當初把自動產生預設文章格式的 Script 寫好生成這篇之後…</p><p>這篇就原樣躺在電腦裡兩個月以上有了，下一篇不知道… 呵呵</p>]]></content>
      
      
      
        <tags>
            
            <tag> tmux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20201102</title>
      <link href="/donaldwu.github.com/2020/11/02/20201102/"/>
      <url>/donaldwu.github.com/2020/11/02/20201102/</url>
      
        <content type="html"><![CDATA[<p>昨天跟朋友去看了鬼滅電影版</p><p>我就一句 幽浮桌🐂啤</p> <span id="more"></span><p>一直以特效（X）光汙染（O）為特點的幽浮桌</p><p>我真的覺得這次從節奏到情緒都超出我意料的好</p><p>整場沒太多讓我出戲的感覺</p><p>還在已經看過原作的情況下硬是被擠出幾滴淚 QAQ</p><img src="https://dl.dropboxusercontent.com/s/lsq4trpme0yq42e/%E7%9B%B8%E7%89%87%202020-11-2%20%E4%B8%8B%E5%8D%8811%2018%2031.png"> <p>有機會還想再去幾刷</p><p>大哥RRRRRRRR～～～～</p>]]></content>
      
      
      
        <tags>
            
            <tag> Talk rubbush </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020/10/16</title>
      <link href="/donaldwu.github.com/2020/10/16/20201016/"/>
      <url>/donaldwu.github.com/2020/10/16/20201016/</url>
      
        <content type="html"><![CDATA[<p>新藍芽鍵盤再 iPad 上面使用 iVim竟然跳不出中文輸入法選字框</p><p> ◢▆▅▄▃ 崩╰(〒皿〒)╯潰▃▄▅▆◣</p><p>結果發現要在設定 -&gt; 一般 裡面把自動選字關掉</p><p>蒸蚌 </p><span id="more"></span>]]></content>
      
      
      
        <tags>
            
            <tag> IPAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20200304</title>
      <link href="/donaldwu.github.com/2020/03/04/20200304/"/>
      <url>/donaldwu.github.com/2020/03/04/20200304/</url>
      
        <content type="html"><![CDATA[<p>最近各路小編到底都嗑了什麼</p><p>各種 meme 井噴式湧出</p><p>要一直憋笑很累，但看很 High 就是了 LUL</p><img src="https://dl.dropboxusercontent.com/s/04wxqxz5p6vexub/%E3%82%B3%E3%83%AC%E3%83%B3%E3%83%8A.PNG">]]></content>
      
      
      
        <tags>
            
            <tag> Talk rubbush </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白箱是一部真正的賽車動畫(並沒有)</title>
      <link href="/donaldwu.github.com/2020/03/01/shirobako/"/>
      <url>/donaldwu.github.com/2020/03/01/shirobako/</url>
      
        <content type="html"><![CDATA[<p>連假難得的超早睡超早起</p><p>看到巴哈竟然有上架白箱</p><p>順手點進去就不小心整部重新刷了一遍</p><p>真的好好看啊，怎麼可以這麼好看</p><span id="more"></span><p>查了一下竟然已經是 6 年前的作品了</p><p>第一次看的時候都還是學生呢</p><p>當時只覺得很有趣，很多業界科普然後很好笑</p><p>出社會之後再回來看又有更多不同的感受</p><p>果然 P.A. 的工作女孩系列就是做給社畜看的無誤 XD</p><br/><p>雖然邊看總會邊吐槽</p><p>現實哪有這麼好的事</p><p>但看著劇中角色一步一步跨過那些你我日常都可能遇到的困難</p><p>還是常常不自覺被擠出兩滴淚</p><p>尤其是虐了 20 多集的角色終於看到曙光的時候</p><p>我就看到畫面一句話</p><p><strong>哭 都給我哭</strong></p><br/><p>然後作為一部業界科普動畫</p><p>巴哈字幕註解真的超詳細，各種暫停看註解 XD</p><p>登場人物非常多的職場群像劇，每個人物特徵也都很鮮明</p><p>然後飆車(速限遵守)場景輾壓一堆賽車番?</p><p>真的是一部各方面都很優秀的作品</p><p>神作蓋章XD</p><p>好期待剛上映的劇場版台灣也能上映 RRRR</p>]]></content>
      
      
      
        <tags>
            
            <tag> SHIROBAKO </tag>
            
            <tag> Animation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20200225</title>
      <link href="/donaldwu.github.com/2020/02/25/20200225/"/>
      <url>/donaldwu.github.com/2020/02/25/20200225/</url>
      
        <content type="html"><![CDATA[<p>今天 Xcode 中了邪一樣，瘋狂 Crash</p><p>果然把使用 Xcode 進行開發列為職業傷害是沒有問題的對吧🤪</p><p>不過猜測應該是新抓的 DeviceSupport 檔案或 iOS 13.3.1 的鍋</p>]]></content>
      
      
      
        <tags>
            
            <tag> Talk rubbush </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 Bash script 簡化 iOS ipa OTA 發佈流程 (使用 Dropbox)</title>
      <link href="/donaldwu.github.com/2020/02/18/OTA%E6%B5%81%E7%A8%8B%E6%A6%82%E8%BF%B0/"/>
      <url>/donaldwu.github.com/2020/02/18/OTA%E6%B5%81%E7%A8%8B%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>去年 Fabric 確定合併回 Firebase 後就決定要另外找地方放出測試版給 QA</p><p>在內網架了一個簡單的網站</p><p>讓 QA 可以用手機打開網頁直接下載測試版 app</p><p>但因為 OTA 機制需要 Https </p><p>存放 manifest.plist 跟 ipa 的地方就選擇了 Dropbox </p><p>選擇的原因讓我後面再詳述</p><br/><p>然後因為手動上傳檔案跟 manifest 的修改過程太繁雜了，實在不是給人用的</p><p>簡單敘述就是</p><br/><ol><li><p>包好 ipa</p></li><li><p>上傳 ipa 到 Dropbox</p></li><li><p>分享 ipa 的鏈結</p></li><li><p>將分享鏈結填入 manifest.plist</p></li><li><p>將 manifest.plist 上傳至 Dropbox</p></li><li><p>分享 manifest.plist 的鏈結</p></li><li><p>將 manifest.plist 的鏈結的內容從 dropbox.com</p></li></ol><p>修改成下載用鏈結 dl.dropboxusercontent.com</p><ol start="8"><li>依照 itms-service 協議的格式將修改好的 manifest.plist 的下載鏈結放入網站</li></ol><br/><p>光寫完這一串就累了 @@</p><p>所以就決定寫點 Script 幫忙處理上面那一大串雜事吧</p><p>因為太多了這篇就只處理從 ipa 上傳到 dropbox 到可以下載的部分</p><span id="more"></span><p>首先是選擇 Dropbox 的理由</p><p>首先是 OTA 需要下載位置支援 https</p><p>自己架在內網內的 Server 不太想弄</p><img src="https://dl.dropboxusercontent.com/s/rucfbg0xbxo1w7b/%E7%9B%B8%E7%89%87%202020-2-13%20%E4%B8%8B%E5%8D%883%2001%2035.jpg"><br/><p>所以目標就轉移至簡單使用的雲端儲存服務</p><p>看了一下網路上也很多人分享使用 Dropbox 的文章</p><p>實作起來並不困難</p><p>最重要的是我在 Dropbox 的文件上找到了我需要的功能</p><p>就是能利用 POST 進行<strong>檔案的上傳</strong>以及前面提到的<strong>分享鏈結的產生</strong></p><br/><p>這樣目標就明確了</p><p>在 ipa 打包完成之後，執行 script 去執行上面那一串工作</p><p>首先打開 <a href="https://www.dropbox.com/developers/documentation/http/documentation">Dropbox 文件</a></p><p>Let’s go ~</p><h3 id="上傳-API"><a href="#上傳-API" class="headerlink" title="上傳 API"></a>上傳 API</h3><p>找到 <code>upload</code> 這隻 API 的說明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST https://content.dropboxapi.com/2/files/upload \</span><br><span class="line">    --header &quot;Authorization: Bearer &lt;get access token&gt;&quot; \</span><br><span class="line">    --header &quot;Dropbox-API-Arg: &#123;\&quot;path\&quot;: \&quot;/Homework/math/Matrices.txt\&quot;,\&quot;mode\&quot;: \&quot;add\&quot;,\&quot;autorename\&quot;: true,\&quot;mute\&quot;: false,\&quot;strict_conflict\&quot;: false&#125;&quot; \</span><br><span class="line">    --header &quot;Content-Type: application/octet-stream&quot; \</span><br><span class="line">    --data-binary @local_file.txt</span><br></pre></td></tr></table></figure><p>其中需要修改的位置有三個</p><p>首先是在 <code>Bearer</code> 後面要換成自己 Dropbox 帳號的 token</p><p>Dropbox 也很貼心的把 <get access token> 弄成一個按鈕</p><p>登入之後點下去就會顯示自己的 token 了</p><p>第二個是設定 Dropbox 上要儲存的路徑</p><p>也就是範例中 <code>/Homework/math/Matrices.txt</code> 的部分</p><p>最後是要上傳的本地檔案位置</p><p>也就是最後一行的 <code>local_file.txt</code> </p><br/><h3 id="取得分享鏈結位置"><a href="#取得分享鏈結位置" class="headerlink" title="取得分享鏈結位置"></a>取得分享鏈結位置</h3><p>一樣找到文件裡面 <code>create_shared_link_with_settings</code> 的說明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings \</span><br><span class="line">    --header &quot;Authorization: Bearer &lt;get access token&gt;&quot; \</span><br><span class="line">    --header &quot;Content-Type: application/json&quot; \</span><br><span class="line">    --data &quot;&#123;\&quot;path\&quot;: \&quot;/Homework/math/Matrices.txt\&quot;&#125;&quot;</span><br></pre></td></tr></table></figure><p>這隻 API 也是設定好 token</p><p>然後指定 Dropbox 上要分享的文件位置</p><p>對這次要達成的目標而言，重點在這隻 API 的 response</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;.tag&quot;: &quot;file&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0&quot;,</span><br><span class="line">    &quot;name&quot;: &quot;Prime_Numbers.txt&quot;,</span><br><span class="line">    &quot;link_permissions&quot;: &#123;</span><br><span class="line">        &quot;can_revoke&quot;: false,</span><br><span class="line">        &quot;resolved_visibility&quot;: &#123;</span><br><span class="line">            &quot;.tag&quot;: &quot;public&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;revoke_failure_reason&quot;: &#123;</span><br><span class="line">            &quot;.tag&quot;: &quot;owner_only&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;client_modified&quot;: &quot;2015-05-12T15:50:38Z&quot;,</span><br><span class="line">    &quot;server_modified&quot;: &quot;2015-05-12T15:50:38Z&quot;,</span><br><span class="line">    &quot;rev&quot;: &quot;a1c10ce0dd78&quot;,</span><br><span class="line">    &quot;size&quot;: 7212,</span><br><span class="line">    &quot;id&quot;: &quot;id:a4ayc_80_OEAAAAAAAAAXw&quot;,</span><br><span class="line">    &quot;path_lower&quot;: &quot;/homework/math/prime_numbers.txt&quot;,</span><br><span class="line">    &quot;team_member_info&quot;: &#123;</span><br><span class="line">        &quot;team_info&quot;: &#123;</span><br><span class="line">            &quot;id&quot;: &quot;dbtid:AAFdgehTzw7WlXhZJsbGCLePe8RvQGYDr-I&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;Acme, Inc.&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;display_name&quot;: &quot;Roger Rabbit&quot;,</span><br><span class="line">        &quot;member_id&quot;: &quot;dbmid:abcd1234&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>會回傳一個 json 格式的資料</p><p>其中 <code>url</code> 這個欄位所帶回來的值就是我們這次的目標了</p><p>現在有了這兩隻 API ，就可以達成上傳檔案並拿到分享鏈結的目標了</p><br/><h3 id="manifest-plist"><a href="#manifest-plist" class="headerlink" title="manifest.plist"></a>manifest.plist</h3><p>接下來要處理的就是讓 app 能正確被手機下載所需要的 manifest.plist 了</p><p>最簡單的取得方式就是直接使用 Xcode 打包一次 development 的版本發佈</p><p>裡面就會有產生 manifest.plist 的選項了</p><p>這裡給出來的是使用 Development 打包發佈 ipa 的版本(因為是給自家 QA 測試)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</span><br><span class="line">&lt;plist version=&quot;1.0&quot;&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;items&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;assets&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;kind&lt;/key&gt;</span><br><span class="line">&lt;string&gt;software-package&lt;/string&gt;</span><br><span class="line">&lt;key&gt;url&lt;/key&gt;</span><br><span class="line">&lt;string&gt;https://dl.dropboxusercontent.com/s/dropbox_shared_link/demo.ipa&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;key&gt;metadata&lt;/key&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;bundle-identifier&lt;/key&gt;</span><br><span class="line">&lt;string&gt;&#123;your_bundle_identifier&#125;&lt;/string&gt;</span><br><span class="line">&lt;key&gt;bundle-version&lt;/key&gt;</span><br><span class="line">&lt;string&gt;now_build_number&lt;/string&gt;</span><br><span class="line">&lt;key&gt;kind&lt;/key&gt;</span><br><span class="line">&lt;string&gt;software&lt;/string&gt;</span><br><span class="line">&lt;key&gt;platform-identifier&lt;/key&gt;</span><br><span class="line">&lt;string&gt;com.apple.platform.iphoneos&lt;/string&gt;</span><br><span class="line">&lt;key&gt;title&lt;/key&gt;</span><br><span class="line">&lt;string&gt;demo&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></table></figure><p>這裡面需要修改兩個地方</p><p>一個是用自己 app 的 <code>bundle identifier</code></p><p>直接取代掉 <code>&#123;your_bundle_identifier&#125;</code> </p><p>另外是將 <code>url</code>, <code>title</code> 兩個 key 底下的 demo 換成要發佈的 ipa名稱 與 app 名稱即可</p><br/><p>manifest.plist 中還有兩個地方是等等我們在寫 script </p><p>的時候希望能自動幫我們取代的東西</p><p>一個是 <code>dropbox_shared_link</code> 另一個就是 <code>bundle-version</code></p><p>這樣以後執行時帶入取得的下載位置連結跟版本號就輕鬆多了</p><p>這裡為何只需要修改 <code>dropbox_shared_link</code> 我們文章最後一起討論</p><br/><h3 id="目標細節-amp-檔案配置"><a href="#目標細節-amp-檔案配置" class="headerlink" title="目標細節 &amp; 檔案配置"></a>目標細節 &amp; 檔案配置</h3><p>作為一個減少人工作業的配置，當然需要多將一些繁雜的工作考慮進去</p><br/><h5 id="ipa-path"><a href="#ipa-path" class="headerlink" title="ipa path"></a>ipa path</h5><p>首先是 ipa 檔案打包好之後存放的位置跟上傳之後在 Dropbox 上的位置</p><p>希望可以簡單表達出這是哪一個版本，哪一個環境</p><p>因此在建置機器的本地端會將檔案輸出到 </p><p><code>/&#123;project_name&#125;/&#123;build_version&#125;(&#123;build_number&#125;)&#123;env&#125;</code></p><p>的目錄底下</p><p>並且上傳到 Dropbox 上相同的資料夾位置</p><p>因此假設我的專案名稱叫做 demo</p><p>這版本是 staging 環境的 1.0.1(345) 版本</p><p>打包好我就把它 export 到 <code>/demo/1.0.1(345)staging</code> 這個資料夾底下</p><p>這樣經過一段時間回來也能方便找到對的版本</p><br/><h5 id="manifest-plist-重複利用"><a href="#manifest-plist-重複利用" class="headerlink" title="manifest.plist 重複利用"></a>manifest.plist 重複利用</h5><p>作為大多內容不需要改動的 manifest.plist 檔案</p><p>上面範例檔案的參數就是希望能不需要每次都手動重新配制 manifest.plist</p><p>因此確認寫好的 manifest.plist 正確放置在建置機器下的路徑位置，並記錄下來</p><p>這樣等一下寫 script 的時候我們就知道該指定檔案的位置讓系統找到它了</p><p>如此一來，只要執行完再利用改動將檔案回復為使用前的狀態</p><p>就可以重複利用這個 manifest.plist 的範例檔案了</p><p>設定好一次就可以不理他囉</p><br/><h3 id="BASH-SCRIPT"><a href="#BASH-SCRIPT" class="headerlink" title="BASH SCRIPT"></a>BASH SCRIPT</h3><p>準備工作都完成了，開始來寫關鍵的執行腳本吧</p><p>重新回顧一下前面的步驟，並搭配我們的工具</p><p>可以重新整理出這個 script 實際執行需要的配置與動作如下</p><ol><li><p>接收三個外部參數 {version_number}, {build_number}, {env}</p></li><li><p>上傳 ipa 檔案到 Dropbox</p></li><li><p>取得 ipa Dropbox 分享鏈結</p></li><li><p>處理回傳資訊並拿出需要的鏈結位置資訊</p></li><li><p>將位置資訊以及 {version_number} 寫入 manifest.plist</p></li><li><p>上傳 manifest.plist</p></li><li><p>將本地 manifest.plist 回復為原本的設定</p></li><li><p>取得 manifest.plist Dropbox 分享鏈結</p></li><li><p>處理回傳資訊取得可以用來下載 app 的 url</p></li></ol><p>如下範例檔案</p><p>upload_dropbox_share_tamplate.sh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"># Step1 Get parameter</span><br><span class="line">echo $1</span><br><span class="line">echo &quot;version number&quot;</span><br><span class="line">echo $2</span><br><span class="line">echo &quot;build number&quot;</span><br><span class="line">echo $3</span><br><span class="line">echo &quot;env&quot;</span><br><span class="line"># prod/preprod/staging/dev</span><br><span class="line"></span><br><span class="line">echo &quot;&lt;your_file_location&gt;/demo$1($2)$3&quot;</span><br><span class="line"></span><br><span class="line"># Step2 upload ipa to dropbox</span><br><span class="line">curl -X POST https://content.dropboxapi.com/2/files/upload \</span><br><span class="line">--header &quot;Authorization: Bearer &lt;access_token&gt;&quot; \</span><br><span class="line">--header &quot;Dropbox-API-Arg: &#123;\&quot;path\&quot;: \&quot;/demo/$1($2)$3/demo.ipa\&quot;,\&quot;mode\&quot;: \&quot;add\&quot;,\&quot;autorename\&quot;: true,\&quot;mute\&quot;: false,\&quot;strict_conflict\&quot;: false&#125;&quot; \</span><br><span class="line">--header &quot;Content-Type: application/octet-stream&quot; \</span><br><span class="line">--data-binary &quot;@&lt;your_file_location&gt;/demo$1($2)$3/demo.ipa&quot;</span><br><span class="line"></span><br><span class="line">#---------</span><br><span class="line"></span><br><span class="line"># Step3 Create ipa file shared_link</span><br><span class="line">response=$(curl -X POST https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings \</span><br><span class="line">--header &quot;Authorization: Bearer &lt;access_token&gt;&quot; \</span><br><span class="line">--header &quot;Content-Type: application/json&quot; \</span><br><span class="line">--data &quot;&#123;\&quot;path\&quot;: \&quot;/demo/$1($2)$3/demo.ipa\&quot;&#125;&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># Step4 Handle response</span><br><span class="line"># replce response string ex: &quot;https://www.dropbox.com/s/tcw9p8uxrlwzw09/xxx.ipa?dl=0.....&quot;</span><br><span class="line">echo $response</span><br><span class="line"># cut dl=0</span><br><span class="line">left=$&#123;response%?dl=0*&#125;</span><br><span class="line"># cut /xxx.ipa</span><br><span class="line">ipaName=$&#123;left%/*&#125;</span><br><span class="line"># cut https://www.dropbox.com/s/</span><br><span class="line">link=$&#123;ipaName#*s/&#125;</span><br><span class="line">echo $link</span><br><span class="line"></span><br><span class="line"># Step5 Set manifest file</span><br><span class="line"># dropbox_shared_link write into manifiest.plist</span><br><span class="line">sed -i &#x27;&#x27; &quot;s/dropbox_shared_link/$&#123;link&#125;/g&quot; &lt;your_file_location&gt;/manifest.plist</span><br><span class="line">sed -i &#x27;&#x27; &quot;s/now_build_number/$1/g&quot; &lt;your_file_location&gt;/manifest.plist</span><br><span class="line"></span><br><span class="line"># Step6 Upload manifest.plist</span><br><span class="line">curl -X POST https://content.dropboxapi.com/2/files/upload \</span><br><span class="line">--header &quot;Authorization: Bearer &lt;access_token&gt;&quot; \</span><br><span class="line">--header &quot;Dropbox-API-Arg: &#123;\&quot;path\&quot;: \&quot;/demo/$1($2)$3/manifest.plist\&quot;,\&quot;mode\&quot;: \&quot;add\&quot;,\&quot;autorename\&quot;: true,\&quot;mute\&quot;: false,\&quot;strict_conflict\&quot;: false&#125;&quot; \</span><br><span class="line">--header &quot;Content-Type: application/octet-stream&quot; \</span><br><span class="line">--data-binary &quot;@&lt;your_file_location&gt;/manifest.plist&quot;</span><br><span class="line"></span><br><span class="line"># Step7 Reset dropbox_shared_link in manifiest.plist</span><br><span class="line">sed -i &#x27;&#x27; &quot;s/$&#123;link&#125;/dropbox_shared_link/g&quot; &lt;your_file_location&gt;/manifest.plist</span><br><span class="line">sed -i &#x27;&#x27; &quot;s/$1/now_build_number/g&quot; &lt;your_file_location&gt;/manifest.plist</span><br><span class="line"></span><br><span class="line"># Step8 share_menifest.plist</span><br><span class="line">response_manifest=$(curl -X POST https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings \</span><br><span class="line">--header &quot;Authorization: Bearer &lt;access_token&gt;&quot; \</span><br><span class="line">--header &quot;Content-Type: application/json&quot; \</span><br><span class="line">--data &quot;&#123;\&quot;path\&quot;: \&quot;/demo/$1($2)$3/manifest.plist\&quot;&#125;&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># Step9 Handle response</span><br><span class="line"># replce response string ex: &quot;https://www.dropbox.com/s/tcw9p8uxrlwzw09/manifest.plist?dl=0&quot;</span><br><span class="line">echo $response_manifest</span><br><span class="line"># cut dl=0</span><br><span class="line">left_m=$&#123;response_manifest%?dl=0*&#125;</span><br><span class="line"># cut /manifest.plist</span><br><span class="line">ipaName_m=$&#123;left_m%/*&#125;</span><br><span class="line"># cut https://www.dropbox.com/s/</span><br><span class="line">link_m=$&#123;ipaName_m#*s/&#125;</span><br><span class="line">echo $link_m</span><br></pre></td></tr></table></figure><p>使用上非常簡單，依照上方範例</p><p>修改好裡面檔案路徑位置之後</p><p>在 terminal 下移動到存放這個 upload_dropbox_share_tamplate.sh 的位置</p><p>執行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh upload_dropbox_share_tamplate.sh &#123;version_number&#125; &#123;build_number&#125; &#123;<span class="built_in">env</span>&#125;</span><br></pre></td></tr></table></figure><p>執行完會回覆一組字串</p><p>將這組字串組好 Dropbox 下載鏈結並放入網站中</p><p>點擊連結就可以下載 app 拉</p><br/><h3 id="關於-OTA-原理與-Dropbox-下載鏈結"><a href="#關於-OTA-原理與-Dropbox-下載鏈結" class="headerlink" title="關於 OTA 原理與 Dropbox 下載鏈結"></a>關於 OTA 原理與 Dropbox 下載鏈結</h3><p>實作完了我們就來看看前面沒有提到的部分吧</p><p>簡單來說就我理解到的 OTA(Over-the-Air) 安裝</p><p>是瀏覽器利用 itms-service 協議讓使用者的手機取得 manifest.plist 裡的資訊</p><p>app 名稱，版本，下載位置等等，並觸發下載流程</p><p><a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/iPhoneOTAConfiguration/OTASecurity/OTASecurity.html">Over-the-Air Documentation</a></p><p>因此在 manifest.plist 中需要明確指定 ipa 的下載位置</p><p>而網站裡也需要有 manifest.plist 的下載位置讓瀏覽器去進行下載動作</p><p>為此我們必須將上傳至 Dropbox 並且取得可以用來<strong>直接</strong>下載的鏈結</p><p>依照 Dropbox 的說明，想要直接下載時</p><p>可以使用 <code>dl.dropboxusrecontent</code> 的路徑來取得檔案</p><p>並且可以發現下載鏈結的格式都可以統一成 </p><p><code>https://dl.dropboxusercontent.com/s/&#123;dropbox_shared_link&#125;/filename</code></p><p>而取得分享鏈結的 api 回傳的 url 欄位格式會是 </p><p><code>https://www.dropbox.com/s/&#123;dropbox_shared_link&#125;/filename</code></p><p>所以在處理下載鏈結時，只需要取出中間 {dropbox_shared_link} 部分的字串就可以了</p><p>BASH 檔案裡的 Step 3, Step 8 我就直接針對 response 的字串結果去處理</p><p>直接把前後的字通通摳掉，就可以得到我需要的 {dropbox_share_link} 字串了</p><p>再將這字串做需要的處理即可，像是 Step 4 塞入 manifest.plist</p><br/><p>範例檔案最後只有將 manifest.plist 的下載需要的 {dropbox_share_link}</p><p>這一串字印出來而已</p><p>其實還可以做後續的處理</p><p>像我是把它組成正確的下載鏈結，然後傳到 slack 跟更新到網站上</p><p>這樣搭配 CI + fastlane 就能完成 push code 完成就自動打包好送到 QA 手上拉</p><p>又朝著薪水小倫的目標更近一步了呢 0.0b</p><img src="https://dl.dropboxusercontent.com/s/d9jnudaenk9sav1/%E7%9B%B8%E7%89%87%202020-2-19%20%E4%B8%8B%E5%8D%886%2018%2054.jpg"><br/><p>有空再來寫寫打包的故事 emmm …</p><img src="https://dl.dropboxusercontent.com/s/02nokkwa0l06qji/%E7%9B%B8%E7%89%87%202020-2-19%20%E4%B8%8B%E5%8D%884%2028%2024.jpg">]]></content>
      
      
      
        <tags>
            
            <tag> OTA </tag>
            
            <tag> BASH </tag>
            
            <tag> Dropbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20201213</title>
      <link href="/donaldwu.github.com/2020/02/13/20201213/"/>
      <url>/donaldwu.github.com/2020/02/13/20201213/</url>
      
        <content type="html"><![CDATA[<p>下班前踩中大坑真是刺激</p><p>果然我就是菜</p><img src="https://dl.dropboxusercontent.com/s/rucfbg0xbxo1w7b/%E7%9B%B8%E7%89%87%202020-2-13%20%E4%B8%8B%E5%8D%883%2001%2035.jpg"><span id="more"></span><p>在收到明天要測試的包版 target 之後</p><p>因為 CI 機器目前快撐不住了(高齡 mac mini)</p><p>打算先自己輸出 ipa 給 QA 進行測試</p><p>然後 XCode 就跳出了 IPA processing failed</p><p>乖乖按下 Show Logs 打開 IDEDistribution.standard.log 跟 google … 果然我並不孤單XD</p><p>看起來是 XCode 11 在打包時摳掉了對舊的 cputype i386 跟模擬器 x86_64 的支持</p><p>而我剛拉進專案的新 framework 看起來是中槍了</p><p>所以在 log 裡搜尋 cputype 果然就找到了錯誤訊息</p><img src="https://dl.dropboxusercontent.com/s/2k41b2io7ypctlh/%E7%9B%B8%E7%89%87%202020-2-12%20%E4%B8%8B%E5%8D%887%2033%2057.jpg"><p>看有大大教學可以先查證看看該 framework 有支持哪些架構</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lipo -info &#123;framework_name&#125;</span><br></pre></td></tr></table></figure><p>然後把不想支援的刪除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lipo -remove &#123;cputype&#125; &#123;framework_name&#125; -o &#123;framework_name&#125;</span><br></pre></td></tr></table></figure><p>再重新打包就可以了</p><p>但是 BUT しかし</p><p>我把 i386 跟 x86_64 的支援從 framework 裡面刪除之後</p><p>確實不能 build 在模擬器上了拉</p><p>但是打包輸出依然死去 …</p><p>好奇去翻了兩個用了很久的 framework 發現他們也還是支援 i386 跟 x86_64 啊</p><p>那到底？？？</p><p>只好乖乖先把有問題的新 framework 拉掉</p><p>還好本來就是實驗性質的小小功能，重寫並沒有花上太多時間</p><p>不過這次還是深刻體會自己到對 libries, framework 方面的無知</p><p><a href="https://twitter.com/ethanhuang13/status/1227827902714003456?s=21">剛好也在推特上看到 13 大大正好發了個推思考兩者的差異</a></p><p>是時候好好重新學習一下相關知識了</p><p>這業障重啊(PPSSPP 真好玩)</p><img src="https://dl.dropboxusercontent.com/s/gte9fmgbr6hffj1/%E7%9B%B8%E7%89%87%202019-12-18%20%E4%B8%8B%E5%8D%884%2023%2005.jpg">]]></content>
      
      
      
        <tags>
            
            <tag> Talk rubbush </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20200212</title>
      <link href="/donaldwu.github.com/2020/02/12/20200212/"/>
      <url>/donaldwu.github.com/2020/02/12/20200212/</url>
      
        <content type="html"><![CDATA[<p>昨天花了些時間把這個 blog 的部署串起來</p><p>現在早起打打淦話都覺得開心了起來呢？？？</p><span id="more"></span><p>早上公車開的超級無敵慢</p><p>看看 Bus+ ，還好下一班要接的公車還來得及</p><p>不過冷靜想想，早上那位司機的車速才是正常的啊！！！</p><p>我家是山區，本來就不該太快</p><p>只是老司機太多，大家都用飛的一樣XD</p><p>然候早上文章打一打竟然 crash 崩潰…  </p><p>踢公北啊 ヾ(;ﾟ;Д;ﾟ;)ﾉﾞ</p><p>暫時放棄 ish ，然後發現 iVim + Working Copy 意外順手</p><p>可以直接資料互通真棒 </p><p>iVim 編寫完可以直接 commit 到 Working Copy</p><p>也能直接 share Working Copy 的文件進 iVim 編輯</p><p>我先給 80 分，繼續用用看</p>]]></content>
      
      
      
        <tags>
            
            <tag> Talk rubbush </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20200211</title>
      <link href="/donaldwu.github.com/2020/02/11/20200211/"/>
      <url>/donaldwu.github.com/2020/02/11/20200211/</url>
      
        <content type="html"><![CDATA[<p>記錄一下目前摸索出的 ipad 寫 blog 有用到的工具</p><p>目前 blog 是利用 hexo 架在 github 上，有兩個 repo， 一個是網站，另一個是 source code</p><p>部署是使用 Github Actions ， 在 source code push 時進行部署</p><p>撰寫是在 ipad 本地使用 ish 系統內使用 vim 撰寫並推送到 remote</p><p><a href="https://hdj.me/github-actions-hexo-cicd/">Github Actions 設置參考</a></p><p>ish 作為 Alpine Linux 系統需要自己安裝 git, vim, openssh</p><p>並配置好 vim 環境與外掛工具</p><span id="more"></span>]]></content>
      
      
      
        <tags>
            
            <tag> IPAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ipad-pro-配置之路之軟體不專業推薦</title>
      <link href="/donaldwu.github.com/2019/09/19/ipad-pro-%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF%E4%B9%8B%E8%BB%9F%E9%AB%94%E8%B8%A9%E9%9B%B7/"/>
      <url>/donaldwu.github.com/2019/09/19/ipad-pro-%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF%E4%B9%8B%E8%BB%9F%E9%AB%94%E8%B8%A9%E9%9B%B7/</url>
      
        <content type="html"><![CDATA[<p>在尋找目標軟體之前先列出我目前會需要使用的情境</p><ol><li>連線到 VPS 主機上確認後臺狀態</li><li>git pull code 到本地進行修改, git push</li><li>文件編輯</li></ol><span id="more"></span><p>首先是用來連線到遠端機器的軟體</p><p>目前有嘗試過的有這兩款 <a href="https://apps.apple.com/tw/app/termius-ssh-client/id549039908">termius</a> 以及<a href="https://apps.apple.com/tw/app/blink-shell-mosh-ssh-client/id1156707581">blink shell</a></p><p>就需求上來說都能滿足我的使用需求，ssh 連線，key 的管理等等</p><p>也都可以直接在 ipad 的檔案裡面進行操作</p><p>雖然從根本來說畢竟還是 iOS 的架構，根目錄還是鎖的死死的</p><p>如果哪天能直接在 ipad 上有 macOS 的系統就好了 <em>(´ཀ&#96;」 ∠)</em> </p><p>但目前看起來還有得等(阿不是說這台 pro 已經屌打一堆筆電了嗎QWQ，ipadOS…emmmmm…)</p><p>目前使用上是以 blink 為主，搭配 siri shortcut 可以很簡單的做到一鍵遠端連線的功能</p></br><p>接下來就是 git 以及編輯器拉</p><p>目前是使用 <a href="https://apps.apple.com/tw/app/working-copy-git-client/id896694807">Working copy</a> 搭配 <a href="https://apps.apple.com/tw/app/textastic-code-editor-8/id1049254261">Textastic</a></p><p>進行使用，Working copy 真的已經很完整，我平常會用到的 git 操作都有了</p><p>遠端 pull 下來之後 Textastic 也已經支援直接把 Working copy 的 repo import 進來編輯，相當方便</p><p>本文的撰寫就是用這樣的搭配下在 Textastic 下進行編輯，非常順暢的書寫體驗</p><p>不過身為一名不務正業又不專業的 iOS 工程師這裡還是得說</p><p>這樣的組合要寫 iOS 還是有點不舒服，畢竟本地端無法編譯，寫個網頁 Textastic 還有 preview in safari 的功能</p><p>iOS 如果拉回本地還得推回去做編譯，還不是推回去就看得到結果 <em>(´ཀ&#96;」 ∠)</em> </p><p>不得不說這是真的硬傷，目前還是乖乖用 mac 吧</p><p>不過基本的 iOS 功能實驗，使用 apple 自己推出的 <a href="https://apps.apple.com/tw/app/swift-playgrounds/id908519492">playground for ipad</a><br>就已經相當好用了</p><p>一些臨時想到的小功能在這裡實驗應該是綽綽有餘</p><p>編輯器這裡還有個小小的遺珠之憾 <a href="https://apps.apple.com/tw/app/buffer-editor-code-editor/id502633252">buffer</a></p><p>這個 app 兼具 git 與編輯器功能，編輯器甚至支援一部分基礎 vim 指令</p><p>剛開始用的非常順暢，但是可惜的是在我拉下我的其中一個專案進行使用時，出現了無法忽視的嚴重 lag</p><p>我目前不確定這是否是我專案的問題，但目前只好暫時割愛</p><p>不然就綜合使用體驗來說 buffer editer 真的非常棒</p></br><p>偶爾需要寫一些小文檔，或是臨時的紀錄時，我會使用的 markdown app <a href="https://apps.apple.com/tw/app/markdown/id1472328263">Markdown</a></p><p>真的就是個輕量的 markdown 文檔編輯器，簡單的畫面，清楚的左編寫右渲染結果呈現</p><p>用起來個人蠻喜歡的，也支援直接輸出 markdown 文檔，PDF，web頁面跟截圖功能</p><p>以及最近同事推薦的 hackmd.io(<a href="https://hackmd.io/">https://hackmd.io</a>) 也是相當好用</p><p><a href="https://apps.apple.com/tw/app/goodnotes-5/id1444383602">Good notes</a> 配上 apple pancel 在文件上面塗鴉些幹話也變得相當簡單</p><p>甚至拿來作簡單的流程圖也沒問題(唯一的問題是那隻貴鬆鬆的筆啊)</p></br><p>這台 ipad 確實很大程度改變了我目前的寫作習慣(原本沒有應該也可以算改變吧_(´ཀ&#96;」 ∠)_)</p><p>我可以不背著我的 mac pro 也能瞎掰寫日記了XD</p><p>但是以一個工程師來說最根本的問題還是你依舊需要一台主機負責作為最終需要編譯或部署的主角</p><p>對於希望能一台 ipad 解決所有工作的人來說還是一個不小的缺憾啊</p><p>蘋果拔拔快給我個能編譯的 ipadOS 啊啊啊啊啊啊啊啊啊啊啊～～～～</p><h3 id="19-x2F-10-x2F-23-更新-Hackmd-心得"><a href="#19-x2F-10-x2F-23-更新-Hackmd-心得" class="headerlink" title="19&#x2F;10&#x2F;23 更新 - Hackmd 心得"></a>19&#x2F;10&#x2F;23 更新 - Hackmd 心得</h3><p>在使用了一陣 hackmd 之後，更新這個部落格的工作就可以讓 hackmd 直接同步</p><p>在 github 上的專案，進行文章的修改，這應該是目前個人用起來最順手的一個方式</p><h3 id="19-x2F-10-x2F-23-更新趴兔-iSH"><a href="#19-x2F-10-x2F-23-更新趴兔-iSH" class="headerlink" title="19&#x2F;10&#x2F;23 更新趴兔 - iSH"></a>19&#x2F;10&#x2F;23 更新趴兔 - iSH</h3><p><a href="https://ish.app/">iSH</a> 這是在尋找各種使用資料時找到的 iOS app</p><p>目前尚在 beta 版本，原理應該使直接運行一個 apline linux 系統</p><p>系統本身極小，但是相對的就是需要什麼都得自己裝，少了什麼都得自己找</p><p>目前更新網站用的 hexo 需要使用的 npm 因為相容性問題尚無法使用</p><p>只能默默按下 github 上面 issue 的關注XD</p><p>不過本身執行一些 linux 的基本功能確實是順手很多</p><p>期待能在 iPad 上面執行多數工作的那一天能快點到來 (シ_ _)シ</p>]]></content>
      
      
      
        <tags>
            
            <tag> IPAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ipad pro 配置之路 - 序-硬體設備</title>
      <link href="/donaldwu.github.com/2019/09/11/ipad-pro-%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/"/>
      <url>/donaldwu.github.com/2019/09/11/ipad-pro-%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>今年中一個手滑手邊就多了一台 11 吋 ipad pro</p><p>都課下去了勢必要讓這臺 ipad 能一定程度上成為我生產力工具的一部分</p><img src="/donaldwu.github.com/2019/09/11/ipad-pro-%E9%85%8D%E7%BD%AE%E4%B9%8B%E8%B7%AF/photo.jpeg" class=""><p>看看這過去一年死寂一片的部落格</p><p>這次購買純粹只是為了技術研究以及養成寫作習慣為目才買的拉</p><p>就跟小時候買電腦絕對不是為了打電動，是想好好讀書查資料的邏輯 87 趴像呢</p><span id="more"></span><p>然後在一番研究把玩之後，多多少少讓我摸索出一些用法來了</p><p>以下整理有用到的 app 與服務相關的一些心得</p><p>首先是配備，這次購入的是 11 吋 ipad pro 64G wifi 版</p><p>不過用了些時日還是真心覺得有行動網路方便些，雖然接自己手機網路也很快</p><p>總是需要多帶些東西，比較不方便</p><p>鍵盤我是直接與 ipad 一起購買了 smartkeyboard</p><p>實際打起來還算舒適，唯一缺點反而是在切換輸入法的時候軟體的反應速度真的慢</p><p>經常打字在中英切換時第一個字還是原本的語言，就得回頭修改，挺煩人的</p><p>不過整體使用下來久了也就漸漸習慣，還常常回去用 mac 的時候不自覺的想用手戳螢幕@@</p><p>韌體方面也 ipadOS 由於還是 Beta 版，多少會有些閃退，行為不如預期的狀況</p><p>但還不到嚴重影響使用的程度</p><p>最後是 apple pancil </p><p>老實說手感不錯，使用上配合好 app 真的不錯</p><p>畫起流程圖或是修改一些文件都很方便</p><p>而且可以避免手指一直去戳螢幕搞得螢幕很髒</p><p>但這個價格 emmm…..</p><p>還是買之前請好好評估自己對繪圖工作的需求量XD</p>]]></content>
      
      
      
        <tags>
            
            <tag> IPAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 Swift 做個推播發送器並在 Homebrew 上 Release</title>
      <link href="/donaldwu.github.com/2018/11/17/%E7%94%A8-Swift-%E5%81%9A%E5%80%8B%E6%8E%A8%E6%92%AD%E7%99%BC%E9%80%81%E5%99%A8%E4%B8%A6%E5%9C%A8-Homebrew-%E4%B8%8A-Release/"/>
      <url>/donaldwu.github.com/2018/11/17/%E7%94%A8-Swift-%E5%81%9A%E5%80%8B%E6%8E%A8%E6%92%AD%E7%99%BC%E9%80%81%E5%99%A8%E4%B8%A6%E5%9C%A8-Homebrew-%E4%B8%8A-Release/</url>
      
        <content type="html"><![CDATA[<p>上個月的 <a href="https://medium.com/iplayground/iplayground-2018-slides-11587ebdddc5">iPlayground</a> 真的收穫良多</p><p>今天就來記錄一下如何將寫好的 swift 程式變成可執行檔並上傳至 homebrew 供人下載 </p><p><del>隔了一個月!!?? 謎之音：沒關係拉，Blog 都能從一月拖到十一月一篇都生不出來了</del></p><p><a href="https://github.com/DonaldlWu/DRWApns">GitHub 位置</a></p><span id="more"></span><p>程式本身並不困難，僅僅是接收使用者在 Terminal 輸入的參數取得發送推播需要的資訊</p><p>並拉入現成的 Package <a href="https://github.com/PerfectlySoft/Perfect-Notifications.git">Perfect-Notifications</a></p><p>幫忙處理發送推播的實作，下次再來詳細討論關於發推播這件事</p><p>今天主要來記錄一下將東西放到 homebrew 上這件事</p><p>在完成程式的開發後主要的 Release 流程有以下幾點</p><ol><li><p>撰寫 Makefile</p></li><li><p>將程式 push 至 Github 並 Release</p></li><li><p>用 brew create 製作 formula file</p></li><li><p>將 formula push 到一個管理用的 Github Repo</p></li><li><p>在 terminal 驗證是否能成功下載安裝與執行</p></li></ol><h3 id="撰寫-Makefile"><a href="#撰寫-Makefile" class="headerlink" title="撰寫 Makefile"></a>撰寫 Makefile</h3><p>首先在專案下新建個 Makefile 檔案</p><p>內容如下</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PREFIX?=/usr/<span class="keyword">local</span></span><br><span class="line">PROD_NAME=DRWApns</span><br><span class="line">PROD_NAME_HOMEBREW=DRWApns</span><br><span class="line"></span><br><span class="line">build:</span><br><span class="line">  swift build <span class="comment">--disable-sandbox -c release -Xswiftc -static-stdlib</span></span><br><span class="line">build-<span class="keyword">for</span>-linux:</span><br><span class="line">  swift build <span class="comment">--disable-sandbox -c release</span></span><br><span class="line">install: build</span><br><span class="line">  mkdir -p <span class="string">&quot;$(PREFIX)/bin&quot;</span></span><br><span class="line">  cp -f <span class="string">&quot;.build/release/DRWApns&quot;</span> <span class="string">&quot;$(PREFIX)/bin/DRWAPns&quot;</span></span><br><span class="line"><span class="built_in">run</span>:</span><br><span class="line">.build/release/$(PROD_NAME)</span><br></pre></td></tr></table></figure><p>接下來就是 Push 到 Github</p><h3 id="Push-Repo-amp-Release"><a href="#Push-Repo-amp-Release" class="headerlink" title="Push Repo &amp; Release"></a>Push Repo &amp; Release</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>在 Repo 的首頁找到 Releases 的按鈕</p><p>進去之後點擊右上新增一個 new release </p><p><img src="https://user-images.githubusercontent.com/28559915/48698417-fe572500-ec21-11e8-9ed0-3ab1edbd44a8.gif" alt="newdraft"></p><p>接下來將游標移到 Source code(tar.gz) 右鍵複製一下鏈結</p><p><img src="https://user-images.githubusercontent.com/28559915/48698728-ca303400-ec22-11e8-8055-bda6047cbc6a.gif" alt="copylink"></p><h3 id="用-brew-create-製作-formula-file"><a href="#用-brew-create-製作-formula-file" class="headerlink" title="用 brew create 製作 formula file"></a>用 brew create 製作 formula file</h3><p>接下來打開 terminal 輸入</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew create 剛剛複製的鏈結</span><br></pre></td></tr></table></figure><p>homebrew 就會幫你做好一個 formula.rb 檔案</p><p>附上最後我們調整過後需要的部分</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Documentation: https://docs.brew.sh/Formula-Cookbook</span></span><br><span class="line"><span class="comment">#                https://www.rubydoc.info/github/Homebrew/brew/master/Formula</span></span><br><span class="line"><span class="comment"># PLEASE REMOVE ALL GENERATED COMMENTS BEFORE SUBMITTING YOUR PULL REQUEST!</span></span><br><span class="line"><span class="built_in">class</span> Drwapns &lt; Formula</span><br><span class="line">    desc <span class="string">&quot;A tool for sending push notification to iOS devices&quot;</span></span><br><span class="line">    homepage <span class="string">&quot;&quot;</span></span><br><span class="line">    url <span class="string">&quot;https://github.com/DonaldlWu/DRWApns/archive/1.0.5.tar.gz&quot;</span></span><br><span class="line">    sha256 <span class="string">&quot;ad5b27f1b5ca929311ec5873b4ecc61d2ca7aaa496531b1b9024f9a714c2020a&quot;</span></span><br><span class="line">  def install</span><br><span class="line">    system <span class="string">&quot;make&quot;</span>, <span class="string">&quot;install&quot;</span>, <span class="string">&quot;PREFIX=#&#123;prefix&#125;&quot;</span> <span class="comment"># if this fails, try separate make/make install steps</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  depends_on :xcode =&gt; [<span class="string">&quot;9.2&quot;</span>, :build]</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>接下來在 Github 上創一個負責集中管理 .rb 檔案的 Repo</p><p>並將改好的 .rb 檔 push 上去</p><h3 id="驗證下載"><a href="#驗證下載" class="headerlink" title="驗證下載"></a>驗證下載</h3><p>一樣來到 Terminal 輸入</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install &#123;.rb 檔 repo 的名稱&#125;/&#123;.rb 檔名&#125;</span><br></pre></td></tr></table></figure><p>以我的 Repo 當範例就是</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install DonaldlWu/homebrew-taps/drwapns</span><br></pre></td></tr></table></figure><img width="1038" alt="2018-11-18 9 20 16" src="https://user-images.githubusercontent.com/28559915/48673004-06f32100-eb78-11e8-8e15-c14f072ed3dc.png"><p>最後移動到 <code>/usr/local/Cellar/&#123;rb檔名&#125;/&#123;release version&#125;/bin</code></p><p>並執行編譯好的的執行檔 </p><p>Done!!!</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> SPM </tag>
            
            <tag> Push Notification </tag>
            
            <tag> Homebrew </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS Jenkins之旅Part2</title>
      <link href="/donaldwu.github.com/2018/02/07/iOS-Jenkins%E4%B9%8B%E6%97%85Part2/"/>
      <url>/donaldwu.github.com/2018/02/07/iOS-Jenkins%E4%B9%8B%E6%97%85Part2/</url>
      
        <content type="html"><![CDATA[<p>到底富奸了多久呢，這系列…</p><p>剛好最近想對現在正在用的Jenkins功能部署到其他機器</p><p>順便新增一些之前沒用到的功能，趕緊回來填坑＠＠</p><span id="more"></span><p>上次應該是裝完了拉，這次就來設定吧</p><p>這次主要會介紹到下面幾點</p><ol><li><p>必要外掛插件的安裝</p></li><li><p>開發憑證的設定</p></li><li><p>任務設定</p></li></ol><p>登入之後的點擊主畫面左方的管理Jenkins</p><img src="/donaldwu.github.com/2018/02/07/iOS-Jenkins%E4%B9%8B%E6%97%85Part2/mainView.png" class=""><p>接下來找到管理外掛程式點進去</p><img src="/donaldwu.github.com/2018/02/07/iOS-Jenkins%E4%B9%8B%E6%97%85Part2/plugin.png" class=""><p>就可以搜尋需要的外掛插件來安裝拉</p>]]></content>
      
      
      
        <tags>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>無聊實驗室：vim + Codi</title>
      <link href="/donaldwu.github.com/2018/01/04/%E7%84%A1%E8%81%8A%E5%AF%A6%E9%A9%97%E5%AE%A4%EF%BC%9Avim-Codi/"/>
      <url>/donaldwu.github.com/2018/01/04/%E7%84%A1%E8%81%8A%E5%AF%A6%E9%A9%97%E5%AE%A4%EF%BC%9Avim-Codi/</url>
      
        <content type="html"><![CDATA[<p>接下來將來繼續介紹目前我在使用vim的插件</p><p>第一篇中我們用xcrun跟guard幫我們即時編譯出.swift的執行結果</p><p>而本篇的要介紹的插件Codi則可以幫我們運行多種不同語言的執行結果</p><span id="more"></span><p><a href="https://github.com/metakirby5/codi.vim">Github上有詳細演示的gif圖</a></p><p>安裝完之後輸入</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:Codi 語言名稱</span><br></pre></td></tr></table></figure><p>實際支援的語言請見GitHub</p><p>以JavaScript為例，就輸入</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:Codi javascript</span><br></pre></td></tr></table></figure><p>但每次都要打這一長串也挺麻煩的</p><p>為了貫徹 懶 還要更懶的目標</p><p>就打開.vimrc配置一下快捷鍵吧</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap &lt;leader&gt;js :Codi javascript&lt;CR&gt;</span><br></pre></td></tr></table></figure><p>這樣只要在normal  mode下依序按下leader鍵(我的設定是”,”)js就可以使用了</p><p>以上</p>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>無聊實驗室：vim基本操作</title>
      <link href="/donaldwu.github.com/2018/01/03/%E7%84%A1%E8%81%8A%E5%AF%A6%E9%A9%97%E5%AE%A4%EF%BC%9Avim%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/donaldwu.github.com/2018/01/03/%E7%84%A1%E8%81%8A%E5%AF%A6%E9%A9%97%E5%AE%A4%EF%BC%9Avim%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>這篇主要來記錄一下自己目前設定好的vim環境</p><p>以及一些基礎控制的快捷鍵，以免忘記太多次狗都快被我喂成豬了</p><span id="more"></span><p>首先是移動光標</p><p>在normal mode底下上下左右分別對應k、j、 h、l</p><p>w也可以代替向右，b可以代替向左不過距離是以一個單詞為單位</p><p>在移動前輸入數字也可以直接前進數字單位的位置</p><p>gg可以回到頂部，shift+g則是到底部，zz會將光標所在位置拉至螢幕中央</p><p>ctrl+b與ctrl+f則可以翻頁</p><p>再來是文字的刪除</p><p>按下o可以在現在光標位置後加上一空行並進入insert mode</p><p>按下dd可以消除當前整行文字，前方加上數字可以消除數行</p><p>dw與db可以刪除以光標為基準的後方一個單詞與前方一個單詞，一樣可以加上數字</p><p>其中d可以用c取代，會多一個刪除完進入insert mode的效果</p><p>按下x則可以消除單個字元</p><p>接下來是ctrl+z在vim裡面可以用u代替</p><p>.則可以重複上一項動作</p><p>最後來記錄菸酒生時期最會的技能： 複製貼上ＸＤ</p><p>首先是複製，將光標移動到要複製的開頭或結尾按下v進入visual mode</p><p>移動光標包圍要複製的範圍後按下y複製，離開visual mode按下p即可貼上</p><p>下篇再繼續記錄設定好的vimrc以及插件管理</p>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>測試好幫手-Fabric</title>
      <link href="/donaldwu.github.com/2017/11/26/%E6%B8%AC%E8%A9%A6%E5%A5%BD%E5%B9%AB%E6%89%8B-Fabric/"/>
      <url>/donaldwu.github.com/2017/11/26/%E6%B8%AC%E8%A9%A6%E5%A5%BD%E5%B9%AB%E6%89%8B-Fabric/</url>
      
        <content type="html"><![CDATA[<p>在開發軟體的過程中，測試絕對是相當重要的一環</p><p>iOS開發者絕對聽過的TestFlight就是apple提供不錯的工具</p><p>當然也有不少其他工具可以滿足各式各樣測試的需求</p><p>本篇就來介紹最近開始使用並覺得相當不錯的Fabric</p><span id="more"></span><p>一樣先從Fabric可以幫我們做到什麼功能開始</p><p>首先Fabric可以讓你發佈你的app並發送郵件給你指定的測試人員下載</p><p>並且配合Crashlytics可以在發布的app發生Crash時，發送email給你告知你有問題發生了</p><p>那麼接下來我們就來一步一步設定Fabric吧</p><p>第一步先到apple的開發者網站設定一下</p><p>這裡的範例因為是全新的app所以我新建了一個appID以及Provisioning Profiles</p><p>如果已經有了就不需要再做了，視情況調整即可</p><p>1.建立appID</p><p>2.建立Provisioning Profiles，這裡我只拿來測試因此選擇Development</p><ol start="3"><li>選擇appID，就選剛剛建立好(要測)的那組</li></ol><p>最後就照著系統提示選擇你的證書、註冊的裝置(之後可以另外加)跟幫這個Provisioning Profile取個名吧</p><p><a href="https://get.fabric.io/">接下來去官網下載Fabric的mac app並順便申請一個帳號吧</a></p><p><a href="https://fabric.io/kits/ios/crashlytics/install">然後跟著官方教學進行設定</a></p><p>登入後教學頁面上的api key就會幫你設定成你的帳號要用的摟，很方便ＸＤ</p><p>接下來就進Fabric的app來看看吧</p><p>登入之後選擇專案</p><p>選擇第一項Crashlytics install</p><p>因為已經經由cocoapods安裝完了，因此點擊左邊的icon</p><p>這兩步都已經先完成了就Next按下去吧</p><p>再來打開專案，按下command + B編譯</p><p>完成後按下command + R把專案跑起來一次，這時Fabric的app就會有你的專案可以選擇了</p><p>到這邊設定都完成了，之後完成一個版本想要傳送給測試人員要怎麼做呢？</p><p>其實只要Arciive你的專案</p><img src="/donaldwu.github.com/2017/11/26/%E6%B8%AC%E8%A9%A6%E5%A5%BD%E5%B9%AB%E6%89%8B-Fabric/Archive.gif" class=""><p>app自己就會跳出可以上傳的提醒</p><p>接下來可以輸入要傳送給哪些測試人員的email</p><p>還可以寫好給測試人員的訊息</p><img src="/donaldwu.github.com/2017/11/26/%E6%B8%AC%E8%A9%A6%E5%A5%BD%E5%B9%AB%E6%89%8B-Fabric/12.png" class=""><p>送出之後就開始上傳拉，上傳完成測試人員就會接收到郵件請測試人員下載app囉</p><img src="/donaldwu.github.com/2017/11/26/%E6%B8%AC%E8%A9%A6%E5%A5%BD%E5%B9%AB%E6%89%8B-Fabric/13.png" class=""><p>p.s. 如果archive玩沒有提示(或是提示的版本不是最新版)</p><p>可以打開Fabric app裡面的archive的欄位按下發布就可以瞜</p><p>最後，如果是第一次加入的測試人員，系統email會提示測試人員回傳他們測試手機的UUID</p><p>開發人員只要去apple開發者網站加入那隻手機就ＯＫ了(下圖中Device那邊)</p><img src="/donaldwu.github.com/2017/11/26/%E6%B8%AC%E8%A9%A6%E5%A5%BD%E5%B9%AB%E6%89%8B-Fabric/14.png" class=""><p>之後只要有新的Archive就可以用Fabric上傳並且發佈拉～～～</p>]]></content>
      
      
      
        <tags>
            
            <tag> Fabric </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS Jenkins之旅Part1</title>
      <link href="/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/"/>
      <url>/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<p>雖然老早就想開始寫測試，學習持續整合(Continuous Integration)的東西</p><p>但無奈人懶沒藥醫</p><img src="/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/%E6%88%91%E4%B9%9F%E5%BE%88%E7%B5%95%E6%9C%9B.jpeg" class=""><p>拖了超久才總算踏出這第一步</p><p>雖然做這個好像也只是為了讓自己能少更多事ＸＤＤ</p><span id="more"></span><p>Jenkins的各種功能我就不贅述了，只介紹我有用到的部分</p><p>其他請自行求教估狗大神(其實是我也沒懂多少LuL)</p><p>這邊主要會分成三個部分來記錄我Jenkins的使(ㄕㄨㄚˇ)用(ㄅㄣˋ)經過，順便加深記憶</p><p>今天的第一部份是Jenkins的安裝</p><p>第二部分則是插件的安奘以及最重(ㄎㄥ)要(ㄖㄣˊ)的設定</p><p>最後是簡單的Shell指令完成編譯、打包、上傳app store的動作</p><p>途中會順便介紹一些踩過的坑</p><p>其實到最後也是拼拼湊湊達到需要的功能</p><p>有錯跪求路過好心大神指點ＱＱ</p><p>首先就來安裝吧</p><p>Jenkins需要在java環境下運行，沒裝的童鞋記得去載個JDK裝一下</p><p>我是用homebrew進行安裝</p><p><a href="https://brew.sh/index_zh-tw.html">沒homebrew ＬＵＬ</a></p><p>其實也有懶人安裝包可以使用，沒差多少，有興趣可以找一下</p><p>打開終端機，輸入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install jenkins</span><br></pre></td></tr></table></figure><p>安裝成功後用瀏覽器開啟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/</span><br></pre></td></tr></table></figure><p>如果沒有東西可以嘗試以下指令開啟服務</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist</span><br></pre></td></tr></table></figure><p>停用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist</span><br></pre></td></tr></table></figure><p>之後需要開啟Jenkins只要打開終端機輸入Jenkins即可</p><p>反之關掉終端機即停止服務</p><p>進入Jenkins我以為我應該會看到類似這樣子</p><img src="/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/Jenkins.png" class=""><p>結果竟然是這樣子</p><img src="/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/UnlockJenkins.png" class=""><img src="/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/%E5%9A%87%E5%88%B0%E5%90%83%E6%89%8B%E6%89%8B.jpg" class=""><img src="/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/%E5%9A%87%E5%88%B0%E5%90%83%E6%89%8B%E6%89%8B.jpg" class=""><img src="/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/%E5%9A%87%E5%88%B0%E5%90%83%E6%89%8B%E6%89%8B.jpg" class=""><p>太驚慌了害我都忘記截圖，只好再跟估神借幾張圖來擋擋</p><p>冷靜下來吃個手手壓壓驚，然後喂個狗</p><p>原來是安裝完的訊息被我忽略掉的樣子</p><img src="/donaldwu.github.com/2017/11/06/iOS-Jenkins%E8%A8%AD%E5%AE%9A/%E5%81%87%E7%9A%84%E7%9C%BC%E7%9D%9B.jpeg" class=""><p>理論上如果是mac他會把初始的密碼存在&#x2F;Users&#x2F;“yourUserName”&#x2F;.jenkins&#x2F;secrets&#x2F;initialAdminPassword裡面</p><p>因此再用終端機輸入(“yourUserName”請改成自己mac的使用者名稱)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /Users/“yourUserName”/.jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><p>開始的密碼就會印出來拉，而Jenkins的預設使用者是admin</p><p>有了資訊就可以登入準備開始使用Jenkins拉～</p><p>欲知後事如何，且聽下回分解&gt;.*</p>]]></content>
      
      
      
        <tags>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift功能實作日記-標籤-collectionView</title>
      <link href="/donaldwu.github.com/2017/10/31/Swift%E5%8A%9F%E8%83%BD%E5%AF%A6%E4%BD%9C%E6%97%A5%E8%A8%98-%E6%A8%99%E7%B1%A4-collectionView/"/>
      <url>/donaldwu.github.com/2017/10/31/Swift%E5%8A%9F%E8%83%BD%E5%AF%A6%E4%BD%9C%E6%97%A5%E8%A8%98-%E6%A8%99%E7%B1%A4-collectionView/</url>
      
        <content type="html"><![CDATA[<p>由於Swift內UICollectionViewFlowLayout所產生的佈局與我要的需求不同</p><p>因此在網路上找到了有大大寫出了解決辦法</p><p>就趕緊來記錄一下最後的的做法</p><span id="more"></span><p>首先來確認一下需求</p><p>原本希望利用collectionView將tag排列好</p><p>tag的大小取決於內容字串長度</p><p>當tag排列到超過collectionView的contentView寬度的話就換行</p><p>但實際上做出來會長這樣</p><p>UICollectionViewFlowLayout排列的優先順序不如預期</p><p>無法有效的靠左對齊</p><img src="/donaldwu.github.com/2017/10/31/Swift%E5%8A%9F%E8%83%BD%E5%AF%A6%E4%BD%9C%E6%97%A5%E8%A8%98-%E6%A8%99%E7%B1%A4-collectionView/Two.png" class=""><p>在繼承UICollectionViewFlowLayout重新對layout方式進行改寫之後</p><img src="/donaldwu.github.com/2017/10/31/Swift%E5%8A%9F%E8%83%BD%E5%AF%A6%E4%BD%9C%E6%97%A5%E8%A8%98-%E6%A8%99%E7%B1%A4-collectionView/One.png" class=""><p><a href="https://github.com/DonaldlWu/LeftTagDemo/tree/master">Github</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> collectionView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>紀錄APP功能回顧</title>
      <link href="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/"/>
      <url>/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/</url>
      
        <content type="html"><![CDATA[<p>因為中間偷懶沒寫文章，有不少是加上去但前面沒提到的</p><p>所以稍微來回顧一下目前這個棒球紀錄APP時做了哪些功能</p><span id="more"></span><p>首先是註冊</p><p>可以讓使用者選擇照片</p><p>以及填入帳號資訊連接到Firebase後台進行註冊(或登入)</p><p>在註冊頁面當使用者點擊註冊紐時會先判斷使用者是否有輸入資訊</p><p>如果有沒輸入資訊的欄位會把placeholder變成紅色提醒使用者</p><p>如果都有輸入就會連接Firebase確認email格式</p><p>如果都沒有問題就完成註冊將使用者送入首頁</p><img src="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/RegisterDemo.gif" class=""><p>登入介面一樣會檢查空欄位</p><p>都有資訊就連接Firebase確認是否為註冊過的用戶</p><p>以及密碼是否正確</p><img src="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/LoginDemo.gif" class=""><p>在首頁可以進行新增球隊的功能</p><p>會先跳出一個視窗讓使用者輸入新隊名</p><p>輸入完會讓使用者可以選擇隊伍照片</p><p>按下START會將隊伍資訊傳送到Firebase</p><p>然後把使用者帶回首頁，在首頁會去Fetch Firebase的隊伍資料</p><p>所以在首頁就會看到剛剛設定的隊徽跟隊名</p><img src="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/AddTeamDemo.gif" class=""><p>接下來點擊新增好的隊伍欄位，會將使用者帶到隊伍編輯頁面</p><p>按下右上角ADD可以進行新增球員的動作</p><p>在新增球員頁面可以讓使用者選擇球員的照片、守備位置、背號、姓名</p><p>一樣在按下新增鈕之後會將資料送到Firebase的資料庫</p><p>而在隊伍編輯頁面一樣會去Firebase尋找這支隊伍的球員資料</p><img src="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/AddMemberDemo.gif" class=""><p>接下來在新增完球隊的成員們之後</p><p>可以看到右邊有顯示的守備位置的按鈕，點擊可以進行守備位置的變更</p><p>將球員的欄位向左滑動可以看到兩個按鈕</p><p>一個是LineUp，可以指定準備要開始的比賽中這位球員的棒次</p><p>另一個是Cancel可以取消指定的棒次</p><p>最後將整個表單向下拉，會跳出選項來排序目前球員排列的方式</p><p>目前提供依照背號數字從小排到大以及從大排到小與依照棒次三種方式</p><img src="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/MemberControllerDemo.gif" class=""><p>當選擇完至少九棒的球員之後就可以按下下方變色的開始按鈕</p><p>並選擇是先攻或者先守準備開始一場新的比賽紀錄</p><p>進入紀錄頁面可以看到剛才設定的球員、棒次以及守備位置，還會先生成好敵對的欄位</p><p>可以再下方TabBar選擇第二欄來記錄對手打席紀錄</p><p>按下UPDATE按鈕，就會跳出選項來記錄球員打席的結果</p><img src="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/RecordControllerDemo.gif" class=""><p>再來是一場棒球比賽時間很長，不太可能長時間只開著這款APP</p><p>因此就需要將資訊即時儲存起來</p><p>這裡使用了CoreData來儲存兩隊的資料</p><p>並使用UserDefault來儲存是否正在比賽之中的狀態</p><p>使用者打開APP到首頁就會自動檢查是否有未完成的紀錄</p><p>如果有就會從CoreData裡拿出資料並進入紀錄頁面</p><img src="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/CoreDataDemo.gif" class=""><p>最後是比賽狀態頁面</p><p>先用一個UIView上面疊上CollectionView來做出計分板的效果</p><p>不過資料目前還沒接上</p><img src="/donaldwu.github.com/2017/08/24/%E7%B4%80%E9%8C%84APP%E5%8A%9F%E8%83%BD%E5%9B%9E%E9%A1%A7/ScoreControllerDemo.gif" class=""><p>現在的進度就到這邊為止</p><p><a href="https://github.com/DonaldlWu/HBCRecord"> GitHub </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CoreData、UserDefault</title>
      <link href="/donaldwu.github.com/2017/08/20/CoreData%E3%80%81UserDefault/"/>
      <url>/donaldwu.github.com/2017/08/20/CoreData%E3%80%81UserDefault/</url>
      
        <content type="html"><![CDATA[<p>作為一款記錄用的APP，比賽期間使用者不太可能只開著這款APP</p><p>更別提意外跳出或是記憶體不足造成閃退的狀況了</p><p>這時候就應該要把比賽中所記錄到的資訊儲存起來</p><p>在APP打開的情況下去判斷之前是否有未完成的比賽</p><p>有的話就拿回該有的資訊讓使用者繼續記錄</p><p>至於要用什麼方式來儲存使用者紀錄的資料呢？</p><span id="more"></span><p>有想過將資料完全存在後台，而現在使用儲存資料的Firebase realtime database確實很好用</p><p>但考慮到用量以及資料儲存的方式，似乎沒有需要將大量之後不需要的資訊儲存在realtime database中</p><p>接下來的選擇我想到了UserDefault，用來儲存是否有記錄中的狀態相當不錯</p><p>但如果要儲存已經是一個個物件的比賽的相關紀錄處理上相對麻煩</p><p>因此最後選擇使用了CoreData來儲存物件，UserDefault來儲存狀態的方法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">saveToCoreData</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> appDel <span class="operator">=</span> <span class="type">UIApplication</span>.shared.delegate <span class="keyword">as?</span> <span class="type">AppDelegate</span></span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> context <span class="operator">=</span> appDel<span class="operator">?</span>.persistentContainer.viewContext <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> results <span class="operator">=</span> <span class="keyword">try</span> context.fetch(<span class="type">PlayingPlayer</span>.fetchRequest())</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// If CoreData already have data</span></span><br><span class="line">            <span class="keyword">if</span> results.count <span class="operator">&gt;=</span> <span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (i,item) <span class="keyword">in</span> results.enumerated() &#123;</span><br><span class="line">                    <span class="keyword">let</span> editPlayer <span class="operator">=</span> item <span class="keyword">as?</span> <span class="type">PlayingPlayer</span></span><br><span class="line">                    <span class="keyword">if</span> editPlayer<span class="operator">?</span>.name <span class="operator">==</span> <span class="keyword">self</span>.players[i].name &#123;</span><br><span class="line">                        editPlayer<span class="operator">?</span>.mid <span class="operator">=</span> <span class="keyword">self</span>.players[i].mid</span><br><span class="line">                        editPlayer<span class="operator">?</span>.name <span class="operator">=</span> <span class="keyword">self</span>.players[i].name</span><br><span class="line">                        editPlayer<span class="operator">?</span>.position <span class="operator">=</span> <span class="keyword">self</span>.players[i].position</span><br><span class="line">                        editPlayer<span class="operator">?</span>.profileImage <span class="operator">=</span> <span class="keyword">self</span>.players[i].profileImage</span><br><span class="line">                        <span class="keyword">let</span> array <span class="operator">=</span> <span class="keyword">self</span>.players[i].recordArray</span><br><span class="line">                        <span class="keyword">let</span> data <span class="operator">=</span> <span class="type">NSKeyedArchiver</span>.archivedData(withRootObject: array)</span><br><span class="line">                        editPlayer<span class="operator">?</span>.recordArray <span class="operator">=</span> data <span class="keyword">as</span> <span class="type">NSData</span></span><br><span class="line">                        appDel<span class="operator">?</span>.saveContext()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            <span class="comment">// No Data</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> savedPlayer <span class="keyword">in</span> <span class="keyword">self</span>.players &#123;</span><br><span class="line">                    <span class="keyword">let</span> player <span class="operator">=</span> <span class="type">PlayingPlayer</span>(context: context)</span><br><span class="line">                    player.mid <span class="operator">=</span> savedPlayer.mid</span><br><span class="line">                    player.name <span class="operator">=</span> savedPlayer.name</span><br><span class="line">                    player.position <span class="operator">=</span> savedPlayer.position</span><br><span class="line">                    player.order <span class="operator">=</span> savedPlayer.order</span><br><span class="line">                    player.profileImage <span class="operator">=</span> savedPlayer.profileImage</span><br><span class="line">                    <span class="keyword">let</span> array <span class="operator">=</span> savedPlayer.recordArray</span><br><span class="line">                    <span class="keyword">let</span> data <span class="operator">=</span> <span class="type">NSKeyedArchiver</span>.archivedData(withRootObject: array)</span><br><span class="line">                    player.recordArray <span class="operator">=</span> data <span class="keyword">as</span> <span class="type">NSData</span></span><br><span class="line">                    appDel<span class="operator">?</span>.saveContext()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再進入紀錄頁面之前的TabBarController新增將目前物件存放到CoreData的function</p><p>然後設定key為<code>gaming</code>的UserDefault為true，作為現在正在記錄中的狀態</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UserDefaults</span>.standard.setValue(<span class="string">&quot;true&quot;</span>, forKey: <span class="string">&quot;gaming&quot;</span>)</span><br></pre></td></tr></table></figure><p>接下來也得設定在使用者按下比賽結束的按鈕時將狀態設為false</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UserDefaults</span>.standard.setValue(<span class="string">&quot;false&quot;</span>, forKey: <span class="string">&quot;gaming&quot;</span>)</span><br></pre></td></tr></table></figure><p>然後使用者進入到在HomeController時拿出<code>gaming</code>來判斷是否正在記錄中</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">checkIsGaming</span>() &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> gamingStatus <span class="operator">=</span> <span class="type">UserDefaults</span>.standard.string(forKey: <span class="string">&quot;gaming&quot;</span>) <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> gamingStatus <span class="operator">==</span> <span class="string">&quot;true&quot;</span> &#123;</span><br><span class="line">            getDataFromCoreData()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> gamingStatus <span class="operator">==</span> <span class="string">&quot;false&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>最後如果確定正在記錄中就去把coreData中的資料取出來並把畫面帶到GameTabBarController</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">getDataFromCoreData</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> appDel <span class="operator">=</span> <span class="type">UIApplication</span>.shared.delegate <span class="keyword">as?</span> <span class="type">AppDelegate</span></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> context <span class="operator">=</span> appDel<span class="operator">?</span>.persistentContainer.viewContext <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> result <span class="operator">=</span> <span class="keyword">try</span> context.fetch(<span class="type">PlayingPlayer</span>.fetchRequest())</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> result &#123;</span><br><span class="line">            <span class="keyword">let</span> thisPlayer <span class="operator">=</span> item <span class="keyword">as?</span> <span class="type">PlayingPlayer</span></span><br><span class="line">            <span class="comment">// Reconstruct by using map</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> thisPlayer<span class="operator">?</span>.recordArray <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> unarchiveObject <span class="operator">=</span> <span class="type">NSKeyedUnarchiver</span>.unarchiveObject(with: (thisPlayer<span class="operator">?</span>.recordArray <span class="keyword">as</span> <span class="type">NSData</span>?)<span class="operator">!</span> <span class="keyword">as</span> <span class="type">Data</span>)</span><br><span class="line">                <span class="keyword">let</span> arrayObject <span class="operator">=</span> unarchiveObject <span class="keyword">as</span> <span class="type">AnyObject</span>! <span class="keyword">as!</span> <span class="type">Array</span>&lt;<span class="type">String</span>&gt;</span><br><span class="line">                <span class="keyword">let</span> array <span class="operator">=</span> arrayObject</span><br><span class="line">                <span class="keyword">self</span>.players.append(<span class="type">Player</span>(mid: thisPlayer<span class="operator">?</span>.mid, name: thisPlayer<span class="operator">?</span>.name, order: thisPlayer<span class="operator">?</span>.order, position: thisPlayer<span class="operator">?</span>.position, recordArray: array, profileImage: thisPlayer<span class="operator">?</span>.profileImage))</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">self</span>.players.append(<span class="type">Player</span>(mid: thisPlayer<span class="operator">?</span>.mid, name: thisPlayer<span class="operator">?</span>.name, order: thisPlayer<span class="operator">?</span>.order, position: thisPlayer<span class="operator">?</span>.position, recordArray: [], profileImage: thisPlayer<span class="operator">?</span>.profileImage))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> players.count <span class="operator">&gt;=</span> <span class="number">9</span> &#123;</span><br><span class="line">        goToGameTabBarController()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">goToGameTabBarController</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">GameTabBarController</span>()</span><br><span class="line">    controller.players <span class="operator">=</span> <span class="keyword">self</span>.players</span><br><span class="line">    present(controller, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看看執行結果</p><img src="/donaldwu.github.com/2017/08/20/CoreData%E3%80%81UserDefault/CoreDataDemo.gif" class=""><p>這兩天也順便把程式碼再重構了一部分</p><p>把太煩雜的Controller切割成我自己定義的function以及原本controller所繼承的function兩部份</p><p>順便把儲存Player紀錄的array部分簡化了一下</p><p>回頭看看真是滿臉黑人問號</p><p>當初為何要寫得那麼複雜勒ＸＤ</p><p>在簡化後現在也能把板凳人員加上去</p><p>接下來應該會先處理比賽順序(先攻後攻)比分跟對手資料的部分</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圖片cache機制</title>
      <link href="/donaldwu.github.com/2017/08/14/%E5%9C%96%E7%89%87cache%E6%A9%9F%E5%88%B6/"/>
      <url>/donaldwu.github.com/2017/08/14/%E5%9C%96%E7%89%87cache%E6%A9%9F%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>今天來幫之前寫的ImageView extension加上cache機制</p><p>不然每次滑動畫面圖片就不斷閃動</p><p>看起來超不舒服而且一直從Firebase下載圖片超浪費效能</p><span id="more"></span><p>先看code</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> imageCache <span class="operator">=</span> <span class="type">NSCache</span>&lt;<span class="type">AnyObject</span>, <span class="type">AnyObject</span>&gt;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">UIImageView</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">loadImageUsingCashWithUrlString</span>(<span class="params">urlString</span>: <span class="type">String</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Check cache for image</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> cachedImage <span class="operator">=</span> imageCache.object(forKey: urlString <span class="keyword">as</span> <span class="type">AnyObject</span>) <span class="keyword">as?</span> <span class="type">UIImage</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.image <span class="operator">=</span> cachedImage</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> url <span class="operator">=</span> <span class="type">URL</span>(string: urlString)</span><br><span class="line">        </span><br><span class="line">        <span class="type">URLSession</span>.shared.dataTask(with: url<span class="operator">!</span>) &#123; (data, response, error) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> error <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(error<span class="operator">!</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> downloadedImage <span class="operator">=</span> <span class="type">UIImage</span>(data: data<span class="operator">!</span>) &#123;</span><br><span class="line">                    imageCache.setObject(downloadedImage, forKey: urlString <span class="keyword">as</span> <span class="type">AnyObject</span>)</span><br><span class="line">                    <span class="keyword">self</span>.image <span class="operator">=</span> <span class="type">UIImage</span>(data: data<span class="operator">!</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;.resume()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>呼叫這function時會先去看cache裡面有沒有存過</p><p>不然就用拿到的urlString去下載</p><p>下載完就用urlString當作cache object的key把圖片存起來</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>後台使用者註冊&amp;登錄系統Demo</title>
      <link href="/donaldwu.github.com/2017/08/11/%E5%BE%8C%E5%8F%B0%E4%BD%BF%E7%94%A8%E8%80%85%E8%A8%BB%E5%86%8A-%E7%99%BB%E9%8C%84%E7%B3%BB%E7%B5%B1Demo/"/>
      <url>/donaldwu.github.com/2017/08/11/%E5%BE%8C%E5%8F%B0%E4%BD%BF%E7%94%A8%E8%80%85%E8%A8%BB%E5%86%8A-%E7%99%BB%E9%8C%84%E7%B3%BB%E7%B5%B1Demo/</url>
      
        <content type="html"><![CDATA[<p>這段時間除了持續在swift的練習之外</p><p>也終於開始下手往後台的功能開始摸索</p><p>雖然有看了一些vapor的資料跟練習了一下</p><p>但想想剛開始還是用已經比較多人用過的方式來寫</p><p>先把基礎打好之後要換應該也不難吧ＸＤ</p><p>問題是所以我說那個基礎勒ＱＱ</p><span id="more"></span><p>第一個Demo先試著使用XMAPP幫我整合Apache、MySQL跟PHP然後跑在我的電腦上</p><p>然後利用postfix做認證信的傳送</p><p>目前先做好了假的Twitter註冊跟登錄系統</p><p>大致上的流程就是使用者輸入帳號密碼跟姓名與電子郵件進行註冊</p><p>Server這邊收到之後把使用者資料存到Database的users這個table內</p><p>並且在emailTokens這個Table裡面存入這名使用者的id與註冊用的token</p><p>然後發送認證郵件給使用者，使用者接收到這個有token的email後就可以進行驗證</p><p>驗證成功就把database的emailTokens裡面的token刪除</p><p>並把user的emailConfirmed這個欄位從0改成1</p><p>實際操作如下</p><p>先在iOS端輸入註冊資訊，傳輸成功iOS端會收到回傳的JSON資訊</p><img src="/donaldwu.github.com/2017/08/11/%E5%BE%8C%E5%8F%B0%E4%BD%BF%E7%94%A8%E8%80%85%E8%A8%BB%E5%86%8A-%E7%99%BB%E9%8C%84%E7%B3%BB%E7%B5%B1Demo/BackEndDemoPart1.gif" class=""><p>在後端會把輸入的資訊放到users裡面，也會在emailTokens裡放入此id的token</p><img src="/donaldwu.github.com/2017/08/11/%E5%BE%8C%E5%8F%B0%E4%BD%BF%E7%94%A8%E8%80%85%E8%A8%BB%E5%86%8A-%E7%99%BB%E9%8C%84%E7%B3%BB%E7%B5%B1Demo/BackEndDemoPart2.gif" class=""><p>最後在使用者接受到認證信並按下確認之後會將後台的token刪除</p><p>並更改emailConfirmed確認這名使用者完成註冊</p><img src="/donaldwu.github.com/2017/08/11/%E5%BE%8C%E5%8F%B0%E4%BD%BF%E7%94%A8%E8%80%85%E8%A8%BB%E5%86%8A-%E7%99%BB%E9%8C%84%E7%B3%BB%E7%B5%B1Demo/BackEndDemoPart3.gif" class="">]]></content>
      
      
      
        <tags>
            
            <tag> BackEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day30-UIPickerView</title>
      <link href="/donaldwu.github.com/2017/07/21/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day30/"/>
      <url>/donaldwu.github.com/2017/07/21/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day30/</url>
      
        <content type="html"><![CDATA[<p>今天有一整天可以用，花了一個早上Debug…</p><p>下午一咪眼就好幾小時噴了…</p><p>不過好歹也是把之前留著的自製popView裡面裝著UIPickerView的功能往前推進了一點</p><p>也學到了不少新東西</p><p>然後TabBar也先把基本的部分做好，順便重也寫了不少部分</p><p>但這片還是先看之前困擾我有點久的讓畫面跳出UIPickerView</p><span id="more"></span><p>一樣先看Demo</p><img src="/donaldwu.github.com/2017/07/21/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day30/Day30Demo.gif" class=""><p>不過其實進度已經離上一次詳細寫出內容差了大概五光年遠…</p><p>認真回頭看真的不少該改寫的部分</p><p>這次也是在彼得潘講過之後才真的好好了解了navigationController推送的細節</p><p>然後才發現好像可以這樣做做看</p><p>首先在記錄的畫面點擊UPDATE時會觸發<code>sentRecord</code>這個function</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">sentRecord</span>(<span class="params">sender</span>: <span class="type">UIButton</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">RecordPickerController</span>()</span><br><span class="line">    controller.rowInRecordArray <span class="operator">=</span> sender.tag</span><br><span class="line">    controller.players <span class="operator">=</span> <span class="keyword">self</span>.players</span><br><span class="line">    controller.modalPresentationStyle <span class="operator">=</span> .overCurrentContext</span><br><span class="line">    present(controller, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第3, 4行是用來傳資料的可以先忽視</p><p>主要是先設定送出來的controller的modalPresentationStyle</p><p>然後用present送出新畫面</p><p>然後來到要送出的畫面來</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RecordPickerController</span>: <span class="title class_">UIViewController</span>, <span class="title class_">UIPickerViewDelegate</span>, <span class="title class_">UIPickerViewDataSource</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> recordtypeArray <span class="operator">=</span> [<span class="string">&quot;H&quot;</span>, <span class="string">&quot;BB&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;K&quot;</span>, <span class="string">&quot;SF&quot;</span>]</span><br><span class="line">    <span class="keyword">let</span> recordDetialArray <span class="operator">=</span> [[<span class="string">&quot;H&quot;</span>, <span class="string">&quot;2B&quot;</span>, <span class="string">&quot;3B&quot;</span>, <span class="string">&quot;HR&quot;</span>], [<span class="string">&quot;BB&quot;</span>, <span class="string">&quot;HBP&quot;</span>], [<span class="string">&quot;E1&quot;</span>, <span class="string">&quot;E2&quot;</span>, <span class="string">&quot;E3&quot;</span>, <span class="string">&quot;E4&quot;</span>, <span class="string">&quot;E5&quot;</span>, <span class="string">&quot;E6&quot;</span>, <span class="string">&quot;E7&quot;</span>, <span class="string">&quot;E8&quot;</span>, <span class="string">&quot;E9&quot;</span>], [<span class="string">&quot;K&quot;</span>, <span class="string">&quot;K&quot;</span>], [<span class="string">&quot;SF&quot;</span>, <span class="string">&quot;SH&quot;</span>]]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> players <span class="operator">=</span> [<span class="type">Player</span>]()</span><br><span class="line">    <span class="keyword">var</span> recordPickerView: <span class="type">UIPickerView</span>!</span><br><span class="line">    <span class="keyword">var</span> tempRecord: <span class="type">String</span> <span class="operator">=</span> <span class="string">&quot;H&quot;</span></span><br><span class="line">    <span class="keyword">var</span> rowInRecordArray <span class="operator">=</span> <span class="type">Int</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> popView: <span class="type">UIView</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> view <span class="operator">=</span> <span class="type">UIView</span>()</span><br><span class="line">        view.backgroundColor <span class="operator">=</span> .white</span><br><span class="line">        view.layer.borderWidth <span class="operator">=</span> <span class="number">3</span></span><br><span class="line">        view.backgroundColor <span class="operator">=</span> .cyan</span><br><span class="line">        view.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">        view.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> view</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> addButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .purple</span><br><span class="line">        button.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">        button.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.blue.cgColor</span><br><span class="line">        button.layer.borderWidth <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;UPDATE&quot;</span>, for: .normal)</span><br><span class="line">        button.titleLabel<span class="operator">?</span>.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">13</span>)</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(sendRecordBack), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        view.backgroundColor <span class="operator">=</span> .clear</span><br><span class="line">        </span><br><span class="line">        recordPickerView <span class="operator">=</span> <span class="type">UIPickerView</span>()</span><br><span class="line">        recordPickerView.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="keyword">self</span>.view.bounds.width <span class="operator">-</span> <span class="number">12</span>, height: <span class="number">200</span>)</span><br><span class="line">        recordPickerView.showsSelectionIndicator <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        recordPickerView.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        recordPickerView.dataSource <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        recordPickerView.backgroundColor <span class="operator">=</span> .cyan</span><br><span class="line">        </span><br><span class="line">        view.addSubview(popView)</span><br><span class="line">        </span><br><span class="line">        popView.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        popView.centerYAnchor.constraint(equalTo: view.centerYAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        popView.widthAnchor.constraint(equalTo: view.widthAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        popView.heightAnchor.constraint(equalToConstant: <span class="number">250</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        popView.addSubview(recordPickerView)</span><br><span class="line">        popView.addSubview(addButton)</span><br><span class="line">        </span><br><span class="line">        addButton.bottomAnchor.constraint(equalTo: recordPickerView.bottomAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        addButton.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        addButton.widthAnchor.constraint(equalToConstant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        addButton.heightAnchor.constraint(equalToConstant: <span class="number">36</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">sendRecordBack</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">GameTabBarController</span>()</span><br><span class="line">        <span class="keyword">switch</span> rowInRecordArray &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">0</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">1</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">2</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">3</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">4</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">5</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">6</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">7</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">self</span>.players[<span class="number">8</span>].recordArray.append(tempRecord)</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        controller.players <span class="operator">=</span> <span class="keyword">self</span>.players</span><br><span class="line">        controller.modalPresentationStyle <span class="operator">=</span> .overFullScreen</span><br><span class="line">        present(controller, animated: <span class="literal">false</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">numberOfComponents</span>(<span class="params">in</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">numberOfRowsInComponent</span> <span class="params">component</span>: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span> component <span class="operator">==</span> <span class="number">0</span> &#123;            </span><br><span class="line">            <span class="keyword">return</span> recordtypeArray.count</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> recordDetialArray[recordPickerView.selectedRow(inComponent: <span class="number">0</span>)].count</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">titleForRow</span> <span class="params">row</span>: <span class="type">Int</span>, <span class="params">forComponent</span> <span class="params">component</span>: <span class="type">Int</span>) -&gt; <span class="type">String</span>? &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> component <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> recordtypeArray[row]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> recordDetialArray[recordPickerView.selectedRow(inComponent: <span class="number">0</span>)][row]</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">didSelectRow</span> <span class="params">row</span>: <span class="type">Int</span>, <span class="params">inComponent</span> <span class="params">component</span>: <span class="type">Int</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> component <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">            recordPickerView.reloadComponent(<span class="number">1</span>)</span><br><span class="line">            tempRecord <span class="operator">=</span> recordDetialArray[row][<span class="number">0</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> component <span class="operator">==</span> <span class="number">1</span> &#123;</span><br><span class="line">            tempRecord <span class="operator">=</span> recordDetialArray[recordPickerView.selectedRow(inComponent: <span class="number">0</span>)][row]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>邊寫邊覺得自己對資料的傳遞跟儲存寫得真渣 （￣ c￣）y▂ξ</p><p>只差沒翻桌了…</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day29-at medium Xcode9模擬器全螢幕</title>
      <link href="/donaldwu.github.com/2017/07/20/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day29-at-medium-Xcode9%E6%A8%A1%E6%93%AC%E5%99%A8%E5%85%A8%E8%9E%A2%E5%B9%95/"/>
      <url>/donaldwu.github.com/2017/07/20/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day29-at-medium-Xcode9%E6%A8%A1%E6%93%AC%E5%99%A8%E5%85%A8%E8%9E%A2%E5%B9%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://medium.com/@darrenwu/xcode-9%E6%8A%8A%E6%A8%A1%E6%93%AC%E5%99%A8%E5%A1%9E%E9%80%B2%E5%85%A8%E8%9E%A2%E5%B9%95-4231dff50443"> medium的連結 </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day28 medium使用、Github圖片</title>
      <link href="/donaldwu.github.com/2017/07/19/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day28-medium%E4%BD%BF%E7%94%A8%E3%80%81Github%E5%9C%96%E7%89%87/"/>
      <url>/donaldwu.github.com/2017/07/19/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day28-medium%E4%BD%BF%E7%94%A8%E3%80%81Github%E5%9C%96%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>今天第一次使用medium</p><p>使用上真的超直接</p><p>要做什麼就往上面拉就好</p><span id="more"></span><p>不過這裡依然會繼續使用，還有挺多plug-in可以用來玩玩看</p><p>學著使用這裡的期間也讓我學到不少東西</p><p>但是近期應該兩邊都會更新</p><p><a href="https://medium.com/@darrenwu/swift-app-icon-%E8%A8%AD%E5%AE%9A-uiview%E6%93%8D%E4%BD%9C-readme%E6%96%B0%E5%A2%9E%E5%9C%96%E7%89%87-ffd3ac3f40c9"> 附上medium的連結 </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> medium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day27</title>
      <link href="/donaldwu.github.com/2017/07/18/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day27/"/>
      <url>/donaldwu.github.com/2017/07/18/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day27/</url>
      
        <content type="html"><![CDATA[<p>今天時間也不太夠ＱＱ</p><p>只好先來預告一下之後會慢慢寫出做法的功能</p><span id="more"></span><p>先上圖</p><img src="/donaldwu.github.com/2017/07/18/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day27/Day27.png" class=""><p>這邊主要有去跟Firebase database拿到新增過的成員資料</p><p>然後顯示出成員的各種資料，然後後面的守備位置可以進行更改</p><p>然後有兩個正在調整中的功能會慢慢的放上來</p><p>但今天還是只能繼續富奸…</p><img src="/donaldwu.github.com/2017/07/18/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day27/Day26hehe.jpg" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day26</title>
      <link href="/donaldwu.github.com/2017/07/17/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day26/"/>
      <url>/donaldwu.github.com/2017/07/17/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day26/</url>
      
        <content type="html"><![CDATA[<p>列些準備看的清單好了</p><p><a href="https://developer.apple.com/ios/human-interface-guidelines/graphics/app-icon/"> 有關 app icon size </a></p><p><a href="https://marvelapp.com/features/"> prototyping </a></p><p>這兩天一不小心處理了蠻多新功能的</p><p>需要消化整理一下再寫上來</p><p>順便再次整理一下需求以確定之後整個APP功能的開發順序</p><p>加上有開始上課，要每日更新開發進度可能會有難度啊ＱＱ(這肝黑黑der…)</p><p>但是避免偷懶，每天還是要寫點東西．</p><p>然後…</p><span id="more"></span><p>就沒有然後了 </p><img src="/donaldwu.github.com/2017/07/17/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day26/Day26hehe.jpg" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day25-Fetch Data Form Firebase Database</title>
      <link href="/donaldwu.github.com/2017/07/16/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day25-Fetch-Data-Form-Firebase-Database/"/>
      <url>/donaldwu.github.com/2017/07/16/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day25-Fetch-Data-Form-Firebase-Database/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day25</p><p>在完成註冊手續之後</p><p>接下來就是讓使用者可以新增隊伍然後在HomeController會去Fetch使用者新增過的隊伍資料</p><p>然後用tableView顯示出來</p><span id="more"></span><p>第一步先來看看目前想到在Database儲存資料的形式</p><img src="/donaldwu.github.com/2017/07/16/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day25-Fetch-Data-Form-Firebase-Database/Day25Databasestroage.png" class=""><p>User的地方是昨天處理好的部分，當使用者註冊時會將資料儲存在一個uid底下</p><p>包含了使用者的email跟name這兩項資訊</p><p>而今天要讓使用者在新增球隊資訊之後</p><p>會在Team底下創造一個tid，裡面會儲存球隊名稱的字串TeamName</p><p>以及這個team屬於哪個使用者的uid</p><p>開工第一步先來把該有的工具準備好</p><p>在Model裡面新增一個定義User這個class的new file</p><p>命名成User.swift</p><p>然後修改一下Team.swift這個class的內容</p><p>內容如下</p><p>Team.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Team</span>: <span class="title class_">NSObject</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> uid: <span class="type">String</span>?</span><br><span class="line">    <span class="keyword">var</span> teamName: <span class="type">String</span>?</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>: <span class="title class_">NSObject</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span>?</span><br><span class="line">    <span class="keyword">var</span> email: <span class="type">String</span>?</span><br><span class="line">    <span class="keyword">var</span> uid: <span class="type">String</span>?</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後來到要處理資料的HomeController</p><p>一樣先看看程式碼再來一步一步處理</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> Firebase</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HomeController</span>: <span class="title class_">UITableViewController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> cellId <span class="operator">=</span> <span class="string">&quot;cellId&quot;</span></span><br><span class="line">    <span class="keyword">var</span> teams <span class="operator">=</span> [<span class="type">Team</span>]()</span><br><span class="line">    <span class="keyword">var</span> user <span class="operator">=</span> <span class="type">User</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">var</span> prefersStatusBarHidden: <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="keyword">let</span> newTeamButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;New Team&quot;</span>, style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(toSetNewTeamController))</span><br><span class="line">        navigationItem.rightBarButtonItem <span class="operator">=</span> newTeamButton</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> logoutButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;Logout&quot;</span>, style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleLogout))</span><br><span class="line">        navigationItem.leftBarButtonItem <span class="operator">=</span> logoutButton</span><br><span class="line">        checkUserIsLogin()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">fetchTeam</span>() &#123;</span><br><span class="line">        <span class="type">FIRDatabase</span>.database().reference().child(<span class="string">&quot;Team&quot;</span>).observe(.childAdded, with: &#123; (snapshot) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> dictionary <span class="operator">=</span> snapshot.value <span class="keyword">as?</span> [String: <span class="type">AnyObject</span>] &#123;</span><br><span class="line">                <span class="keyword">let</span> team <span class="operator">=</span> <span class="type">Team</span>()</span><br><span class="line">                team.setValuesForKeys(dictionary)</span><br><span class="line">                <span class="keyword">if</span> team.uid <span class="operator">==</span> <span class="keyword">self</span>.user.uid &#123;</span><br><span class="line">                    <span class="keyword">self</span>.teams.append(team)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                    <span class="keyword">self</span>.tableView.reloadData()</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">print</span>(team.teamName <span class="keyword">as</span> <span class="keyword">Any</span>, team.uid <span class="keyword">as</span> <span class="keyword">Any</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, withCancel: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">checkUserIsLogin</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.currentUser<span class="operator">?</span>.uid <span class="operator">==</span> <span class="literal">nil</span> &#123;</span><br><span class="line">            perform(<span class="keyword">#selector</span>(handleLogout), with: <span class="literal">nil</span>, afterDelay: <span class="number">0</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            fetchUserSetNavBarTitle()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">fetchUserSetNavBarTitle</span>() &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> uid <span class="operator">=</span> <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.currentUser<span class="operator">?</span>.uid <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">FIRDatabase</span>.database().reference().child(<span class="string">&quot;User&quot;</span>).child(uid).observeSingleEvent(of: .value, with: &#123; (snapshot) <span class="keyword">in</span></span><br><span class="line">            <span class="built_in">print</span>(snapshot)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> dictionary <span class="operator">=</span> snapshot.value <span class="keyword">as?</span> [String: <span class="keyword">Any</span>] &#123;</span><br><span class="line">                <span class="keyword">self</span>.user.uid <span class="operator">=</span> snapshot.key</span><br><span class="line">                <span class="keyword">self</span>.navigationItem.title <span class="operator">=</span> dictionary[<span class="string">&quot;name&quot;</span>] <span class="keyword">as?</span> <span class="type">String</span></span><br><span class="line">                <span class="keyword">self</span>.fetchTeam()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, withCancel: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleLogout</span>() &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.signOut()</span><br><span class="line">        &#125; <span class="keyword">catch</span> <span class="keyword">let</span> logoutError &#123;</span><br><span class="line">            <span class="built_in">print</span>(logoutError)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">self</span>.teams.removeAll()</span><br><span class="line">        <span class="keyword">let</span> loginController <span class="operator">=</span> <span class="type">LoginController</span>()</span><br><span class="line">        loginController.homeController <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        present(loginController, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">toSetNewTeamController</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> alertController <span class="operator">=</span> <span class="type">UIAlertController</span>(title: <span class="string">&quot;Add New Team&quot;</span>, message: <span class="string">&quot;&quot;</span>, preferredStyle: .alert)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> saveAction <span class="operator">=</span> <span class="type">UIAlertAction</span>(title: <span class="string">&quot;OK&quot;</span>, style: .default, handler: &#123;</span><br><span class="line">            alert -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> firstTextField <span class="operator">=</span> alertController.textFields<span class="operator">!</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="type">UITextField</span></span><br><span class="line">            <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">SetNewTeamController</span>()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> firstTextField.text<span class="operator">!</span> <span class="operator">!=</span> <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">                controller.teamTitle <span class="operator">=</span> firstTextField.text<span class="operator">!</span></span><br><span class="line">                <span class="keyword">let</span> uid <span class="operator">=</span> <span class="keyword">self</span>.user.uid</span><br><span class="line">                <span class="keyword">let</span> ref <span class="operator">=</span> <span class="type">FIRDatabase</span>.database().reference().child(<span class="string">&quot;Team&quot;</span>)</span><br><span class="line">                <span class="keyword">let</span> teamRef <span class="operator">=</span> ref.childByAutoId()</span><br><span class="line">                <span class="keyword">let</span> value: [AnyHashable: <span class="keyword">Any</span>] <span class="operator">=</span> [<span class="string">&quot;TeamName&quot;</span>: firstTextField.text<span class="operator">!</span>, <span class="string">&quot;uid&quot;</span>: uid <span class="keyword">as</span> <span class="keyword">Any</span>]</span><br><span class="line">                teamRef.updateChildValues(value)</span><br><span class="line">                <span class="keyword">self</span>.present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> cancelAction <span class="operator">=</span> <span class="type">UIAlertAction</span>(title: <span class="string">&quot;Cancel&quot;</span>, style: .default, handler: &#123;</span><br><span class="line">            (action : <span class="type">UIAlertAction</span>!) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">        alertController.addTextField &#123; (textField : <span class="type">UITextField</span>!) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            textField.placeholder <span class="operator">=</span> <span class="string">&quot;Enter Team Name&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        alertController.addAction(saveAction)</span><br><span class="line">        alertController.addAction(cancelAction)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.present(alertController, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">numberOfRowsInSection</span> <span class="params">section</span>: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> teams.count</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">cellForRowAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell <span class="operator">=</span> <span class="type">UITableViewCell</span>(style: .subtitle, reuseIdentifier: cellId)</span><br><span class="line">        </span><br><span class="line">        cell.textLabel<span class="operator">?</span>.text <span class="operator">=</span> teams[indexPath.row].teamName</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">didSelectRowAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">SetNewTeamController</span>()</span><br><span class="line">        controller.teamTitle <span class="operator">=</span> teams[indexPath.row].teamName</span><br><span class="line">        present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一步當然是實作讓使用者新增資料到Database上</p><p>之前在<code>toSetNewTeamController</code>這個function裡面實作了當使用者點擊右上方的Add Member時</p><p>會跳出一個AlertController讓使用者輸入新增球隊的名稱</p><p>在第87~91行我們讓使用者把現有的uid跟新增的teamName儲存到Database上的Team節點下</p><p>並自動產生一個id當子樹，不過這裡的uid怎麼來的？</p><p>當然我們就需要剛剛準備好的工具拉</p><p>第7, 8行實作一個teams來儲存Fetch到的Team內容</p><p>以及一個user來儲存Fetch到的User內容</p><p>接下來在<code>fetchUserSetNavBarTitle</code>這個function裡面第56行儲存使用者的uid</p><p>這樣就有自己的uid可以使用拉</p><p>然後就來實作Fetch隊伍資料的<code>fetchTeam</code>這個function</p><p>首先，<code>fetchTeam</code>會在<code>fetchUserSetNavBarTitle</code>拿到使用者的資訊之後執行</p><p>以確保自己儲存的uid不會是空值</p><p>當<code>fetchTeam</code>執行時會去Database觀察Team這個子樹下的資料</p><p>如果裡面的uid跟現在使用者的uid是一樣的</p><p>就代表這隻Team是這個使用者所創建的</p><p>那就把這筆資料儲存到前面創好的teams裡面</p><p>最後重新整理現在的tableView內容</p><p>p.s.這裡要記得UI必須在主線程裡更新</p><p>但我們還沒處理tableView的內容</p><p>所以就修改一下<code>numberOfRowsInSection</code>回傳儲存的隊伍數量teams.count</p><p>以及<code>cellForRowAt</code>讓cell的文字顯示隊伍名稱teamName</p><p>還有<code>didSelectRowAt</code>所傳送的teamTitle</p><p>最後要記得處理當使用者登出時要把teams的內容移除</p><p>不然登入其他帳號時teams的內容可能還會儲存在裡面</p><img src="/donaldwu.github.com/2017/07/16/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day25-Fetch-Data-Form-Firebase-Database/Day25Demo.gif" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day24-Firebase-Authentication-Login &amp; Logout</title>
      <link href="/donaldwu.github.com/2017/07/15/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day24-Firebase-Authentication-Login-Logout/"/>
      <url>/donaldwu.github.com/2017/07/15/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day24-Firebase-Authentication-Login-Logout/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day24</p><p>今天來完成整個註冊、登入、登出程序</p><p>首先先來釐清需求</p><p>使用者打開APP時應該會進入HomeController</p><p>這時我們應該先判斷這使用者是否有帳號登入過</p><p>如果有就在navigationItem上更新這名使用者的名稱</p><p>如果沒有就把畫面送到LoginController</p><span id="more"></span><p>首先來修改HomeController.swift裡面的程式碼</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="keyword">let</span> newTeamButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;New Team&quot;</span>, style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(toSetNewTeamController))</span><br><span class="line">    navigationItem.rightBarButtonItem <span class="operator">=</span> newTeamButton</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> logoutButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;Logout&quot;</span>, style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleLogout))</span><br><span class="line">    navigationItem.leftBarButtonItem <span class="operator">=</span> logoutButton</span><br><span class="line">    checkUserIsLogin()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">checkUserIsLogin</span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.currentUser<span class="operator">?</span>.uid <span class="operator">==</span> <span class="literal">nil</span> &#123;</span><br><span class="line">        perform(<span class="keyword">#selector</span>(handleLogout), with: <span class="literal">nil</span>, afterDelay: <span class="number">0</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fetchUserSetNavBarTitle()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">fetchUserSetNavBarTitle</span>() &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> uid <span class="operator">=</span> <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.currentUser<span class="operator">?</span>.uid <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">FIRDatabase</span>.database().reference().child(<span class="string">&quot;User&quot;</span>).child(uid).observeSingleEvent(of: .value, with: &#123; (snapshot) <span class="keyword">in</span></span><br><span class="line">        <span class="built_in">print</span>(snapshot)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> dictionary <span class="operator">=</span> snapshot.value <span class="keyword">as?</span> [String: <span class="keyword">Any</span>] &#123;</span><br><span class="line">            <span class="keyword">self</span>.navigationItem.title <span class="operator">=</span> dictionary[<span class="string">&quot;name&quot;</span>] <span class="keyword">as?</span> <span class="type">String</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, withCancel: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">handleLogout</span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.signOut()</span><br><span class="line">    &#125; <span class="keyword">catch</span> <span class="keyword">let</span> logoutError &#123;</span><br><span class="line">        <span class="built_in">print</span>(logoutError)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> loginController <span class="operator">=</span> <span class="type">LoginController</span>()</span><br><span class="line">    loginController.homeController <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">    present(loginController, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我新增了兩個新的function跟修改了一個之前寫的function</p><p>這裡新增的兩個新的function分別是<code>checkUserIsLogin</code>以及<code>fetchUserSetNavBarTitle</code></p><p>在viewDidLoad時會執行<code>checkUserIsLogin</code>這個function</p><p>裡面負責跟Firebase確認這支手機是否有登入過</p><p>如果沒有就去執行<code>handleLogout</code>讓畫面移動到LoginController</p><p>如果有就執行另一個新增的<code>fetchUserSetNavBarTitle</code>來更新從Firebase拿到的使用者名稱</p><p>然後是修改後的<code>handleLogout</code>多做了兩件事情</p><p>第一件事情是跟Firebase做登出的動作</p><p>第二件事是在實作LoginController時把hemeController的reference加進去</p><p>這樣做的目的是等等我們再處理完LoginController的登入或註冊之後可以直接來更新navigationItem的名稱</p><p>p.s.記得import Firebase</p><p>再來就進入LoginController.swift來處理登入跟註冊的程序</p><p>一樣先上程式碼</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> Firebase</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginController</span>: <span class="title class_">AddMemberController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> homeController: <span class="type">HomeController</span>?</span><br><span class="line">    <span class="keyword">var</span> profileImageTopAnchor: <span class="type">NSLayoutConstraint</span>?</span><br><span class="line">    <span class="keyword">var</span> emailTopAnchor: <span class="type">NSLayoutConstraint</span>?</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> loginSegmentedControl: <span class="type">UISegmentedControl</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> sc <span class="operator">=</span> <span class="type">UISegmentedControl</span>(items: [<span class="string">&quot;Login&quot;</span>, <span class="string">&quot;Register&quot;</span>])</span><br><span class="line">        sc.selectedSegmentIndex <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        sc.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        sc.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleChangeButtonTitle), for: .valueChanged)</span><br><span class="line">        <span class="keyword">return</span> sc</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> emailText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;email&quot;</span></span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> passwordText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;password&quot;</span></span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.isSecureTextEntry <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">lazy</span> <span class="keyword">var</span> loginButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;Login&quot;</span>, for: .normal)</span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .cyan</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleLoginRegister), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleLoginRegister</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> loginSegmentedControl.selectedSegmentIndex <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">            handleLogin()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            handleRegister()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleLogin</span>() &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> email <span class="operator">=</span> emailText.text, <span class="keyword">let</span> password <span class="operator">=</span> passwordText.text <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.signIn(withEmail: email, password: password, completion: &#123; (user, error) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> error <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">self</span>.homeController<span class="operator">?</span>.fetchUserSetNavBarTitle()</span><br><span class="line">            <span class="keyword">self</span>.dismiss(animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleRegister</span>() &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> email <span class="operator">=</span> emailText.text, <span class="keyword">let</span> password <span class="operator">=</span> passwordText.text, <span class="keyword">let</span> name <span class="operator">=</span> nameText.text <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.createUser(withEmail: email, password: password, completion: &#123; (user: <span class="type">FIRUser</span>?, error) <span class="keyword">in</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> error <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(error<span class="operator">!</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> uid <span class="operator">=</span> user<span class="operator">?</span>.uid <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> ref <span class="operator">=</span> <span class="type">FIRDatabase</span>.database().reference(fromURL: <span class="string">&quot;https://hbcrecord-5a3d4.firebaseio.com/&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> userReference <span class="operator">=</span> ref.child(<span class="string">&quot;User&quot;</span>).child(uid)</span><br><span class="line">            <span class="keyword">let</span> accountValue <span class="operator">=</span> [<span class="string">&quot;email&quot;</span>: email, <span class="string">&quot;name&quot;</span>: name]</span><br><span class="line">            userReference.updateChildValues(accountValue, withCompletionBlock: &#123; (err, ref) <span class="keyword">in</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> err <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="built_in">print</span>(err<span class="operator">!</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.homeController<span class="operator">?</span>.navigationItem.title <span class="operator">=</span> accountValue[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">                <span class="keyword">self</span>.dismiss(animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">                </span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleChangeButtonTitle</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> loginSegmentedControl.selectedSegmentIndex <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">            loginButton.setTitle(<span class="string">&quot;Login&quot;</span>, for: .normal)</span><br><span class="line">            nameText.isHidden <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">            profileImageTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">64</span></span><br><span class="line">            emailTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">8</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            loginButton.setTitle(<span class="string">&quot;Register&quot;</span>, for: .normal)</span><br><span class="line">            nameText.isHidden <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">            profileImageTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">32</span></span><br><span class="line">            emailTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">48</span></span><br><span class="line">            view.layoutIfNeeded()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        profileImage.removeFromSuperview()</span><br><span class="line">        profileImage.removeConstraints(profileImage.constraints)</span><br><span class="line">        positionSegmentedControl.removeFromSuperview()</span><br><span class="line">        nameText.removeFromSuperview()</span><br><span class="line">        registerButton.removeFromSuperview()</span><br><span class="line">        </span><br><span class="line">        view.addSubview(profileImage)</span><br><span class="line">        view.addSubview(loginSegmentedControl)</span><br><span class="line">        view.addSubview(nameText)</span><br><span class="line">        view.addSubview(emailText)</span><br><span class="line">        view.addSubview(passwordText)</span><br><span class="line">        view.addSubview(loginButton)</span><br><span class="line">        nameText.isHidden <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        profileImageTopAnchor <span class="operator">=</span> profileImage.topAnchor.constraint(equalTo: view.topAnchor, constant: <span class="number">64</span>)</span><br><span class="line">        profileImageTopAnchor<span class="operator">?</span>.isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.heightAnchor.constraint(equalToConstant: <span class="number">110</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.widthAnchor.constraint(equalToConstant: <span class="number">110</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        loginSegmentedControl.topAnchor.constraint(equalTo: profileImage.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.heightAnchor.constraint(equalToConstant: <span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        nameText.topAnchor.constraint(equalTo: loginSegmentedControl.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        nameText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        nameText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        emailTopAnchor <span class="operator">=</span> emailText.topAnchor.constraint(equalTo: loginSegmentedControl.bottomAnchor, constant: <span class="number">8</span>)</span><br><span class="line">        emailTopAnchor<span class="operator">?</span>.isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        passwordText.topAnchor.constraint(equalTo: emailText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        loginButton.topAnchor.constraint(equalTo: passwordText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.heightAnchor.constraint(equalToConstant: <span class="number">50</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這裡一樣新增兩個新function跟修改一個舊function</p><p>不過為了可以更新HomeController的navigationItem.title</p><p>先新增一個homeController的物件</p><p>然後把按下註冊&#x2F;登入按鈕的動作從舊的<code>handleRegister</code>換成新增的<code>handleLoginRegister</code></p><p>在<code>handleLoginRegister</code>裡面用loginSegmentedControl所選擇的是login還是register來決定要呼叫哪個function</p><p>如果是登入就呼叫新增的第二個function<code>handleLogin</code>來跟Firebase做登入的動作以及剛剛提到的更新navigationItem.title</p><p>如果是註冊就呼叫之前寫的<code>handleRegister</code></p><p>但這邊也對<code>handleRegister</code>做了點修改，首先是多傳了name這個值</p><p>再來是註冊成功也會去修改homeController的navigationItem.title</p><p>不過跟<code>handleLogin</code>裡面直接呼叫<code>fetchUserSetNavBarTitle</code>不同的是</p><p>因為註冊時自己就有name這個數值，就不需要多跟Firebase要一次資料了</p><p>所以直接把要傳出去註冊的name拿來用就好</p><p>來看看完成品吧</p><img src="/donaldwu.github.com/2017/07/15/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day24-Firebase-Authentication-Login-Logout/Day24Registerandlogin.gif" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day23-利用Breakpoint進行Autolayout除錯</title>
      <link href="/donaldwu.github.com/2017/07/14/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day23-%E5%88%A9%E7%94%A8Breakpoint%E9%80%B2%E8%A1%8CAutolayout%E9%99%A4%E9%8C%AF/"/>
      <url>/donaldwu.github.com/2017/07/14/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day23-%E5%88%A9%E7%94%A8Breakpoint%E9%80%B2%E8%A1%8CAutolayout%E9%99%A4%E9%8C%AF/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day23</p><p>昨天在處理畫面元件移動的anchor的時候</p><p>沒有處理乾淨，所以執行時會出現一些問題</p><p>所以這篇就來處理一下，順便記錄一下該如何利用Breakpoint來進行Autolayout的除錯</p><span id="more"></span><p>首先就來看看發生了什麼事</p><img src="/donaldwu.github.com/2017/07/14/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day23-%E5%88%A9%E7%94%A8Breakpoint%E9%80%B2%E8%A1%8CAutolayout%E9%99%A4%E9%8C%AF/Day23Break.png" class=""><p>右下的console可以看到，應該是設定畫面的anchor時出現了一些問題</p><p>看敘述應該是重復的anchor造成其中一個沒作用</p><p>所以Xcode在console跳出了警告</p><p>雖然到這邊大該需要的資訊應該都有了</p><p>不過還是記錄一下要怎麼設定Breakpoint來看更多的資訊</p><p>首先就來設定一下Breakpoint，讓Xcode在發現UI設定上錯誤時除了在console顯示之外</p><p>還可以幫我們把需要的資訊印出來</p><img src="/donaldwu.github.com/2017/07/14/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day23-%E5%88%A9%E7%94%A8Breakpoint%E9%80%B2%E8%A1%8CAutolayout%E9%99%A4%E9%8C%AF/Day23Breakpointsetting.png" class=""><p>從左邊的Navigator選擇Breakpoint那一欄</p><p>然後點擊左下的+號</p><p>選擇Symbolic Breakpoint…</p><p>設定Symbol為<code>UIViewAlertForUnsatisfiableConstraints</code></p><p>然後點擊Add Action輸入<code>po [[UIWindow keyWindow] _autolayoutTrace]</code></p><p>然後執行APP，在UI出現問題的地方就會停下來給出這個畫面整個UIWindow的資訊</p><img src="/donaldwu.github.com/2017/07/14/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day23-%E5%88%A9%E7%94%A8Breakpoint%E9%80%B2%E8%A1%8CAutolayout%E9%99%A4%E9%8C%AF/Day23RedView.gif" class=""><p>這個資訊在元件的後方都有一串編碼</p><p>這編碼就代表了這個元件</p><p>在除錯時還可以把指定的元件變色來確定元件位置</p><p>如同圖片裡所顯示，在斷點時進入console輸入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr ((UIView *)0x7f84fa419500).backgroundColor = [UIColor redColor]</span><br></pre></td></tr></table></figure><p>就可以將指定的畫面在繼續執行APP時變成指定的顏色</p><p>最後既然知道是anchor有重複，那就來修改一下anchor吧</p><p>順便把繼承來的nameTtext加回去</p><p>就來看下修改後的程式碼吧</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> Firebase</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginController</span>: <span class="title class_">AddMemberController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> profileImageTopAnchor: <span class="type">NSLayoutConstraint</span>?</span><br><span class="line">    <span class="keyword">var</span> emailTopAnchor: <span class="type">NSLayoutConstraint</span>?</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> loginSegmentedControl: <span class="type">UISegmentedControl</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> sc <span class="operator">=</span> <span class="type">UISegmentedControl</span>(items: [<span class="string">&quot;Login&quot;</span>, <span class="string">&quot;Register&quot;</span>])</span><br><span class="line">        sc.selectedSegmentIndex <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        sc.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        sc.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleChangeButtonTitle), for: .valueChanged)</span><br><span class="line">        <span class="keyword">return</span> sc</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> emailText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;email&quot;</span></span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> passwordText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;password&quot;</span></span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.isSecureTextEntry <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">lazy</span> <span class="keyword">var</span> loginButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;Login&quot;</span>, for: .normal)</span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .cyan</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleRegister), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleRegister</span>() &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> email <span class="operator">=</span> emailText.text, <span class="keyword">let</span> password <span class="operator">=</span> passwordText.text <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Input Error&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.createUser(withEmail: email, password: password, completion: &#123; (user: <span class="type">FIRUser</span>?, error) <span class="keyword">in</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> error <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(error<span class="operator">!</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> ref <span class="operator">=</span> <span class="type">FIRDatabase</span>.database().reference(fromURL: <span class="string">&quot;https://hbcrecord-5a3d4.firebaseio.com/&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> userReference <span class="operator">=</span> ref.child(<span class="string">&quot;User&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> accountValue <span class="operator">=</span> [<span class="string">&quot;email&quot;</span>: email]</span><br><span class="line">            userReference.updateChildValues(accountValue, withCompletionBlock: &#123; (err, ref) <span class="keyword">in</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> err <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="built_in">print</span>(err<span class="operator">!</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;New user saved success&quot;</span>)</span><br><span class="line">                </span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleChangeButtonTitle</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> loginSegmentedControl.selectedSegmentIndex <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">            loginButton.setTitle(<span class="string">&quot;Login&quot;</span>, for: .normal)</span><br><span class="line">            nameText.isHidden <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">            profileImageTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">64</span></span><br><span class="line">            emailTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">8</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            loginButton.setTitle(<span class="string">&quot;Register&quot;</span>, for: .normal)</span><br><span class="line">            nameText.isHidden <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">            profileImageTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">32</span></span><br><span class="line">            emailTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">48</span></span><br><span class="line">            view.layoutIfNeeded()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        profileImage.removeFromSuperview()</span><br><span class="line">        profileImage.removeConstraints(profileImage.constraints)</span><br><span class="line">        positionSegmentedControl.removeFromSuperview()</span><br><span class="line">        nameText.removeFromSuperview()</span><br><span class="line">        registerButton.removeFromSuperview()</span><br><span class="line">        </span><br><span class="line">        view.addSubview(profileImage)</span><br><span class="line">        view.addSubview(loginSegmentedControl)</span><br><span class="line">        view.addSubview(nameText)</span><br><span class="line">        view.addSubview(emailText)</span><br><span class="line">        view.addSubview(passwordText)</span><br><span class="line">        view.addSubview(loginButton)</span><br><span class="line">        nameText.isHidden <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        profileImageTopAnchor <span class="operator">=</span> profileImage.topAnchor.constraint(equalTo: view.topAnchor, constant: <span class="number">64</span>)</span><br><span class="line">        profileImageTopAnchor<span class="operator">?</span>.isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.heightAnchor.constraint(equalToConstant: <span class="number">110</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.widthAnchor.constraint(equalToConstant: <span class="number">110</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        loginSegmentedControl.topAnchor.constraint(equalTo: profileImage.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.heightAnchor.constraint(equalToConstant: <span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        nameText.topAnchor.constraint(equalTo: loginSegmentedControl.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        nameText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        nameText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        emailTopAnchor <span class="operator">=</span> emailText.topAnchor.constraint(equalTo: loginSegmentedControl.bottomAnchor, constant: <span class="number">8</span>)</span><br><span class="line">        emailTopAnchor<span class="operator">?</span>.isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        passwordText.topAnchor.constraint(equalTo: emailText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        loginButton.topAnchor.constraint(equalTo: passwordText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.heightAnchor.constraint(equalToConstant: <span class="number">50</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>昨天只靠移除constraint似乎是沒有辦法解決重複的問題</p><p>而且嘗試了幾組設定，問題應該都出在繼承過來的元件</p><p>所以試著把這些元件先移除再加回來</p><p>目前就沒有再發生constraint重複的問題了</p><p>所以再回來看看修改完的UI吧</p><img src="/donaldwu.github.com/2017/07/14/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day23-%E5%88%A9%E7%94%A8Breakpoint%E9%80%B2%E8%A1%8CAutolayout%E9%99%A4%E9%8C%AF/Day23UI.gif" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day22-LoginController UI修改</title>
      <link href="/donaldwu.github.com/2017/07/13/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day22-LoginController-UI%E4%BF%AE%E6%94%B9/"/>
      <url>/donaldwu.github.com/2017/07/13/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day22-LoginController-UI%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day22</p><p>今天時間不太夠，就來修正一下UI好了</p><p>決定在LoginController實作一下用SegmentedControl的選擇來動態調整UI的功能</p><p>用來區分使用者是登入還是註冊</p><p>如果是註冊就多一個UITextField來讓使用者輸入名稱</p><p>之後讓主畫面可以顯示目前登入的使用者名稱</p><p>如果是登入就只需要email</p><p>先把要移動的部分處理一下</p><span id="more"></span><p>首先來看一下效果</p><img src="/donaldwu.github.com/2017/07/13/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day22-LoginController-UI%E4%BF%AE%E6%94%B9/Day22UI.gif" class=""><p>接下來就進入LoginController.swift修改一下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> Firebase</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginController</span>: <span class="title class_">AddMemberController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> loginSegmentedControl: <span class="type">UISegmentedControl</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> sc <span class="operator">=</span> <span class="type">UISegmentedControl</span>(items: [<span class="string">&quot;Login&quot;</span>, <span class="string">&quot;Register&quot;</span>])</span><br><span class="line">        sc.selectedSegmentIndex <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        sc.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        sc.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleChangeButtonTitle), for: .valueChanged)</span><br><span class="line">        <span class="keyword">return</span> sc</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> emailText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;email&quot;</span></span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> passwordText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;password&quot;</span></span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.isSecureTextEntry <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">lazy</span> <span class="keyword">var</span> loginButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;Login&quot;</span>, for: .normal)</span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .cyan</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleRegister), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleRegister</span>() &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> email <span class="operator">=</span> emailText.text, <span class="keyword">let</span> password <span class="operator">=</span> passwordText.text <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Input Error&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.createUser(withEmail: email, password: password, completion: &#123; (user: <span class="type">FIRUser</span>?, error) <span class="keyword">in</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> error <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(error<span class="operator">!</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> ref <span class="operator">=</span> <span class="type">FIRDatabase</span>.database().reference(fromURL: <span class="string">&quot;https://hbcrecord-5a3d4.firebaseio.com/&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> userReference <span class="operator">=</span> ref.child(<span class="string">&quot;User&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> accountValue <span class="operator">=</span> [<span class="string">&quot;email&quot;</span>: email]</span><br><span class="line">            userReference.updateChildValues(accountValue, withCompletionBlock: &#123; (err, ref) <span class="keyword">in</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> err <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="built_in">print</span>(err<span class="operator">!</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;New user saved success&quot;</span>)</span><br><span class="line">                </span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleChangeButtonTitle</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> loginSegmentedControl.selectedSegmentIndex <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">            loginButton.setTitle(<span class="string">&quot;Login&quot;</span>, for: .normal)</span><br><span class="line">            profileImageTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">64</span></span><br><span class="line">            emailTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">8</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            loginButton.setTitle(<span class="string">&quot;Register&quot;</span>, for: .normal)</span><br><span class="line">            profileImageTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">32</span></span><br><span class="line">            emailTopAnchor<span class="operator">?</span>.constant <span class="operator">=</span> <span class="number">48</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> profileImageTopAnchor: <span class="type">NSLayoutConstraint</span>?</span><br><span class="line">    <span class="keyword">var</span> emailTopAnchor: <span class="type">NSLayoutConstraint</span>?</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        profileImage.removeAllConstraints()</span><br><span class="line">        positionSegmentedControl.removeFromSuperview()</span><br><span class="line">        nameText.removeFromSuperview()</span><br><span class="line">        registerButton.removeFromSuperview()</span><br><span class="line">        </span><br><span class="line">        view.addSubview(loginSegmentedControl)</span><br><span class="line">        view.addSubview(emailText)</span><br><span class="line">        view.addSubview(passwordText)</span><br><span class="line">        view.addSubview(loginButton)</span><br><span class="line">        </span><br><span class="line">        profileImageTopAnchor <span class="operator">=</span> profileImage.topAnchor.constraint(equalTo: view.topAnchor, constant: <span class="number">64</span>)</span><br><span class="line">        profileImageTopAnchor<span class="operator">?</span>.isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.heightAnchor.constraint(equalToConstant: <span class="number">110</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.widthAnchor.constraint(equalToConstant: <span class="number">110</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        loginSegmentedControl.topAnchor.constraint(equalTo: profileImage.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.heightAnchor.constraint(equalToConstant: <span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        emailTopAnchor <span class="operator">=</span> emailText.topAnchor.constraint(equalTo: loginSegmentedControl.bottomAnchor, constant: <span class="number">8</span>)</span><br><span class="line">        emailTopAnchor<span class="operator">?</span>.isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        passwordText.topAnchor.constraint(equalTo: emailText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        loginButton.topAnchor.constraint(equalTo: passwordText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.heightAnchor.constraint(equalToConstant: <span class="number">50</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">UIView</span> &#123;</span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">removeAllConstraints</span>() &#123;</span><br><span class="line">        <span class="keyword">self</span>.removeConstraints(<span class="keyword">self</span>.constraints)</span><br><span class="line">        <span class="keyword">for</span> view <span class="keyword">in</span> <span class="keyword">self</span>.subviews &#123;</span><br><span class="line">            view.removeAllConstraints()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先新增一個function來移除原本的constrains</p><p>然後定義兩個變數<code>profileImageTopAnchor</code>、<code>emailTopAnchor</code>之後用來調整位置</p><p>接下來在viewDidLoad裡面利用這兩個變數來調整anchor的定義</p><p>最後在handleChangeButtonTitle這個function內調整這兩個anchor的數值以達到移動UI的效果</p><p>下篇繼續把調整完成～</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day21-Firebase Authentication &amp; Database - Part1</title>
      <link href="/donaldwu.github.com/2017/07/12/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day21-Firebase-Authentication-Database-Part1/"/>
      <url>/donaldwu.github.com/2017/07/12/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day21-Firebase-Authentication-Database-Part1/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day21</p><p>裝了Firebase套件好幾天，終於要來用了</p><p>先來做個登入介面，然後來實作Firebase Authentication</p><p>然後把資料傳到Firebase的Database</p><span id="more"></span><p>登入介面的部分跟之前幾天在做的新增成員頁面其實很像</p><p>一樣有一個可以換圖的UIImageView</p><p>一個選擇是登入還是註冊的UISegmentedControl</p><p>跟一個UIButton執行動作</p><p>不一樣的是在要有兩個UITextField可以分別填入要註冊的email跟密碼</p><p>既然畫面及功能都很像，那就試試用之前做好的畫面來重複利用吧</p><p>首先先到HomeController的viewDidLoad裡面加上logout用的button</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> logoutButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;Logout&quot;</span>,</span><br><span class="line">                                           style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleLogout))</span><br><span class="line">        navigationItem.leftBarButtonItem <span class="operator">=</span> logoutButton</span><br></pre></td></tr></table></figure><p>接下來在Controller裡面新增一個LoginController.swift</p><p>就來看看寫了什麼吧</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> Firebase</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginController</span>: <span class="title class_">AddMemberController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> loginSegmentedControl: <span class="type">UISegmentedControl</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> sc <span class="operator">=</span> <span class="type">UISegmentedControl</span>(items: [<span class="string">&quot;Login&quot;</span>, <span class="string">&quot;Register&quot;</span>])</span><br><span class="line">        sc.selectedSegmentIndex <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        sc.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        sc.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleChangeButtonTitle), for: .valueChanged)</span><br><span class="line">        <span class="keyword">return</span> sc</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> emailText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;email&quot;</span></span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> passwordText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;password&quot;</span></span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.isSecureTextEntry <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">lazy</span> <span class="keyword">var</span> loginButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;Login&quot;</span>, for: .normal)</span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .cyan</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleRegister), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleRegister</span>() &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> email <span class="operator">=</span> emailText.text, <span class="keyword">let</span> password <span class="operator">=</span> passwordText.text <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Input Error&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">FIRAuth</span>.auth()<span class="operator">?</span>.createUser(withEmail: email, password: password, completion: &#123; (user: <span class="type">FIRUser</span>?, error) <span class="keyword">in</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> error <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="built_in">print</span>(error<span class="operator">!</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> ref <span class="operator">=</span> <span class="type">FIRDatabase</span>.database().reference(fromURL: <span class="string">&quot;https://xxxxxxxx.firebaseio.com/&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> userReference <span class="operator">=</span> ref.child(<span class="string">&quot;User&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> accountValue <span class="operator">=</span> [<span class="string">&quot;email&quot;</span>: email]</span><br><span class="line">            userReference.updateChildValues(accountValue, withCompletionBlock: &#123; (err, ref) <span class="keyword">in</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> err <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="built_in">print</span>(err<span class="operator">!</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;New user saved success&quot;</span>)</span><br><span class="line">                </span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleChangeButtonTitle</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> loginSegmentedControl.selectedSegmentIndex <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">            loginButton.setTitle(<span class="string">&quot;Login&quot;</span>, for: .normal)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            loginButton.setTitle(<span class="string">&quot;Register&quot;</span>, for: .normal)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        positionSegmentedControl.removeFromSuperview()</span><br><span class="line">        nameText.removeFromSuperview()</span><br><span class="line">        registerButton.removeFromSuperview()</span><br><span class="line">        </span><br><span class="line">        view.addSubview(loginSegmentedControl)</span><br><span class="line">        view.addSubview(emailText)</span><br><span class="line">        view.addSubview(passwordText)</span><br><span class="line">        view.addSubview(loginButton)</span><br><span class="line">        </span><br><span class="line">        loginSegmentedControl.topAnchor.constraint(equalTo: profileImage.bottomAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginSegmentedControl.heightAnchor.constraint(equalToConstant: <span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        emailText.topAnchor.constraint(equalTo: loginSegmentedControl.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        emailText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        passwordText.topAnchor.constraint(equalTo: emailText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        passwordText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        loginButton.topAnchor.constraint(equalTo: passwordText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">22</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        loginButton.heightAnchor.constraint(equalToConstant: <span class="number">50</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先當然要使用Firebase的功能當然要先import Firebase</p><p>接下來這個LoginController是AddMemberController的子類別</p><p>所以前面寫過的功能這裡都可以用(ex..選圖、換圖、觀察keyboard移動螢幕)</p><p>不過除了UIImageView之外其他東西還是有點區別，所以先一樣在6~40行先實作我們需要的物件</p><p>然後在viewDidLoad裡面把繼承過來但不需要的物件從view裡面刪除掉</p><p>再加入剛剛新增的物件，最後設定anchor</p><p>這裡比較不一樣的是UISegmentedControl的選擇會影響UIButton的title</p><p>以及之後會實作的不同動作，這就定義在handleChangeButtonTitle這個function內</p><p>再來就是今天的重點了</p><p>按下Button應該要可以觸發註冊或是登入，今天先從註冊開始</p><p>button會觸發註冊程序</p><p>要註冊Firebase要先去Firebase console把需要的登入方式打開</p><p>這邊我使用Email登入</p><img src="/donaldwu.github.com/2017/07/12/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day21-Firebase-Authentication-Database-Part1/Day21Authset.gif" class=""><p>接下來就回到程式碼，按下註冊會觸發handleRegister這個function</p><p>首先先確定兩個UITextField的內容有順利儲存</p><p>接下來就跟Firebase進行註冊，如果失敗就把錯誤訊息丟回console</p><p>成功就準備來儲存資料到Firebase的Database</p><p>在第55行要用URL連線到自己的database</p><p>這邊的URL可以在下圖反白的地方找到，複製貼上即可</p><img src="/donaldwu.github.com/2017/07/12/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day21-Firebase-Authentication-Database-Part1/Day21Database.png" class=""><p>然後把資料存在<code>User</code>這個子樹底下，然後依照成功或失敗在console印出信息，Done</p><p>下篇繼續</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day20-新增成員頁面-UIImagePickerController-Part2</title>
      <link href="/donaldwu.github.com/2017/07/11/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day20-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController-Part2/"/>
      <url>/donaldwu.github.com/2017/07/11/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day20-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController-Part2/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day20</p><p>今天會把換圖像的功能做完</p><p>順便處理一些昨天把螢幕旋轉限制解除之後的幾個衍生問題處理一下</p><span id="more"></span><p>第一步先來看看UIImagePicker提供了些什麼資訊給我們</p><p>進到AddMemberHandler.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">handleChangeImage</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> imagePicker <span class="operator">=</span> <span class="type">UIImagePickerController</span>()</span><br><span class="line">    imagePicker.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">    imagePicker.allowsEditing <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    imagePicker.modalPresentationStyle <span class="operator">=</span> .popover</span><br><span class="line">    present(imagePicker, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">func</span> <span class="title function_">imagePickerController</span>(<span class="keyword">_</span> <span class="params">picker</span>: <span class="type">UIImagePickerController</span>, <span class="params">didFinishPickingMediaWithInfo</span> <span class="params">info</span>: [<span class="params">String</span> : <span class="keyword">Any</span>]) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(info)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>為了可以編輯圖片的大小，先把imagePicker的allowEditing打開</p><p>然後新增didFinishPickingMediaWithInfo的function</p><p>接下來執行一下</p><img src="/donaldwu.github.com/2017/07/11/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day20-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController-Part2/Day20Info.gif" class=""><p>這裡其實我們可以看到這個函數裡的info可以提供我們五組數據</p><p>這邊我們需要圖片原本的大小，或者是有經過調整之後的大小</p><p>所以我們要用的的數據分別是<code>UIImagePickerControllerOriginalImage</code>以及<code>UIImagePickerControllerEditedImage</code></p><p>這兩組key底下的數據</p><p>知道需求就來改寫didFinishPickingMediaWithInfo</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">imagePickerController</span>(<span class="keyword">_</span> <span class="params">picker</span>: <span class="type">UIImagePickerController</span>, <span class="params">didFinishPickingMediaWithInfo</span> <span class="params">info</span>: [<span class="params">String</span> : <span class="keyword">Any</span>]) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> selectedImageFromPicker: <span class="type">UIImage</span>?</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> editedImage <span class="operator">=</span> info[<span class="string">&quot;UIImagePickerControllerEditedImage&quot;</span>] <span class="keyword">as?</span> <span class="type">UIImage</span> &#123;</span><br><span class="line">        selectedImageFromPicker <span class="operator">=</span> editedImage</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> originalImage <span class="operator">=</span> info[<span class="string">&quot;UIImagePickerControllerOriginalImage&quot;</span>] <span class="keyword">as?</span> <span class="type">UIImage</span> &#123;</span><br><span class="line">        selectedImageFromPicker <span class="operator">=</span> originalImage</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> selectedImage <span class="operator">=</span> selectedImageFromPicker &#123;</span><br><span class="line">        profileImage.image <span class="operator">=</span> selectedImage</span><br><span class="line">    &#125;</span><br><span class="line">    dismiss(animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>function內先定義一個變數來儲存圖片</p><p>如果是經過修改的圖片就把<code>UIImagePickerControllerEditedImage</code>內的UIImage存進<code>selectedImageFromPicker</code></p><p>如果是原圖就在<code>selectedImageFromPicker</code>內儲存<code>UIImagePickerControllerEditedImage</code>內的資料</p><p>接下來，判斷是否<code>selectedImageFromPicker</code>內有值，如果有，就把<code>profileImage</code>內的圖片替換掉</p><p>最後把畫面退出，Done</p><img src="/donaldwu.github.com/2017/07/11/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day20-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController-Part2/Day20ChangePic.gif" class=""><p>然後修正一下在AddMemberController.swift內處理keyboard升降的function</p><p>在可以旋轉螢幕的情況下，直立時keyboard就不會影響到現有畫面</p><p>所以我們先判斷使用者現在螢幕的狀態是橫躺還是直立的</p><p>如果是橫躺就做跟之前一樣的動作(抬高或降低畫面)</p><p>如果是直立就任何事都不做</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">keyboardWillShow</span>(<span class="params">notification</span>: <span class="type">NSNotification</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="type">UIDevice</span>.current.orientation <span class="operator">!=</span> .portrait &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> keyboardSize <span class="operator">=</span> (notification.userInfo<span class="operator">?</span>[<span class="type">UIKeyboardFrameBeginUserInfoKey</span>] <span class="keyword">as?</span> <span class="type">NSValue</span>)<span class="operator">?</span>.cgRectValue &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">self</span>.view.frame.origin.y <span class="operator">==</span> <span class="number">0</span>&#123;</span><br><span class="line">                <span class="keyword">self</span>.view.frame.origin.y <span class="operator">-=</span> keyboardSize.height</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">keyboardWillHide</span>(<span class="params">notification</span>: <span class="type">NSNotification</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="type">UIDevice</span>.current.orientation <span class="operator">!=</span> .portrait &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> keyboardSize <span class="operator">=</span> (notification.userInfo<span class="operator">?</span>[<span class="type">UIKeyboardFrameBeginUserInfoKey</span>] <span class="keyword">as?</span> <span class="type">NSValue</span>)<span class="operator">?</span>.cgRectValue &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">self</span>.view.frame.origin.y <span class="operator">!=</span> <span class="number">0</span>&#123;</span><br><span class="line">                <span class="keyword">self</span>.view.frame.origin.y <span class="operator">+=</span> keyboardSize.height</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後的最後稍微調整一下這一頁的畫面的anchor，因為發現在小螢幕似乎會切到</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="type">NotificationCenter</span>.default.addObserver(<span class="keyword">self</span>, selector: <span class="keyword">#selector</span>(<span class="type">AddMemberController</span>.keyboardWillShow), name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIKeyboardWillShow</span>, object: <span class="literal">nil</span>)</span><br><span class="line">    <span class="type">NotificationCenter</span>.default.addObserver(<span class="keyword">self</span>, selector: <span class="keyword">#selector</span>(<span class="type">AddMemberController</span>.keyboardWillHide), name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIKeyboardWillHide</span>, object: <span class="literal">nil</span>)</span><br><span class="line">    view.backgroundColor <span class="operator">=</span> .white</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> backButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;BACK&quot;</span>, style: .done, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(backHome))</span><br><span class="line">    navigationItem.leftBarButtonItem <span class="operator">=</span> backButton</span><br><span class="line">    </span><br><span class="line">    view.addSubview(profileImage)</span><br><span class="line">    view.addSubview(positionSegmentedControl)</span><br><span class="line">    view.addSubview(nameText)</span><br><span class="line">    view.addSubview(registerButton)</span><br><span class="line">    </span><br><span class="line">    profileImage.topAnchor.constraint(equalTo: view.topAnchor, constant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.heightAnchor.constraint(equalToConstant: <span class="number">110</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.widthAnchor.constraint(equalToConstant: <span class="number">110</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    positionSegmentedControl.topAnchor.constraint(equalTo: profileImage.bottomAnchor, constant: <span class="number">28</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    positionSegmentedControl.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    positionSegmentedControl.widthAnchor.constraint(equalTo: view.widthAnchor, constant: <span class="operator">-</span><span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    positionSegmentedControl.heightAnchor.constraint(equalToConstant: <span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    nameText.topAnchor.constraint(equalTo: positionSegmentedControl.bottomAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nameText.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nameText.widthAnchor.constraint(equalTo: view.widthAnchor, constant: <span class="operator">-</span><span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nameText.heightAnchor.constraint(equalToConstant: <span class="number">30</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    registerButton.topAnchor.constraint(equalTo: nameText.bottomAnchor, constant: <span class="number">8</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    registerButton.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    registerButton.widthAnchor.constraint(equalTo: view.widthAnchor, constant: <span class="operator">-</span><span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    registerButton.heightAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下篇待續～</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day19-新增成員頁面-UIImagePickerController-Part1</title>
      <link href="/donaldwu.github.com/2017/07/10/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day19-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController/"/>
      <url>/donaldwu.github.com/2017/07/10/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day19-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day19</p><p>繼續來製作新增成員頁面的新功能</p><p>今天就來讓圖像可以點擊然後更換成手機內的圖片</p><p>就用UIImagePicker來處理這功能</p><span id="more"></span><p>進入到AddMemberController.swift</p><p>找到負責生成ImageView的profileImage</p><p>稍微做一點修改</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lazy</span> <span class="keyword">var</span> profileImage: <span class="type">UIImageView</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> image <span class="operator">=</span> <span class="type">UIImageView</span>()</span><br><span class="line">    image.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    image.image <span class="operator">=</span> <span class="keyword">#imageLiteral</span>(resourceName: <span class="string">&quot;pied piper&quot;</span>)</span><br><span class="line">    image.contentMode <span class="operator">=</span> .scaleAspectFill</span><br><span class="line">    image.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">    image.layer.masksToBounds <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    image.addGestureRecognizer(<span class="type">UITapGestureRecognizer</span>(target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(handleChangeImage)))</span><br><span class="line">    image.isUserInteractionEnabled <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">handleChangeImage</span>() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;123&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先是新增了新的手勢偵測，第一步我們先看是不是能正確運作</p><p>所以在偵測到手勢之後執行handleChangeImage這個function</p><p>這個function則先印出123這個字串</p><p>然後把isUserInteractionEnabled設定成true</p><p>這邊需要將原本實作時使用的let改成lazy var，不然是不會有動作的</p><p>先來看看成果</p><img src="/donaldwu.github.com/2017/07/10/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day19-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController/Day19Gesture.gif" class=""><p>確定手勢可以作用之後就要開始定義function的內容拉</p><p>但是在開始定義之前我們可以看到整個AddMemberController.swift其實已經寫了不少內容了</p><p>為了之後再回來看程式碼的時候不會有太多想翻桌的衝動</p><p>我們就把這個要新增的handleChangeImage寫到別的檔案裡面吧</p><img src="/donaldwu.github.com/2017/07/10/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day19-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController/Day19Addmemberhandler.png" class=""><p>如圖所示，我們在Controller裡面新增一個group叫做Extension</p><p>裡面新增一個AddMemberHandler.swift的檔案</p><p>接下來處理選照片動作的程式碼就都集中在這邊</p><p>避免同一檔案裡面太多內容不好閱讀</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">AddMemberController</span>: <span class="title class_">UIImagePickerControllerDelegate</span>, <span class="title class_">UINavigationControllerDelegate</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">handleChangeImage</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> imagePicker <span class="operator">=</span> <span class="type">UIImagePickerController</span>()</span><br><span class="line">        imagePicker.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        present(imagePicker, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OK，執行下去</p><p>保證crash…</p><p>看一下console吧</p><p>應該會給出這樣子的內容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app&#x27;s Info.plist must contain an NSPhotoLibraryUsageDescription key with a string value explaining to the user how the app uses this data.</span><br></pre></td></tr></table></figure><p>因為iOS 10以後對個人資料的存取有很多限制所以要去info.plist修改一下</p><img src="/donaldwu.github.com/2017/07/10/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day19-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController/Day19Photoprivacy.gif" class=""><p>新增一個欄位選擇Privacy - Photo Library Usage Description</p><p>然後在後面選擇跳出要求權限視窗的文字</p><p>一般來說到這裡就應該可以看到需要的UIImagePickerController了</p><p>但是執行下去應該會像下面這樣</p><img src="/donaldwu.github.com/2017/07/10/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day19-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController/Day19Orientationcrash.gif" class=""><p>首先這個可以看到UIImagePickerController預設是在垂直畫面上表現的</p><p>不是我們需要的橫躺畫面，接下來點擊OK之後就直接crash了</p><p>一樣看向console</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;Supported orientations has no common orientation with the application, and [PUUIAlbumListViewController shouldAutorotate] is returning YES&#x27;</span><br></pre></td></tr></table></figure><p>看來是因為shouldAutorotate預設的回傳是ture，所以讓我們這只能橫躺的APP沒辦法處理拉</p><p>比較簡單的處理就是把這個UIImagePickerController做點修改</p><p>以跳出框來表現UIImagePickerController</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">handleChangeImage</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> imagePicker <span class="operator">=</span> <span class="type">UIImagePickerController</span>()</span><br><span class="line">    imagePicker.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">    imagePicker.modalPresentationStyle <span class="operator">=</span> .popover</span><br><span class="line">    present(imagePicker, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/donaldwu.github.com/2017/07/10/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day19-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController/Day19UIImagepicker.gif" class=""><p>這邊雖然在iPhone7 Plus模擬器上成功了</p><p>但是換成其他模擬器跟實機來跑的時候依然會發生crash</p><p>目前我還沒找到其他比較好的解法</p><p>看官方文件似乎必須要是垂直的畫面才行</p><p>因此目前先把不能旋轉的限制解除</p><p>看之後有想到方法處理再決定是否需要鎖定畫面方向</p><p>回到Deployment Info修改設定</p><img src="/donaldwu.github.com/2017/07/10/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day19-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIImagePickerController/Day19RotationSetting.png" class=""><p>但這樣子會有一點小問題發生在RecordController</p><p>畫面從垂直旋轉到橫躺時必須要讓collectionView重新調整一次</p><p>不然畫面會維持垂直時的大小</p><p>所以回到RecordController.swift在viewDidLoad內加上一個觀察者來確認螢幕是不是旋轉過</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">NotificationCenter</span>.default.addObserver(<span class="keyword">self</span>, selector: <span class="keyword">#selector</span>(didRotation), name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIDeviceOrientationDidChange</span>, object: <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure><p>當然也要定義旋轉後的動作，我們讓collectionView重新載入</p><p>最後記得在離開時移除掉觀差者</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">didRotation</span>() &#123;</span><br><span class="line">    collectionView<span class="operator">?</span>.reloadData()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewWillDisappear</span>(<span class="keyword">_</span> <span class="params">animated</span>: <span class="type">Bool</span>) &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewWillDisappear(animated)</span><br><span class="line">    <span class="type">NotificationCenter</span>.default.removeObserver(<span class="keyword">self</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下篇待續～</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day18-新增成員頁面-UIView-SegmentedControl</title>
      <link href="/donaldwu.github.com/2017/07/09/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day18-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIView-SegmentedControl/"/>
      <url>/donaldwu.github.com/2017/07/09/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day18-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIView-SegmentedControl/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day18</p><p>講了好久的新增成員終於要來做了＠＠</p><p>預想中希望有一個UIImageView來選擇頭像</p><p>當然也要一個TextField來輸入名字，以及註冊用的button</p><p>然後有一個選擇守備位置的功能</p><p>想了一想，用之前玩過的SegmentedControl來試試效果好了</p><p>GO</p><span id="more"></span><p>照例先看看完成的畫面</p><img src="/donaldwu.github.com/2017/07/09/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day18-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIView-SegmentedControl/Day18UIView.png" class=""><p>先看code吧</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddMemberController</span>: <span class="title class_">UIViewController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> positionArray <span class="operator">=</span> [<span class="string">&quot;P&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;1B&quot;</span>, <span class="string">&quot;2B&quot;</span>, <span class="string">&quot;3B&quot;</span>, <span class="string">&quot;SS&quot;</span>, <span class="string">&quot;LF&quot;</span>, <span class="string">&quot;CF&quot;</span>, <span class="string">&quot;RF&quot;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">var</span> prefersStatusBarHidden: <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> profileImage: <span class="type">UIImageView</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> image <span class="operator">=</span> <span class="type">UIImageView</span>()</span><br><span class="line">        image.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        image.image <span class="operator">=</span> <span class="type">UIImage</span>(named: <span class="string">&quot;picture&quot;</span>)</span><br><span class="line">        image.contentMode <span class="operator">=</span> .scaleAspectFill</span><br><span class="line">        image.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">        image.layer.masksToBounds <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> positionSegmentedControl: <span class="type">UISegmentedControl</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> sc <span class="operator">=</span> <span class="type">UISegmentedControl</span>(items: [<span class="string">&quot;P&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;1B&quot;</span>, <span class="string">&quot;2B&quot;</span>, <span class="string">&quot;3B&quot;</span>, <span class="string">&quot;SS&quot;</span>, <span class="string">&quot;LF&quot;</span>, <span class="string">&quot;CF&quot;</span>, <span class="string">&quot;RF&quot;</span>])</span><br><span class="line">sc.selectedSegmentIndex <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        sc.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> sc</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> nameText: <span class="type">UITextField</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextField</span>()</span><br><span class="line">        text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        text.placeholder <span class="operator">=</span> <span class="string">&quot;Input Name&quot;</span></span><br><span class="line">        text.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.cyan.cgColor</span><br><span class="line">        text.layer.borderWidth <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> text</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> registerButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .cyan</span><br><span class="line">        button.setTitle(<span class="string">&quot;Register&quot;</span>, for: .normal)</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(registerNewPlayer), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="type">NotificationCenter</span>.default.addObserver(<span class="keyword">self</span>, selector: <span class="keyword">#selector</span>(<span class="type">AddMemberController</span>.keyboardWillShow), name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIKeyboardWillShow</span>, object: <span class="literal">nil</span>)</span><br><span class="line">        <span class="type">NotificationCenter</span>.default.addObserver(<span class="keyword">self</span>, selector: <span class="keyword">#selector</span>(<span class="type">AddMemberController</span>.keyboardWillHide), name: <span class="type">NSNotification</span>.<span class="type">Name</span>.<span class="type">UIKeyboardWillHide</span>, object: <span class="literal">nil</span>)</span><br><span class="line">        view.backgroundColor <span class="operator">=</span> .white</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> backButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;BACK&quot;</span>, style: .done, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(backHome))</span><br><span class="line">        navigationItem.leftBarButtonItem <span class="operator">=</span> backButton</span><br><span class="line">        </span><br><span class="line">        view.addSubview(profileImage)</span><br><span class="line">        view.addSubview(positionSegmentedControl)</span><br><span class="line">        view.addSubview(nameText)</span><br><span class="line">        view.addSubview(registerButton)</span><br><span class="line">        </span><br><span class="line">        profileImage.topAnchor.constraint(equalTo: view.topAnchor, constant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.heightAnchor.constraint(equalToConstant: <span class="number">130</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.widthAnchor.constraint(equalToConstant: <span class="number">130</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        positionSegmentedControl.topAnchor.constraint(equalTo: profileImage.bottomAnchor, constant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        positionSegmentedControl.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        positionSegmentedControl.widthAnchor.constraint(equalTo: view.widthAnchor, constant: <span class="operator">-</span><span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        positionSegmentedControl.heightAnchor.constraint(equalToConstant: <span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        nameText.topAnchor.constraint(equalTo: positionSegmentedControl.bottomAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        nameText.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        nameText.widthAnchor.constraint(equalTo: view.widthAnchor, constant: <span class="operator">-</span><span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        nameText.heightAnchor.constraint(equalToConstant: <span class="number">50</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        registerButton.topAnchor.constraint(equalTo: nameText.bottomAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        registerButton.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        registerButton.widthAnchor.constraint(equalTo: view.widthAnchor, constant: <span class="operator">-</span><span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        registerButton.heightAnchor.constraint(equalToConstant: <span class="number">50</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">registerNewPlayer</span>() &#123;</span><br><span class="line">        <span class="keyword">self</span>.dismiss(animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">backHome</span>() &#123;</span><br><span class="line">        <span class="keyword">self</span>.dismiss(animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">touchesBegan</span>(<span class="keyword">_</span> <span class="params">touches</span>: <span class="type">Set</span>&lt;<span class="type">UITouch</span>&gt;, <span class="params">with</span> <span class="params">event</span>: <span class="type">UIEvent</span>?) &#123;</span><br><span class="line">        view.endEditing(<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">keyboardWillShow</span>(<span class="params">notification</span>: <span class="type">NSNotification</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> keyboardSize <span class="operator">=</span> (notification.userInfo<span class="operator">?</span>[<span class="type">UIKeyboardFrameBeginUserInfoKey</span>] <span class="keyword">as?</span> <span class="type">NSValue</span>)<span class="operator">?</span>.cgRectValue &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">self</span>.view.frame.origin.y <span class="operator">==</span> <span class="number">0</span>&#123;</span><br><span class="line">                <span class="keyword">self</span>.view.frame.origin.y <span class="operator">-=</span> keyboardSize.height</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">keyboardWillHide</span>(<span class="params">notification</span>: <span class="type">NSNotification</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> keyboardSize <span class="operator">=</span> (notification.userInfo<span class="operator">?</span>[<span class="type">UIKeyboardFrameBeginUserInfoKey</span>] <span class="keyword">as?</span> <span class="type">NSValue</span>)<span class="operator">?</span>.cgRectValue &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">self</span>.view.frame.origin.y <span class="operator">!=</span> <span class="number">0</span>&#123;</span><br><span class="line">                <span class="keyword">self</span>.view.frame.origin.y <span class="operator">+=</span> keyboardSize.height</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewWillDisappear</span>(<span class="params">animated</span>: <span class="type">Bool</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewWillDisappear(animated)</span><br><span class="line">        <span class="type">NSNotificationCenter</span>.defaultCenter().removeObserver(<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>11~44先實作需要的元件，UIImageView、UISegmentedControl、UITextField、UIButton</p><p>接下來在viewDidLoad將上面四個元件作為subView加入畫面跟設定anchor</p><p>在UISegmentedControl內可以設定一個[Any]!的陣列</p><p>這裡我們需要九個守備位置，因此放入<code>[&quot;P&quot;, &quot;C&quot;, &quot;1B&quot;, &quot;2B&quot;, &quot;3B&quot;, &quot;SS&quot;, &quot;LF&quot;, &quot;CF&quot;, &quot;RF&quot;]</code></p><p>然後為了避免之後使用者忘記這個欄位把selectedSegmentIndex預設為0</p><p>再來是83行點擊註冊鈕觸發的registerNewPlayer function，這邊先讓點擊後畫面在這邊退出回到上一頁</p><p>之後這邊準備把資料傳到Firebase上做儲存(應該很快…..吧（￣ c￣）y▂ξ)</p><p>最後是91行之後的四個function是負責處理點擊UItextField之後畫面出現keyboard的附加動作</p><p>第一個function處理點擊keyboard以外的部分會收起keyboard</p><p>第二跟第三個function則是分別負責在keyboard出現之後把畫面往上抬高，讓使用者依然看得到UItextField</p><p>以及收起來之後畫面還原的工作，而為了處理這兩個動作必須在viewDidLoad裡面設置一個觀察者來觀察keyboard的活動</p><p>因此在48、49行加入了NSNotificationCenter</p><p>然而加上NSNotificationCenter之後還是得記得在畫面消失之後回收</p><p>因此最後在viewWillDisappear裡面remove，完工</p><p>完成的畫面動作如下</p><img src="/donaldwu.github.com/2017/07/09/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day18-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIView-SegmentedControl/Day18.gif" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day17-新增成員頁面-UIView + UITableView</title>
      <link href="/donaldwu.github.com/2017/07/08/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day17-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIView-UITableView/"/>
      <url>/donaldwu.github.com/2017/07/08/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day17-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIView-UITableView/</url>
      
        <content type="html"><![CDATA[<p>接續前兩天做的隊伍成員畫面SetNewTeamController</p><p>當時在實作時直接將整個畫面都用TableView製作</p><p>但是幾經思考，我覺得需要多一個按鈕在這個頁面上</p><p>使用者應該是經由這個按鈕來確認進入紀錄畫面</p><p>而非使用navigationItem的rightItem</p><span id="more"></span><p>為此，我認為用一個UIViewController當主體</p><p>在上面再另外新增一個TableView是比較好的做法</p><p>首先一樣先看看完工的模樣</p><img src="/donaldwu.github.com/2017/07/08/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day17-%E6%96%B0%E5%A2%9E%E6%88%90%E5%93%A1%E9%A0%81%E9%9D%A2-UIView-UITableView/Day17SetNewTeam.gif" class=""><p>最底層是一個UIView，上面放一個tableView跟一個button作為subView</p><p>就來看看在程式碼內如何做出這樣的效果吧</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SetNewTeamController</span>: <span class="title class_">UIViewController</span>, <span class="title class_">UITableViewDelegate</span>, <span class="title class_">UITableViewDataSource</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> cellId <span class="operator">=</span> <span class="string">&quot;cellId&quot;</span></span><br><span class="line">    <span class="keyword">var</span> teamTitle: <span class="type">String</span>?</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> tableView: <span class="type">UITableView</span>!</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">var</span> prefersStatusBarHidden: <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">lazy</span> <span class="keyword">var</span> startButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .purple</span><br><span class="line">        button.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">        button.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.blue.cgColor</span><br><span class="line">        button.layer.borderWidth <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;START&quot;</span>, for: .normal)</span><br><span class="line">        button.titleLabel<span class="operator">?</span>.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">13</span>)</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(toRecordController), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        view.backgroundColor <span class="operator">=</span> .white</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> backButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;BACK&quot;</span>, style: .done, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(backHome))</span><br><span class="line">        <span class="keyword">let</span> addButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;ADD MEMBER&quot;</span>, style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(toAddMemberController))</span><br><span class="line">        navigationItem.title <span class="operator">=</span> teamTitle</span><br><span class="line">        navigationItem.leftBarButtonItem <span class="operator">=</span> backButton</span><br><span class="line">        navigationItem.rightBarButtonItem <span class="operator">=</span> addButton</span><br><span class="line">        </span><br><span class="line">        tableView <span class="operator">=</span> <span class="type">UITableView</span>()</span><br><span class="line">        tableView.register(<span class="type">UITableViewCell</span>.<span class="keyword">self</span>, forCellReuseIdentifier: cellId)</span><br><span class="line">        tableView.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        tableView.dataSource <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        tableView.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        </span><br><span class="line">        view.addSubview(tableView)</span><br><span class="line">        view.addSubview(startButton)</span><br><span class="line">        </span><br><span class="line">        tableView.topAnchor.constraint(equalTo: view.topAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        tableView.rightAnchor.constraint(equalTo: view.rightAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        tableView.leftAnchor.constraint(equalTo: view.leftAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: <span class="operator">-</span><span class="number">72</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        startButton.topAnchor.constraint(equalTo: tableView.bottomAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        startButton.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        startButton.widthAnchor.constraint(equalToConstant: <span class="number">72</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        startButton.heightAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">backHome</span>() &#123;</span><br><span class="line">        <span class="keyword">self</span>.dismiss(animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">toAddMemberController</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">AddMemberController</span>()</span><br><span class="line">        present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">toRecordController</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">RecordController</span>(collectionViewLayout: <span class="type">UICollectionViewFlowLayout</span>())</span><br><span class="line">        present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">numberOfSections</span>(<span class="params">in</span> <span class="params">tableView</span>: <span class="type">UITableView</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">numberOfRowsInSection</span> <span class="params">section</span>: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">cellForRowAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell <span class="operator">=</span> <span class="type">UITableViewCell</span>(style: <span class="type">UITableViewCellStyle</span>.value1, reuseIdentifier: cellId)</span><br><span class="line">        cell.textLabel<span class="operator">?</span>.text <span class="operator">=</span> <span class="string">&quot;MEMBER HERE&quot;</span></span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先就是把原本是UITableViewController子類別的SetNewTeamController修改一下</p><p>如同前面所提到的，我們需要一個UIViewController跟一個UITableView</p><p>因此繼承UIViewController, UITableViewDelegate, UITableViewDataSource這三個類別</p><p>然後宣告一個變數tableView</p><p>在viewDidLoad裡面(36~40)實作、註冊、設定delegate跟datasource</p><p>然後將tableView作為UIView的subView加入畫面</p><p>最後設定anchor(45~48)來決定tableView的大小</p><p>在這裡讓tableView上方跟左右對齊整個畫面</p><p>下方則向上縮72Point，以留一部分空間放置新增的button</p><p>後面一樣實作<code>numberOfSections</code>、<code>numberOfRowsInSection</code>跟<code>cellForRowAt</code></p><p>接下來就是新增一個按鈕一樣新增到畫面上</p><p>然後可以看到在navigationItem的rightItem我將動作從toRecordController換成了toAddMemberController</p><p>這就是下一篇要製作來新增隊伍成員的畫面．</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day16-安裝兩個Xcode</title>
      <link href="/donaldwu.github.com/2017/07/07/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day16-%E5%AE%89%E8%A3%9D%E5%85%A9%E5%80%8BXcode/"/>
      <url>/donaldwu.github.com/2017/07/07/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day16-%E5%AE%89%E8%A3%9D%E5%85%A9%E5%80%8BXcode/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶日記Day16</p><p>但內容是偷懶用的Xcode安裝ＸＤ</p><p>Xcode9 beta已經可以下載了</p><p>就來下載用看看</p><span id="more"></span><p>不過如果mac裡面已經有了正式版的Xcode8怎麼辦？</p><p>其實只需要安裝在不同的目錄下就可以了</p><p>首先先去下載需要的安裝檔<a href="https://developer.apple.com/download/"> 官網下載傳送門 </a></p><p>再來就找個適合的路徑放進去點兩下安裝吧</p><p>完成就可以開始體驗一下Xcode9的新功能拉</p><p>話說新的模擬器外框看起來真不習慣ＸＤＤ</p><p>今天會花點時間研究想加上的新功能怎麼寫</p><p>希望明天可以不富奸ＸＤ</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day15-Firebase</title>
      <link href="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/"/>
      <url>/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day15</p><p>為了儲存之後的資料</p><p>今天就來設定Firebase的套件</p><span id="more"></span><p><a href="https://firebase.google.com/docs/ios/setup"> 首先來到Firebase官網的文件 </a></p><p>來跟著上面的步驟一步一步的來設定</p><p>首先用google帳號登入來到console點擊新增專案</p><img src="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/Day15NEW.png" class=""><p>填入專案名稱跟地點</p><p>建立完成就可以看到下面這個畫面</p><img src="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/Day15Add.png" class=""><p>點選加入iOS</p><img src="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/Day15Add2.png" class=""><p>接下來打開Xcode找到Target下面的Bundle Identifier</p><p>填入iOS繫結ID之後點註冊應用程式</p><img src="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/Day15Add3.png" class=""><p>接下來就把GoogleService-info.plist下載下來並放到Xcode裡面</p><img src="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/Day15AddGSInfo.gif" class=""><p>接下來就邊看接下來該做的步驟邊按完成到結束吧</p><p>CocoaPods的安裝這裡就先跳過（偷懶，跪謝谷歌大神）</p><p>直接用CocoaPods安裝Firebase的套件</p><p>先打開終端機移動到Project的目錄下輸入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod init</span><br></pre></td></tr></table></figure><img src="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/Day15Podinit.gif" class=""><p>然後修改產生出來的podfile內容</p><p>這邊範例我用vim進行修改，用xcode或其他文字編輯器也可以</p><p>直接在終端機Project的目錄下輸入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim podfile</span><br></pre></td></tr></table></figure><p>打開檔案之後按下i進入INSERT MODE</p><p>輸入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pod &#x27;Firebase/Database&#x27;</span><br><span class="line">pod &#x27;Firebase/Auth&#x27;</span><br><span class="line">pod &#x27;Firebase/Storage&#x27;</span><br></pre></td></tr></table></figure><p>輸入完成按下esc離開INSERT MODE</p><p>按下Shift + ;輸入wq就會儲存檔案並回到終端機的畫面</p><img src="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/Day15Vim.gif" class=""><p>修改完podfile就可以來進行pod的安裝拉(如果這時xcode有開可以先關掉)</p><p>一樣在終端機Project的目錄下輸入pod install</p><p>等他跑完就會發現目錄下多了一個projectName.xcworkspace檔案</p><p>點兩下這檔案打開xcode就會發現多了個pod的資料夾</p><img src="/donaldwu.github.com/2017/07/06/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day15-Firebase/Day15Posinstall.gif" class=""><p>裡面就包含了剛剛安裝的pod</p><p>最後再回到AppDelegate.swift修改一下</p><p>先import Firebase的套件</p><p>然後在didFinishLaunchingWithOptions這個function內加上</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">application</span>(<span class="keyword">_</span> <span class="params">application</span>: <span class="type">UIApplication</span>, <span class="params">didFinishLaunchingWithOptions</span> <span class="params">launchOptions</span>: [<span class="params">UIApplicationLaunchOptionsKey</span>: <span class="keyword">Any</span>]<span class="operator">?</span>) -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">FIRApp</span>.configure()</span><br><span class="line">    </span><br><span class="line">    window <span class="operator">=</span> <span class="type">UIWindow</span>(frame: <span class="type">UIScreen</span>.main.bounds)</span><br><span class="line">    window<span class="operator">?</span>.makeKeyAndVisible()</span><br><span class="line">    window<span class="operator">?</span>.rootViewController <span class="operator">=</span> <span class="type">UINavigationController</span>(rootViewController: <span class="type">HomeController</span>())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下來就可以準備使用有安裝的Firebase套件了．</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day14-新首頁Part3-TableView</title>
      <link href="/donaldwu.github.com/2017/07/05/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day14-%E6%96%B0%E9%A6%96%E9%A0%81Part3-TableView/"/>
      <url>/donaldwu.github.com/2017/07/05/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day14-%E6%96%B0%E9%A6%96%E9%A0%81Part3-TableView/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day14</p><p>昨天接上了首頁</p><p>接下來我希望首頁能用TableView顯示出已經登陸過的球隊</p><p>然後可以點擊球隊來進入之前寫的紀錄頁面</p><p>當然這樣也需要一個按鈕來新增球隊</p><p>以及一個讓球隊可以新增隊員資料的頁面</p><span id="more"></span><p>首先就來看看做完的效果應該是怎麼一個樣子的</p><img src="/donaldwu.github.com/2017/07/05/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day14-%E6%96%B0%E9%A6%96%E9%A0%81Part3-TableView/Day14Demo.gif" class=""><p>可以看到首頁先放了五個假資料，右上方放了一個button</p><p>點擊下去跳出一個alertController可以輸入新增的隊伍名稱</p><p>輸入完隊名(目前不輸也行)按下OK會進入新的球隊人員設定頁面</p><p>按下取消則是回到首頁不做任何事情</p><p>先到HomeController.swift進行修改</p><p>內容如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HomeController</span>: <span class="title class_">UITableViewController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> cellId <span class="operator">=</span> <span class="string">&quot;cellId&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">var</span> prefersStatusBarHidden: <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="keyword">let</span> newTeamButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;New Team&quot;</span>,</span><br><span class="line">                                         style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(toSetNewTeamController))</span><br><span class="line">        navigationItem.rightBarButtonItem <span class="operator">=</span> newTeamButton</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">toSetNewTeamController</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> alertController <span class="operator">=</span> <span class="type">UIAlertController</span>(title: <span class="string">&quot;Add New Team&quot;</span>, message: <span class="string">&quot;&quot;</span>, preferredStyle: .alert)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> saveAction <span class="operator">=</span> <span class="type">UIAlertAction</span>(title: <span class="string">&quot;OK&quot;</span>, style: .default, handler: &#123;</span><br><span class="line">            alert -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> firstTextField <span class="operator">=</span> alertController.textFields<span class="operator">!</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="type">UITextField</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">SetNewTeamController</span>()</span><br><span class="line">            controller.teamTitle <span class="operator">=</span> firstTextField.text<span class="operator">!</span></span><br><span class="line">            <span class="keyword">self</span>.present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> cancelAction <span class="operator">=</span> <span class="type">UIAlertAction</span>(title: <span class="string">&quot;Cancel&quot;</span>, style: .default, handler: &#123;</span><br><span class="line">            (action : <span class="type">UIAlertAction</span>!) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">        alertController.addTextField &#123; (textField : <span class="type">UITextField</span>!) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            textField.placeholder <span class="operator">=</span> <span class="string">&quot;Enter Team Name&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        alertController.addAction(saveAction)</span><br><span class="line">        alertController.addAction(cancelAction)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.present(alertController, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">numberOfRowsInSection</span> <span class="params">section</span>: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">cellForRowAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell <span class="operator">=</span> <span class="type">UITableViewCell</span>(style: .subtitle, reuseIdentifier: cellId)</span><br><span class="line">        </span><br><span class="line">        cell.textLabel<span class="operator">?</span>.text <span class="operator">=</span> <span class="string">&quot;TEAM LIST HERE&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">didSelectRowAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">SetNewTeamController</span>()</span><br><span class="line">        controller.teamTitle <span class="operator">=</span> <span class="string">&quot;Exit Team Name<span class="subst">\(indexPath.row)</span>&quot;</span></span><br><span class="line">        present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先是將HomeController從UIViewController的子類別改成UITableView的子類別</p><p>然後實作<code>numberOfRowsInSection</code>、<code>cellForRowAt</code>回傳5個row跟帶有textLabel的cell</p><p>再來是在viewDidLoad內實作右上的Add Team button</p><p>按鈕的動作則放在<code>toSetNewTeamController</code>這個function裡面</p><p>在裡面我們新增一個UIAlertController</p><p>UIAlertController內包含一個textField跟兩個UIAction</p><p>兩個UIAction一個負責取消動作，另一個則負責將新隊伍名稱跟畫面帶到下一個Controller</p><p>最後在59行設定當首頁的Row被選擇時，會將畫面送到新增的SetNewTeamController</p><p>雖然目前只有轉換畫面，之後再把資料串起來</p><p>接下來就來看SetNewTeamController的內容</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SetNewTeamController</span>: <span class="title class_">UITableViewController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> cellId <span class="operator">=</span> <span class="string">&quot;cellId&quot;</span></span><br><span class="line">    <span class="keyword">var</span> teamTitle: <span class="type">String</span>?</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">var</span> prefersStatusBarHidden: <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.navigationItem.title <span class="operator">=</span> teamTitle</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> backButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;BACK&quot;</span>,</span><br><span class="line">                                         style: .done, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(backHome))</span><br><span class="line">        navigationItem.leftBarButtonItem <span class="operator">=</span> backButton</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> startButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;START&quot;</span>,</span><br><span class="line">                                         style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(toRecordController))</span><br><span class="line">        navigationItem.rightBarButtonItem <span class="operator">=</span> startButton</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">backHome</span>() &#123;</span><br><span class="line">        <span class="keyword">self</span>.dismiss(animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">toRecordController</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">RecordController</span>(collectionViewLayout: <span class="type">UICollectionViewFlowLayout</span>())</span><br><span class="line">        present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">numberOfRowsInSection</span> <span class="params">section</span>: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">tableView</span>(<span class="keyword">_</span> <span class="params">tableView</span>: <span class="type">UITableView</span>, <span class="params">cellForRowAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell <span class="operator">=</span> <span class="type">UITableViewCell</span>(style: .default, reuseIdentifier: cellId)</span><br><span class="line">        cell.textLabel<span class="operator">?</span>.text <span class="operator">=</span> <span class="string">&quot;MEMBER HERE&quot;</span></span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SetNewTeamController一樣使用tableView</p><p>並在navigationBar左右各放一個button</p><p>左邊leftBarButtonItem負責回到home</p><p>又邊rightBarButtonItem負責將畫面送到RecordController</p><p>並且navigationItem.title放上從home page設定的隊伍名稱</p><p>Done~</p><p>接下來預計做選手新增用的畫面</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day13-新首頁Part2</title>
      <link href="/donaldwu.github.com/2017/07/04/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day13-%E6%96%B0%E9%A6%96%E9%A0%81Part2/"/>
      <url>/donaldwu.github.com/2017/07/04/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day13-%E6%96%B0%E9%A6%96%E9%A0%81Part2/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day13</p><p>昨天把首頁跟RecordController接起來</p><p>今天要做個navigationItem把畫面送回首頁</p><p>一樣先來看看做完的效果</p><span id="more"></span><img src="/donaldwu.github.com/2017/07/04/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day13-%E6%96%B0%E9%A6%96%E9%A0%81Part2/Day13backHome.gif" class=""><p>點開RecordController.swift</p><p>稍微修改一下viewDidLoad</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="keyword">let</span> backButton <span class="operator">=</span> <span class="type">UIBarButtonItem</span>(title: <span class="string">&quot;BACK&quot;</span>,</span><br><span class="line">                                        style: .plain, target: <span class="keyword">self</span>, action: <span class="keyword">#selector</span>(<span class="type">RecordController</span>.backAction))</span><br><span class="line">    navigationItem.leftBarButtonItem <span class="operator">=</span> backButton</span><br><span class="line">    </span><br><span class="line">    collectionView<span class="operator">?</span>.backgroundColor <span class="operator">=</span> .green</span><br><span class="line">    collectionView<span class="operator">?</span>.register(<span class="type">RecordCell</span>.<span class="keyword">self</span>, forCellWithReuseIdentifier: cellId)</span><br><span class="line">    <span class="keyword">self</span>.setNeedsStatusBarAppearanceUpdate()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.refreshControl <span class="operator">=</span> <span class="type">UIRefreshControl</span>()</span><br><span class="line">    <span class="keyword">self</span>.refreshControl.attributedTitle <span class="operator">=</span> <span class="type">NSAttributedString</span>(string: <span class="string">&quot;Reloading&quot;</span>)</span><br><span class="line">    <span class="keyword">self</span>.refreshControl.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(refresh), for: .valueChanged)</span><br><span class="line">    collectionView<span class="operator">!</span>.addSubview(refreshControl)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">backAction</span>() -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">HomeController</span>()</span><br><span class="line">    present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>實作一個UIBarButtonItem</p><p>動作就設定在下面的backAction裡面</p><p>然後把這個item放在leftBarButtonItem，完成～</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day12-新首頁</title>
      <link href="/donaldwu.github.com/2017/07/03/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day12-%E6%96%B0%E9%A6%96%E9%A0%81/"/>
      <url>/donaldwu.github.com/2017/07/03/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day12-%E6%96%B0%E9%A6%96%E9%A0%81/</url>
      
        <content type="html"><![CDATA[<p>紀錄的選項告一段落之後</p><p>接下來當然要讓使用者可以輸入(或從其他地方下載)被紀錄人員的相關資訊</p><p>因此應該需要一個讓使用者新增或修改球隊人員的頁面</p><p>甚至加上可以儲存成一支(或以上)隊伍的人員資料</p><p>為此就需要一個首頁</p><p>把首頁作為起點可以進行人員(球隊)的新增</p><p>跟接上之前所做好的紀錄畫面的地方</p><span id="more"></span><p>今天應該要讓畫面長這樣</p><img src="/donaldwu.github.com/2017/07/03/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day12-%E6%96%B0%E9%A6%96%E9%A0%81/Home.png" class=""><p>一樣帶有navigationbar的UIViewController</p><p>畫面中下位置有個Start的按鈕接到之前做的紀錄畫面</p><p>首先先在Controller內新增一個HomeController.swift</p><p>內容如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HomeController</span>: <span class="title class_">UIViewController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> startButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;Start&quot;</span>, for: .normal)</span><br><span class="line">        button.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.red.cgColor</span><br><span class="line">        button.layer.borderWidth <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(toRecordController), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        view.backgroundColor <span class="operator">=</span> .cyan</span><br><span class="line">        view.addSubview(startButton)</span><br><span class="line">        </span><br><span class="line">        startButton.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        startButton.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        startButton.heightAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        startButton.widthAnchor.constraint(equalToConstant: <span class="number">96</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">toRecordController</span>() &#123;</span><br><span class="line">        <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">RecordController</span>(collectionViewLayout: <span class="type">UICollectionViewFlowLayout</span>())</span><br><span class="line">        present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5到13行實作轉移畫面用的button，並在viewDidLoad裡面新增子畫面跟設定anchor來定位</p><p>最後的function則設定點擊後轉移的動作，我們先將畫面轉移到RecordController</p><p>接下來修改AppDelegate.swift內程式開啟時送出的window</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">application</span>(<span class="keyword">_</span> <span class="params">application</span>: <span class="type">UIApplication</span>, <span class="params">didFinishLaunchingWithOptions</span> <span class="params">launchOptions</span>: [<span class="params">UIApplicationLaunchOptionsKey</span>: <span class="keyword">Any</span>]<span class="operator">?</span>) -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    </span><br><span class="line">    window <span class="operator">=</span> <span class="type">UIWindow</span>(frame: <span class="type">UIScreen</span>.main.bounds)</span><br><span class="line">    window<span class="operator">?</span>.makeKeyAndVisible()</span><br><span class="line">    window<span class="operator">?</span>.rootViewController <span class="operator">=</span> <span class="type">UINavigationController</span>(rootViewController: <span class="type">HomeController</span>())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行一下看看結果</p><img src="/donaldwu.github.com/2017/07/03/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day12-%E6%96%B0%E9%A6%96%E9%A0%81/HomeDefault.png" class=""><p>等等，好像哪裡怪怪的…</p><p>navigationController的size好像怪怪的？？？</p><p>所以我說那個statusBar跑去哪了？？？</p><p>沒事～先喝杯珍奶壓壓驚（￣ c￣）y▂ξ</p><p>一直覺得除了看影片之外還是看得到statusBar比較好＠＠</p><p>畢竟一場球也得打個兩個多小時，邊紀錄還要一直出去看時間多麻煩啊</p><p>回到HomeController在viewDidLoad裡面加上這一行來執行一下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;LandScape StatusBarHidden default value is <span class="subst">\(prefersStatusBarHidden)</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>結果長這樣</p><img src="/donaldwu.github.com/2017/07/03/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day12-%E6%96%B0%E9%A6%96%E9%A0%81/statusDefault.png" class=""><p>查了才知道原來蘋果把畫面橫躺之後的statusBarHidden預設為true</p><p>那只要把它改成false就好了對吧</p><p>歹誌爪隊摀戲憨人想Ａㄏㄧㄚˋ尼甘單？？？</p><p>prefersStatusBarHidden給他option+左鍵按下去跳出來這東西</p><img src="/donaldwu.github.com/2017/07/03/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day12-%E6%96%B0%E9%A6%96%E9%A0%81/prefersStatusBarHidden.png" class=""><p>在垂直被壓縮的情況下iOS8以上預設就是藏起來</p><p>而且還是{ get }，read-only的變數</p><p>不能直接用，只能把它整個覆寫掉了</p><p>在viewDidLoad之前覆寫掉再執行看看</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">var</span> prefersStatusBarHidden: <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/donaldwu.github.com/2017/07/03/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day12-%E6%96%B0%E9%A6%96%E9%A0%81/Day12.gif" class=""><p>這樣看來就一切正常了</p><p>最後這裡有在RecordCell.swift跟RecordController.swift做一點修改</p><p>新增球員名稱的欄位以及調整一下UI的位置</p><p>新增以及修改內容如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nameLabel: <span class="type">UILabel</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> label <span class="operator">=</span> <span class="type">UILabel</span>()</span><br><span class="line">    label.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    label.backgroundColor <span class="operator">=</span> .orange</span><br><span class="line">    label.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">12</span>)</span><br><span class="line">    label.textAlignment <span class="operator">=</span> .center</span><br><span class="line">    label.adjustsFontSizeToFitWidth <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    label.text <span class="operator">=</span> <span class="string">&quot;Yohoho&quot;</span></span><br><span class="line">    <span class="keyword">return</span> label</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"> <span class="keyword">func</span> <span class="title function_">setupView</span>() &#123;</span><br><span class="line">    backgroundColor <span class="operator">=</span> .yellow</span><br><span class="line">    addSubview(profileImage)</span><br><span class="line">    addSubview(recordText)</span><br><span class="line">    addSubview(sentButton)</span><br><span class="line">    addSubview(undoButton)</span><br><span class="line">    addSubview(orderLabel)</span><br><span class="line">    addSubview(nameLabel)</span><br><span class="line">    </span><br><span class="line">    profileImage.topAnchor.constraint(equalTo: <span class="keyword">self</span>.topAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.leftAnchor.constraint(equalTo: <span class="keyword">self</span>.leftAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.heightAnchor.constraint(equalToConstant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.widthAnchor.constraint(equalToConstant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    sentButton.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor, constant: <span class="operator">-</span><span class="number">18</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.rightAnchor.constraint(equalTo: <span class="keyword">self</span>.rightAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.widthAnchor.constraint(equalToConstant: <span class="number">60</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    undoButton.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor, constant: <span class="number">18</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    undoButton.rightAnchor.constraint(equalTo: <span class="keyword">self</span>.rightAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    undoButton.widthAnchor.constraint(equalToConstant: <span class="number">60</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    undoButton.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    recordText.leftAnchor.constraint(equalTo: profileImage.rightAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.rightAnchor.constraint(equalTo: sentButton.leftAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    orderLabel.topAnchor.constraint(equalTo: profileImage.bottomAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.bottomAnchor.constraint(equalTo: <span class="keyword">self</span>.bottomAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.leftAnchor.constraint(equalTo: profileImage.leftAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.rightAnchor.constraint(equalTo: profileImage.rightAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    nameLabel.topAnchor.constraint(equalTo: <span class="keyword">self</span>.topAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nameLabel.leftAnchor.constraint(equalTo: recordText.leftAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nameLabel.bottomAnchor.constraint(equalTo: recordText.topAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nameLabel.widthAnchor.constraint(equalToConstant: <span class="number">84</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RecordCell.swift新增lable跟調整UI</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">collectionView</span>(<span class="keyword">_</span> <span class="params">collectionView</span>: <span class="type">UICollectionView</span>, <span class="params">cellForItemAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">UICollectionViewCell</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> cell <span class="operator">=</span> collectionView.dequeueReusableCell(withReuseIdentifier: cellId, for: indexPath) <span class="keyword">as?</span> <span class="type">RecordCell</span></span><br><span class="line">    <span class="keyword">let</span> player <span class="operator">=</span> players[indexPath.item]</span><br><span class="line">    cell<span class="operator">?</span>.backgroundColor <span class="operator">=</span> .blue</span><br><span class="line">    cell<span class="operator">?</span>.sentButton.tag <span class="operator">=</span> indexPath.item</span><br><span class="line">    cell<span class="operator">?</span>.undoButton.tag <span class="operator">=</span> indexPath.item</span><br><span class="line">    cell<span class="operator">?</span>.sentButton.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(sentRecord(sender:)), for: .touchUpInside)</span><br><span class="line">    cell<span class="operator">?</span>.undoButton.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(uudoRecord(sender:)), for: .touchUpInside)</span><br><span class="line">    cell<span class="operator">?</span>.profileImage.image <span class="operator">=</span> player.profileImage</span><br><span class="line">    cell<span class="operator">?</span>.nameLabel.text <span class="operator">=</span> player.name</span><br><span class="line">    cell<span class="operator">?</span>.orderLabel.text <span class="operator">=</span> player.order <span class="operator">+</span> <span class="string">&quot; - &quot;</span> <span class="operator">+</span> player.position</span><br><span class="line">    cell<span class="operator">?</span>.recordText.text <span class="operator">=</span> <span class="type">String</span>(describing: player.recordArray)</span><br><span class="line">    <span class="keyword">return</span> cell<span class="operator">!</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RecordController則將資料在生成cell時放入label</p><p>晚點再來做新增球隊與製作紀錄</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day11-PickerView-Part3</title>
      <link href="/donaldwu.github.com/2017/07/02/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day11-PickerView-Part3/"/>
      <url>/donaldwu.github.com/2017/07/02/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day11-PickerView-Part3/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day11</p><p>繼續完成pickView的功能</p><p>首先先把之前放在RecordController.swift的紀錄陣列放到Player.swift裡面</p><p>所以現在Player.swift長這樣</p><span id="more"></span><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> recordArray0 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray1 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray2 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray3 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray4 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray5 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray6 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray7 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray8 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Player</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">var</span> order: <span class="type">String</span></span><br><span class="line">    <span class="keyword">var</span> position: <span class="type">String</span></span><br><span class="line">    <span class="keyword">var</span> recordArray: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> profileImage: <span class="type">UIImage</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步來完成昨天在pickerView裡面實作按鈕的點擊動作</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">sendRecordBack</span>() &#123;</span><br><span class="line">    <span class="keyword">switch</span> rowInRecordArray &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        recordArray0.append(tempRecord)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        recordArray1.append(tempRecord)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        recordArray2.append(tempRecord)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        recordArray3.append(tempRecord)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        recordArray4.append(tempRecord)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        recordArray5.append(tempRecord)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        recordArray6.append(tempRecord)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        recordArray7.append(tempRecord)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        recordArray8.append(tempRecord)</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">RecordController</span>(collectionViewLayout: <span class="type">UICollectionViewFlowLayout</span>())</span><br><span class="line">    present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">sendRecordCancel</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">RecordController</span>(collectionViewLayout: <span class="type">UICollectionViewFlowLayout</span>())</span><br><span class="line">    present(<span class="type">UINavigationController</span>(rootViewController: controller), animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因為這邊回資料頁面會重新產生collectionView，所以直接更新陣列內容即可</p><p>更新完就回到推出<code>RecordController</code></p><p>取消就只要直接回前頁即可</p><p>第三步回到RecordCell.swift調整一下UI以及增加一個鍵來取消存在的紀錄</p><p>頁面大概長這樣</p><img src="/donaldwu.github.com/2017/07/02/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day11-PickerView-Part3/UI.png" class=""><p>就修改一下Anchor跟新增button</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lazy</span> <span class="keyword">var</span> undoButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">    button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    button.backgroundColor <span class="operator">=</span> .orange</span><br><span class="line">    button.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">    button.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.blue.cgColor</span><br><span class="line">    button.layer.borderWidth <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">    button.setTitle(<span class="string">&quot;UNDO&quot;</span>, for: .normal)</span><br><span class="line">    button.titleLabel<span class="operator">?</span>.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">13</span>)</span><br><span class="line">    <span class="keyword">return</span> button</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">setupView</span>() &#123;</span><br><span class="line">    backgroundColor <span class="operator">=</span> .yellow</span><br><span class="line">    addSubview(profileImage)</span><br><span class="line">    addSubview(recordText)</span><br><span class="line">    addSubview(sentButton)</span><br><span class="line">    addSubview(undoButton)</span><br><span class="line">    addSubview(orderLabel)</span><br><span class="line">    </span><br><span class="line">    profileImage.topAnchor.constraint(equalTo: <span class="keyword">self</span>.topAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.leftAnchor.constraint(equalTo: <span class="keyword">self</span>.leftAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.heightAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.widthAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    sentButton.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor, constant: <span class="operator">-</span><span class="number">18</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.rightAnchor.constraint(equalTo: <span class="keyword">self</span>.rightAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.widthAnchor.constraint(equalToConstant: <span class="number">60</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    undoButton.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor, constant: <span class="number">18</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    undoButton.rightAnchor.constraint(equalTo: <span class="keyword">self</span>.rightAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    undoButton.widthAnchor.constraint(equalToConstant: <span class="number">60</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    undoButton.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    recordText.leftAnchor.constraint(equalTo: profileImage.rightAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.rightAnchor.constraint(equalTo: sentButton.leftAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    orderLabel.topAnchor.constraint(equalTo: profileImage.bottomAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.bottomAnchor.constraint(equalTo: <span class="keyword">self</span>.bottomAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.leftAnchor.constraint(equalTo: <span class="keyword">self</span>.leftAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.rightAnchor.constraint(equalTo: recordText.leftAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再回到RecordController.swift增加取消的動作undoRecord</p><p>如果點擊的那一行有資料(recordArray(row)!&#x3D; 0)，就把對應對應的players資料的最後一個資料刪除</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">collectionView</span>(<span class="keyword">_</span> <span class="params">collectionView</span>: <span class="type">UICollectionView</span>, <span class="params">cellForItemAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">UICollectionViewCell</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> cell <span class="operator">=</span> collectionView.dequeueReusableCell(withReuseIdentifier: cellId, for: indexPath) <span class="keyword">as?</span> <span class="type">RecordCell</span></span><br><span class="line">    <span class="keyword">let</span> player <span class="operator">=</span> players[indexPath.item]</span><br><span class="line">    cell<span class="operator">?</span>.backgroundColor <span class="operator">=</span> .blue</span><br><span class="line">    cell<span class="operator">?</span>.sentButton.tag <span class="operator">=</span> indexPath.item</span><br><span class="line">    cell<span class="operator">?</span>.undoButton.tag <span class="operator">=</span> indexPath.item</span><br><span class="line">    cell<span class="operator">?</span>.sentButton.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(sentRecord(sender:)), for: .touchUpInside)</span><br><span class="line">    cell<span class="operator">?</span>.undoButton.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(uudoRecord(sender:)), for: .touchUpInside)</span><br><span class="line">    cell<span class="operator">?</span>.profileImage.image <span class="operator">=</span> player.profileImage</span><br><span class="line">    cell<span class="operator">?</span>.orderLabel.text <span class="operator">=</span> player.order <span class="operator">+</span> <span class="string">&quot; - &quot;</span> <span class="operator">+</span> player.position</span><br><span class="line">    cell<span class="operator">?</span>.recordText.text <span class="operator">=</span> <span class="type">String</span>(describing: player.recordArray)</span><br><span class="line">    <span class="keyword">return</span> cell<span class="operator">!</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">sentRecord</span>(<span class="params">sender</span>: <span class="type">UIButton</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">RecordPickerController</span>()</span><br><span class="line">    controller.rowInRecordArray <span class="operator">=</span> sender.tag</span><br><span class="line">    present(controller, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">uudoRecord</span>(<span class="params">sender</span>: <span class="type">UIButton</span>) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hit Button<span class="subst">\(sender.tag)</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">switch</span> sender.tag &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray0.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">0</span>].recordArray.remove(at: recordArray0.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray0.remove(at: recordArray0.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray1.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">1</span>].recordArray.remove(at: recordArray1.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray1.remove(at: recordArray1.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray2.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">2</span>].recordArray.remove(at: recordArray2.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray2.remove(at: recordArray2.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray3.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">3</span>].recordArray.remove(at: recordArray3.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray3.remove(at: recordArray3.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray4.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">4</span>].recordArray.remove(at: recordArray4.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray4.remove(at: recordArray4.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray5.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">5</span>].recordArray.remove(at: recordArray5.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray5.remove(at: recordArray5.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray6.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">6</span>].recordArray.remove(at: recordArray6.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray6.remove(at: recordArray6.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray7.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">7</span>].recordArray.remove(at: recordArray7.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray7.remove(at: recordArray7.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">if</span> recordArray8.count <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">            players[<span class="number">8</span>].recordArray.remove(at: recordArray8.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">            recordArray8.remove(at: recordArray8.count <span class="operator">-</span> <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">        <span class="keyword">self</span>.collectionView<span class="operator">?</span>.reloadData()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行一下看結果</p><img src="/donaldwu.github.com/2017/07/02/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day11-PickerView-Part3/part3.gif" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day10-PickerView Part2</title>
      <link href="/donaldwu.github.com/2017/07/01/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day10-PickerView-Part2/"/>
      <url>/donaldwu.github.com/2017/07/01/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day10-PickerView-Part2/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶日記Day10</p><p>今天來把昨天做的UIPickerView繼續完成</p><p>首先先來確認目標</p><span id="more"></span><p>在紀錄時需要的資料希望可以像撥洋蔥一樣一層一層的作選擇</p><p>第一層先選擇是安打(H)、保送(BB)、失誤(E)、三振(K)、犧牲飛球(SF)</p><p>第二層再更進一步選擇是一安、二安、三安還是全壘打等等</p><p>然後能夠從UIPickerView把資料回存在回到collectionView時顯示</p><p>來看看現在的UIPickerView長這樣</p><img src="/donaldwu.github.com/2017/07/01/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day10-PickerView-Part2/PickerView.png" class=""><p>可以看到需要兩行的選項</p><p>昨天定義了第一行的資訊，現在就來繼續定義第二行</p><p>回到RecordPickerController.swift</p><p>新增一個陣列</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> recordDetialArray <span class="operator">=</span> [[<span class="string">&quot;H&quot;</span>, <span class="string">&quot;2B&quot;</span>, <span class="string">&quot;3B&quot;</span>, <span class="string">&quot;HR&quot;</span>], [<span class="string">&quot;BB&quot;</span>, <span class="string">&quot;HBP&quot;</span>], [<span class="string">&quot;E1&quot;</span>, <span class="string">&quot;E2&quot;</span>, <span class="string">&quot;E3&quot;</span>, <span class="string">&quot;E4&quot;</span>, <span class="string">&quot;E5&quot;</span>, <span class="string">&quot;E6&quot;</span>, <span class="string">&quot;E7&quot;</span>, <span class="string">&quot;E8&quot;</span>, <span class="string">&quot;E9&quot;</span>], [<span class="string">&quot;K&quot;</span>, <span class="string">&quot;K&quot;</span>], [<span class="string">&quot;SF&quot;</span>, <span class="string">&quot;SH&quot;</span>]]</span><br></pre></td></tr></table></figure><p>接下來修改一下<code>numberOfComponents</code>、<code>numberOfRowsInComponent</code>、<code>titleForRow</code>、<code>didSelectRow</code>這幾個方法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">numberOfComponents</span>(<span class="params">in</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">numberOfRowsInComponent</span> <span class="params">component</span>: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> component <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> recordtypeArray.count</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> recordDetialArray[recordPickerView.selectedRow(inComponent: <span class="number">0</span>)].count</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">titleForRow</span> <span class="params">row</span>: <span class="type">Int</span>, <span class="params">forComponent</span> <span class="params">component</span>: <span class="type">Int</span>) -&gt; <span class="type">String</span>? &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> component <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> recordtypeArray[row]</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> recordDetialArray[recordPickerView.selectedRow(inComponent: <span class="number">0</span>)][row]</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">didSelectRow</span> <span class="params">row</span>: <span class="type">Int</span>, <span class="params">inComponent</span> <span class="params">component</span>: <span class="type">Int</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> component <span class="operator">==</span> <span class="number">0</span> &#123;</span><br><span class="line">    </span><br><span class="line">        recordPickerView.reloadComponent(<span class="number">1</span>)</span><br><span class="line">        tempRecord <span class="operator">=</span> recordDetialArray[row][<span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> component <span class="operator">==</span> <span class="number">1</span> &#123;</span><br><span class="line">        </span><br><span class="line">        tempRecord <span class="operator">=</span> recordDetialArray[recordPickerView.selectedRow(inComponent: <span class="number">0</span>)][row]</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們需要兩行，首先修改<code>numberOfComponents</code>回傳2</p><p>再來修改<code>numberOfRowsInComponent</code>，如果是第零行就回傳<code>recordtypeArray</code>的陣列數量</p><p>如果是第一行就回傳<code>recordDetialArray</code>中對應第零行被選到的對應陣列的數量</p><p>接下來是內容的修改，再呈現第零行時回傳<code>recordtypeArray</code>內與列數相對的字串</p><p>第一行則呈現<code>recordDetialArray</code>中對應第零行被選到的對應陣列的字串</p><p>然後定義當某一行某一列被選到的時候要做的動作</p><p>但在做動作之前，先定義一些輔助用的變數</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tempRecord: <span class="type">String</span> <span class="operator">=</span> <span class="string">&quot;H&quot;</span></span><br></pre></td></tr></table></figure><p>因為進入PickerView時預設是選擇第零列</p><p>因此如果使用者都不做動作回傳的應該是安打(H)</p><p>所以我們預設值給H</p><p>輔助用的變數設定完，就來設定被選到時的動作</p><p>如果使用者選則了第零行的某一列，應該要去重新設定第一行對應的內容</p><p>並將要回傳的資料設定成第零行被選擇那一列的字串</p><p>而當使用者選擇了第一行，就回傳<code>recordDetialArray</code></p><p>中第零列所選擇的列數所對應到的字串陣列中與現在第一行選擇列數相對應的字串</p><p>最後來新增兩個按鈕在UIPickerView內</p><p>讓使用者可以做新增或取消的動作</p><p>並先將要執行動作的function準備好</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> addButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .purple</span><br><span class="line">        button.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">        button.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.blue.cgColor</span><br><span class="line">        button.layer.borderWidth <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;UPDATE&quot;</span>, for: .normal)</span><br><span class="line">        button.titleLabel<span class="operator">?</span>.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">13</span>)</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(sendRecordBack), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> cancelButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .purple</span><br><span class="line">        button.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">        button.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.blue.cgColor</span><br><span class="line">        button.layer.borderWidth <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;CANCEL&quot;</span>, for: .normal)</span><br><span class="line">        button.titleLabel<span class="operator">?</span>.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">13</span>)</span><br><span class="line">        button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(sendRecordCancel), for: .touchUpInside)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        view.backgroundColor <span class="operator">=</span> .green</span><br><span class="line">        </span><br><span class="line">        recordPickerView <span class="operator">=</span> <span class="type">UIPickerView</span>()</span><br><span class="line">        recordPickerView.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="keyword">self</span>.view.bounds.height <span class="operator">/</span> <span class="number">3</span>, width: <span class="keyword">self</span>.view.bounds.width, height: <span class="number">200</span>)</span><br><span class="line">        recordPickerView.showsSelectionIndicator <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        recordPickerView.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        recordPickerView.dataSource <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(recordPickerView)</span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(addButton)</span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(cancelButton)</span><br><span class="line">        </span><br><span class="line">        addButton.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        addButton.centerXAnchor.constraint(equalTo: view.centerXAnchor, constant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        addButton.widthAnchor.constraint(equalToConstant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        addButton.heightAnchor.constraint(equalToConstant: <span class="number">36</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        cancelButton.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        cancelButton.centerXAnchor.constraint(equalTo: view.centerXAnchor, constant: <span class="operator">-</span><span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        cancelButton.widthAnchor.constraint(equalToConstant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        cancelButton.heightAnchor.constraint(equalToConstant: <span class="number">36</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">sendRecordBack</span>() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">sendRecordCancel</span>() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上，接下來的明天處理</p><p>今天回母校打系藍OB賽</p><p>學弟們真是用心，準備不少球賽以外的活動</p><p>今天的運動量應該是超過過去半年的總和</p><p>第一次覺得累到快吸不到氣ＱＱ</p><p>該做點運動了….</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day9-PickerView</title>
      <link href="/donaldwu.github.com/2017/06/30/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day9-PickerView/"/>
      <url>/donaldwu.github.com/2017/06/30/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day9-PickerView/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶日記Day9</p><p>接下來想要實做的就是把打席結果弄成選項給使用者做決定</p><p>目前想到的是使用UIPickerView, 或者是用ActionSheet</p><p>想了想用ActionSheet好像需要用很多層</p><p>所以今天先來試試UIPickerView</p><span id="more"></span><p>今天的成果大概長這樣</p><img src="/donaldwu.github.com/2017/06/30/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day9-PickerView/PickerView.gif" class=""><p>那就從製作UIPicerㄐView下手</p><p>先新增一個RecordPickerController.swift的檔案到Controller的Group內</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RecordPickerController</span>: <span class="title class_">UIViewController</span>, <span class="title class_">UIPickerViewDelegate</span>, <span class="title class_">UIPickerViewDataSource</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> recordtypeArray <span class="operator">=</span> [<span class="string">&quot;H&quot;</span>, <span class="string">&quot;BB&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;K&quot;</span>, <span class="string">&quot;SC&quot;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> recordPickerView: <span class="type">UIPickerView</span>!</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        view.backgroundColor <span class="operator">=</span> .green</span><br><span class="line">        </span><br><span class="line">        recordPickerView <span class="operator">=</span> <span class="type">UIPickerView</span>()</span><br><span class="line">        recordPickerView.frame <span class="operator">=</span> <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="keyword">self</span>.view.bounds.height <span class="operator">/</span> <span class="number">2</span>, width: <span class="keyword">self</span>.view.bounds.width, height: <span class="number">200</span>)</span><br><span class="line">        recordPickerView.showsSelectionIndicator <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        recordPickerView.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        recordPickerView.dataSource <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(recordPickerView)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">numberOfComponents</span>(<span class="params">in</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">numberOfRowsInComponent</span> <span class="params">component</span>: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> recordtypeArray.count</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">titleForRow</span> <span class="params">row</span>: <span class="type">Int</span>, <span class="params">forComponent</span> <span class="params">component</span>: <span class="type">Int</span>) -&gt; <span class="type">String</span>? &#123;</span><br><span class="line">        <span class="keyword">return</span> recordtypeArray[row]</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">pickerView</span>(<span class="keyword">_</span> <span class="params">pickerView</span>: <span class="type">UIPickerView</span>, <span class="params">didSelectRow</span> <span class="params">row</span>: <span class="type">Int</span>, <span class="params">inComponent</span> <span class="params">component</span>: <span class="type">Int</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;select <span class="subst">\(recordtypeArray[row])</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>9到21行在viewDidLoad裡面實作並設定pickerView的大小、delegate、datasource</p><p>然後實作繼承UIPickerViewDelegate, UIPickerViewDataSource需要實作的numberOfRowsInComponent跟titleForRow</p><p>回傳前面設定的recordtypeArray的count跟內容</p><p>接下來回到RecordController修改一下sentButton()</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">sentRecord</span>(<span class="params">sender</span>: <span class="type">UIButton</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> controller <span class="operator">=</span> <span class="type">RecordPickerController</span>()</span><br><span class="line">    present(controller, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其實蠻偷懶的只是將畫面推到RecordPickerController，接下來應該要讓推出來的畫面只是個子畫面</p><p>放一格在現在畫面中間就好，不過這就之後再加上去</p><p>這兩天想了想UI還是需要再做一些調整，看明天想先作哪邊ＸＤ</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day8-CollectionView Reload</title>
      <link href="/donaldwu.github.com/2017/06/29/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day8-CollectionView-Reload/"/>
      <url>/donaldwu.github.com/2017/06/29/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day8-CollectionView-Reload/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶日記Day8</p><p>繼續處理昨天沒辦法在新增資料之後更新collectionView的問題</p><p>在試了一些不同的方法之後</p><p>看了console的內容才終於發現了問題所在</p><p>發現當下只差沒撞豆腐自殺（￣ c￣）y▂ξ，真的是來亂的ＸＤ</p><p>因為其實我一直有在更新collectionView</p><span id="more"></span><p>原來原因在於我更新了紀錄用的陣列recordArray</p><p>但是collectionViewCell的內容是從之前實作的players裡面去拿到資料的</p><p>所以雖然更新了recordArray，但players裡實作的內容其實是沒有改變的</p><p>知道問題之後就簡單了</p><p>稍微修改一下sentRecord()的內容</p><p>更新一下players就好</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">sentRecord</span>(<span class="params">sender</span>: <span class="type">UIButton</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hit Button<span class="subst">\(sender.tag)</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">switch</span> sender.tag &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        players[<span class="number">0</span>].recordArray.append(<span class="string">&quot;new&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        players[<span class="number">1</span>].recordArray.append(<span class="string">&quot;record&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        players[<span class="number">2</span>].recordArray.append(<span class="string">&quot;has&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        players[<span class="number">3</span>].recordArray.append(<span class="string">&quot;been&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        players[<span class="number">4</span>].recordArray.append(<span class="string">&quot;add&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        players[<span class="number">5</span>].recordArray.append(<span class="string">&quot;into&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        players[<span class="number">6</span>].recordArray.append(<span class="string">&quot;collectionView&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        players[<span class="number">7</span>].recordArray.append(<span class="string">&quot;cell&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        players[<span class="number">8</span>].recordArray.append(<span class="string">&quot;new&quot;</span>)</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">        <span class="keyword">self</span>.collectionView<span class="operator">?</span>.reloadData()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是Player這個struct在製作時用的是let，所以這邊xcode會提醒要改成var(雖然提醒的地方讓我滿臉問號)</p><p>所以就回到Player.swift做一下修正</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Player</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">var</span> order: <span class="type">String</span></span><br><span class="line">    <span class="keyword">var</span> position: <span class="type">String</span></span><br><span class="line">    <span class="keyword">var</span> recordArray: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> profileImage: <span class="type">UIImage</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>考慮到之後應該都是會更動的數值，所以統一改成var</p><p>接下來執行之後按按看按鈕是不是確實有如我所想的執行</p><img src="/donaldwu.github.com/2017/06/29/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day8-CollectionView-Reload/adddata.gif" class=""><p>最後順便將螢幕固定成橫躺來更清楚的呈現新增的資料</p><p>將TARGETS -&gt; General -&gt; Deployment -&gt; Device Orientation設定為landscape Right</p><img src="/donaldwu.github.com/2017/06/29/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day8-CollectionView-Reload/landscape.png" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day7-Pull to refresh</title>
      <link href="/donaldwu.github.com/2017/06/28/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day7-Pull-to-refresh/"/>
      <url>/donaldwu.github.com/2017/06/28/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day7-Pull-to-refresh/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶日記Day7</p><p>目前在實現collectionView之後對cell內資料的reload方式遇到了一點瓶頸</p><p>正在思考有沒有更好的解決方式</p><span id="more"></span><p>現在的做法首先會新增一個Player.swift檔案來做為選手資料的模型</p><p>需要的內容有照片、姓名、守備位置、背號以及用來儲存成績的文字陣列</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Player</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">let</span> order: <span class="type">String</span></span><br><span class="line">    <span class="keyword">let</span> position: <span class="type">String</span></span><br><span class="line">    <span class="keyword">let</span> recordArray: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;</span><br><span class="line">    <span class="keyword">let</span> profileImage: <span class="type">UIImage</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了模型就可以在RecordController裡面先實作一些假資料來放看看</p><p>先在class外作出用來存資料的陣列</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> recordArray0 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray1 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray2 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray3 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray4 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray5 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray6 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray7 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br><span class="line"><span class="keyword">var</span> recordArray8 <span class="operator">=</span> [<span class="string">&quot;一安&quot;</span>, <span class="string">&quot;三振&quot;</span>, <span class="string">&quot;保送&quot;</span>, <span class="string">&quot;二安&quot;</span>]</span><br></pre></td></tr></table></figure><p>在RecordController裡實作新的選手物件</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> players: [<span class="type">Player</span>] <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> player1 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;一棒&quot;</span>, position: <span class="string">&quot;中外&quot;</span>, recordArray: recordArray0, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">let</span> player2 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;二棒&quot;</span>, position: <span class="string">&quot;二壘&quot;</span>, recordArray: recordArray1, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">let</span> player3 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;三棒&quot;</span>, position: <span class="string">&quot;游擊&quot;</span>, recordArray: recordArray2, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">let</span> player4 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;四棒&quot;</span>, position: <span class="string">&quot;一壘&quot;</span>, recordArray: recordArray3, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">let</span> player5 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;五棒&quot;</span>, position: <span class="string">&quot;三壘&quot;</span>, recordArray: recordArray4, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">let</span> player6 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;六棒&quot;</span>, position: <span class="string">&quot;捕手&quot;</span>, recordArray: recordArray5, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">let</span> player7 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;七棒&quot;</span>, position: <span class="string">&quot;DH&quot;</span>, recordArray: recordArray6, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">let</span> player8 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;八棒&quot;</span>, position: <span class="string">&quot;右外&quot;</span>, recordArray: recordArray7, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">let</span> player9 <span class="operator">=</span> <span class="type">Player</span>(name: <span class="string">&quot;Yohoho&quot;</span>, order: <span class="string">&quot;九棒&quot;</span>, position: <span class="string">&quot;左外&quot;</span>, recordArray: recordArray8, profileImage: <span class="type">UIImage</span>(named: strImage))</span><br><span class="line">    <span class="keyword">return</span> [player1, player2, player3, player4, player5, player6, player7, player8, player9]</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>接下來把昨天在RecordCell.swift內實現的button.addTarget先改放到RecordController.swift內</p><p>改在cellForItemAt這個function內來處理</p><p>順便將上面實作的假資料放進cell裡面</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">collectionView</span>(<span class="keyword">_</span> <span class="params">collectionView</span>: <span class="type">UICollectionView</span>, <span class="params">cellForItemAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">UICollectionViewCell</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> cell <span class="operator">=</span> collectionView.dequeueReusableCell(withReuseIdentifier: cellId, for: indexPath) <span class="keyword">as?</span> <span class="type">RecordCell</span></span><br><span class="line">    cell<span class="operator">?</span>.backgroundColor <span class="operator">=</span> .blue</span><br><span class="line">    cell<span class="operator">?</span>.sentButton.tag <span class="operator">=</span> indexPath.item</span><br><span class="line">    <span class="keyword">let</span> player <span class="operator">=</span> players[indexPath.item]</span><br><span class="line">    cell<span class="operator">?</span>.sentButton.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(sentRecord(sender:)), for: .touchUpInside)</span><br><span class="line">    cell<span class="operator">?</span>.profileImage.image <span class="operator">=</span> player.profileImage</span><br><span class="line">    cell<span class="operator">?</span>.orderLabel.text <span class="operator">=</span> player.order <span class="operator">+</span> <span class="string">&quot; - &quot;</span> <span class="operator">+</span> player.position</span><br><span class="line">    cell<span class="operator">?</span>.recordText.text <span class="operator">=</span> <span class="type">String</span>(describing: player.recordArray)</span><br><span class="line">    <span class="keyword">return</span> cell<span class="operator">!</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接著把sentRecord的function也拿到這裡來修改一下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">sentRecord</span>(<span class="params">sender</span>: <span class="type">UIButton</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hit Button<span class="subst">\(sender.tag)</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">switch</span> sender.tag &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        recordArray0.append(<span class="string">&quot;New Record1&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        recordArray1.append(<span class="string">&quot;New Record1&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        recordArray2.append(<span class="string">&quot;New Record2&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        recordArray3.append(<span class="string">&quot;New Record3&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        recordArray4.append(<span class="string">&quot;New Record4&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        recordArray5.append(<span class="string">&quot;New Record5&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        recordArray6.append(<span class="string">&quot;New Record6&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        recordArray7.append(<span class="string">&quot;New Record7&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        recordArray8.append(<span class="string">&quot;New Record8&quot;</span>)</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">        <span class="keyword">self</span>.collectionView<span class="operator">?</span>.reloadData()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前雖然點擊button可以順利顯示是哪一個button以及更新array內的資料</p><p>但是畫面並沒有跟著更新，讓我好好研究一下到底是為什麼…</p><p>不過在找資料途中順手把下拉更新給放上去了(雖然也不會更新（￣ c￣）y▂ξ)</p><p>就當作經驗玩玩看摟，大概長這樣</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> refreshControl:<span class="type">UIRefreshControl</span>!</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    collectionView<span class="operator">?</span>.backgroundColor <span class="operator">=</span> .green</span><br><span class="line">    collectionView<span class="operator">?</span>.register(<span class="type">RecordCell</span>.<span class="keyword">self</span>, forCellWithReuseIdentifier: cellId)</span><br><span class="line">    <span class="keyword">self</span>.setNeedsStatusBarAppearanceUpdate()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.refreshControl <span class="operator">=</span> <span class="type">UIRefreshControl</span>()</span><br><span class="line">    <span class="keyword">self</span>.refreshControl.attributedTitle <span class="operator">=</span> <span class="type">NSAttributedString</span>(string: <span class="string">&quot;Reloading&quot;</span>)</span><br><span class="line">    <span class="keyword">self</span>.refreshControl.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(refresh), for: .valueChanged)</span><br><span class="line">    collectionView<span class="operator">!</span>.addSubview(refreshControl)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">refresh</span>(<span class="params">sender</span>:<span class="type">AnyObject</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">        <span class="keyword">self</span>.collectionView<span class="operator">?</span>.reloadData()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">self</span>.refreshControl.endRefreshing()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>實際大概長這樣</p><img src="/donaldwu.github.com/2017/06/28/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day7-Pull-to-refresh/Reloading.png" class="">]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift隨手紀錄Day6-UI調整</title>
      <link href="/donaldwu.github.com/2017/06/27/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day6-UI%E8%AA%BF%E6%95%B4/"/>
      <url>/donaldwu.github.com/2017/06/27/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day6-UI%E8%AA%BF%E6%95%B4/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶日記Day6</p><p>今天來稍微調整一下UI</p><p>接續昨天的畫面，今天稍微修改一下</p><p>大概長這樣</p><span id="more"></span><img src="/donaldwu.github.com/2017/06/27/Swift%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day6-UI%E8%AA%BF%E6%95%B4/RecordUI.png" class=""><p>首先是將原來的UILabel換成UITextView</p><p>然後是新增一個UILabel來顯示棒次跟守備位置</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> orderLabel: <span class="type">UILabel</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> label <span class="operator">=</span> <span class="type">UILabel</span>()</span><br><span class="line">    label.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    label.backgroundColor <span class="operator">=</span> .orange</span><br><span class="line">    label.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">12</span>)</span><br><span class="line">    label.textAlignment <span class="operator">=</span> .center</span><br><span class="line">    label.text <span class="operator">=</span> <span class="string">&quot;四棒/投手&quot;</span></span><br><span class="line">    <span class="keyword">return</span> label</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> recordText: <span class="type">UITextView</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">UITextView</span>()</span><br><span class="line">    text.textAlignment <span class="operator">=</span> .left</span><br><span class="line">    text.text <span class="operator">=</span> <span class="string">&quot;一安 / 三振 / 保送 / 二安&quot;</span></span><br><span class="line">    text.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">    text.backgroundColor <span class="operator">=</span> .yellow</span><br><span class="line">    text.isScrollEnabled <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    text.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>上面分別是新增的棒次label跟用來取代昨天中間label的textView</p><p>再來是修改一下button的設定讓點擊可以作用</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lazy</span> <span class="keyword">var</span> sentButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">    button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    button.backgroundColor <span class="operator">=</span> .purple</span><br><span class="line">    button.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">    button.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.blue.cgColor</span><br><span class="line">    button.layer.borderWidth <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">    button.setTitle(<span class="string">&quot;UPDATE&quot;</span>, for: .normal)</span><br><span class="line">    button.titleLabel<span class="operator">?</span>.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">13</span>)</span><br><span class="line">    button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(sentRecord), for: .touchUpInside)</span><br><span class="line">    <span class="keyword">return</span> button</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>將let改成lazy var，不這樣改動後面新增的addTarget不會觸發，原因在另外找時間寫一篇來討論</p><p>接下來調整一下layout的setupView()</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">setupView</span>() &#123;</span><br><span class="line">    backgroundColor <span class="operator">=</span> .yellow</span><br><span class="line">    addSubview(profileImage)</span><br><span class="line">    addSubview(recordText)</span><br><span class="line">    addSubview(sentButton)</span><br><span class="line">    addSubview(orderLabel)</span><br><span class="line">    </span><br><span class="line">    profileImage.topAnchor.constraint(equalTo: <span class="keyword">self</span>.topAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.leftAnchor.constraint(equalTo: <span class="keyword">self</span>.leftAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.heightAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    profileImage.widthAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    sentButton.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.rightAnchor.constraint(equalTo: <span class="keyword">self</span>.rightAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.widthAnchor.constraint(equalToConstant: <span class="number">60</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    sentButton.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    recordText.leftAnchor.constraint(equalTo: profileImage.rightAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.rightAnchor.constraint(equalTo: sentButton.leftAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    recordText.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    orderLabel.topAnchor.constraint(equalTo: profileImage.bottomAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.bottomAnchor.constraint(equalTo: <span class="keyword">self</span>.bottomAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.leftAnchor.constraint(equalTo: <span class="keyword">self</span>.leftAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    orderLabel.rightAnchor.constraint(equalTo: recordText.leftAnchor).isActive <span class="operator">=</span> <span class="literal">true</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後新增一個function<code>sentRecord()</code>來描述button被點擊時的動作，先讓console印出點字串來確認按鈕有作用</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">sentRecord</span>() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hit Button&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift-隨手紀錄Day5 紀錄APP START</title>
      <link href="/donaldwu.github.com/2017/06/26/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day5-%E7%B4%80%E9%8C%84APP-START/"/>
      <url>/donaldwu.github.com/2017/06/26/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day5-%E7%B4%80%E9%8C%84APP-START/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day5</p><p>準備做一個棒球紀錄用的APP</p><p>今天準備將主幹的紀錄頁面做出雛形</p><p>接續昨天完成的collectionView繼續將需要的元件放上去</p><span id="more"></span><p>目標大概長這樣</p><img src="/donaldwu.github.com/2017/06/26/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day5-%E7%B4%80%E9%8C%84APP-START/RecordController.png" class=""><p>先用9個cell做出9棒各自的頭像(image),成績內容(label)，發送按鈕(button)</p><p>預計用陣列做成績的儲存，應該之後會將label換成textView</p><p>但今天先大致將畫面刻出來</p><p>首先，來客製化我們的collectionViewCell</p><p>新增一個RecordCell.swift檔案，順便將檔案分類一下</p><p>目前的目錄長下面這樣</p><img src="/donaldwu.github.com/2017/06/26/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day5-%E7%B4%80%E9%8C%84APP-START/Index.png" class=""><p>在RecordCell.swift的裡面來增加我們需要的view</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RecordCell</span>: <span class="title class_">UICollectionViewCell</span> &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(<span class="params">frame</span>: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        setupView()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> profileImage: <span class="type">UIImageView</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> image <span class="operator">=</span> <span class="type">UIImageView</span>()</span><br><span class="line">        image.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        image.image <span class="operator">=</span> <span class="type">UIImage</span>(named: <span class="string">&quot;image&quot;</span>)</span><br><span class="line">        image.contentMode <span class="operator">=</span> .scaleAspectFill</span><br><span class="line">        image.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">        image.layer.masksToBounds <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> wordLabel: <span class="type">UILabel</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> label <span class="operator">=</span> <span class="type">UILabel</span>()</span><br><span class="line">        label.text <span class="operator">=</span> <span class="string">&quot;Test Test Test&quot;</span></span><br><span class="line">        label.backgroundColor <span class="operator">=</span> .yellow</span><br><span class="line">        label.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> label</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> sentButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">        button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        button.backgroundColor <span class="operator">=</span> .purple</span><br><span class="line">        button.layer.cornerRadius <span class="operator">=</span> <span class="number">5</span></span><br><span class="line">        button.layer.borderColor <span class="operator">=</span> <span class="type">UIColor</span>.blue.cgColor</span><br><span class="line">        button.layer.borderWidth <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">        button.setTitle(<span class="string">&quot;Sent&quot;</span>, for: .normal)</span><br><span class="line">        button.titleLabel<span class="operator">?</span>.font <span class="operator">=</span> <span class="type">UIFont</span>.boldSystemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">        <span class="keyword">return</span> button</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">setupView</span>() &#123;</span><br><span class="line">        backgroundColor <span class="operator">=</span> .yellow</span><br><span class="line">        addSubview(profileImage)</span><br><span class="line">        addSubview(wordLabel)</span><br><span class="line">        addSubview(sentButton)</span><br><span class="line">        </span><br><span class="line">        profileImage.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.leftAnchor.constraint(equalTo: <span class="keyword">self</span>.leftAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.heightAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        profileImage.widthAnchor.constraint(equalToConstant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        wordLabel.topAnchor.constraint(equalTo: <span class="keyword">self</span>.topAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        wordLabel.leftAnchor.constraint(equalTo: profileImage.rightAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        wordLabel.bottomAnchor.constraint(equalTo: <span class="keyword">self</span>.bottomAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        wordLabel.rightAnchor.constraint(equalTo: <span class="keyword">self</span>.rightAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        sentButton.centerYAnchor.constraint(equalTo: <span class="keyword">self</span>.centerYAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        sentButton.rightAnchor.constraint(equalTo: <span class="keyword">self</span>.rightAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        sentButton.widthAnchor.constraint(equalToConstant: <span class="number">60</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        sentButton.heightAnchor.constraint(equalToConstant: <span class="number">32</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">init?</span>(<span class="params">coder</span> <span class="params">aDecoder</span>: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="built_in">fatalError</span>(<span class="string">&quot;init(coder:) has not been implemented&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先分別實現ImageView、Label、Button並且設定好在cell內的layout</p><p>目前只是先大致定位，之後再根據需求新增跟調整</p><p>再來新增RecordController的內容</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RecordController</span>: <span class="title class_">UICollectionViewController</span>, <span class="title class_">UICollectionViewDelegateFlowLayout</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> cellId <span class="operator">=</span> <span class="string">&quot;CellId&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        collectionView<span class="operator">?</span>.backgroundColor <span class="operator">=</span> .green</span><br><span class="line">        collectionView<span class="operator">?</span>.register(<span class="type">RecordCell</span>.<span class="keyword">self</span>, forCellWithReuseIdentifier: cellId)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">collectionView</span>(<span class="keyword">_</span> <span class="params">collectionView</span>: <span class="type">UICollectionView</span>, <span class="params">numberOfItemsInSection</span> <span class="params">section</span>: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">9</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">collectionView</span>(<span class="keyword">_</span> <span class="params">collectionView</span>: <span class="type">UICollectionView</span>, <span class="params">cellForItemAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">UICollectionViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell <span class="operator">=</span> collectionView.dequeueReusableCell(withReuseIdentifier: cellId, for: indexPath)</span><br><span class="line">        cell.backgroundColor <span class="operator">=</span> .blue</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">collectionView</span>(<span class="keyword">_</span> <span class="params">collectionView</span>: <span class="type">UICollectionView</span>, <span class="params">layout</span> <span class="params">collectionViewLayout</span>: <span class="type">UICollectionViewLayout</span>, <span class="params">sizeForItemAt</span> <span class="params">indexPath</span>: <span class="type">IndexPath</span>) -&gt; <span class="type">CGSize</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">CGSize</span>(width: view.frame.width, height: <span class="number">80</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">didReceiveMemoryWarning</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.didReceiveMemoryWarning()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先是讓RecordController繼承UICollectionViewDelegateFlowLayout</p><p>再來是定義cellId方便註冊並在viewDidLoad裡面註冊RecordCell</p><p>然後設定numberOfItemsInSection回傳需要的cell數量，棒球有9個棒次，暫時先設9</p><p>之後有其他需要應該會用header跟footer去處理</p><p>在把之前註冊的RecordCell拿來用在cellForItemAt的function中</p><p>最後是cell的大小設定由layout collectionViewLayout處理</p><p>會回傳一個CGSize，我在這裡寬度設定與畫面等寬，高度80</p><p>這樣子執行看看就會看到目標的畫面</p><p>之後會花一些時間整理需要的功能以及畫面的定案，希望可以速度想好</p><p>不然我要沒梗寫拉（￣ c￣）y▂ξ</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift-隨手紀錄Day4 CollectionView Crash</title>
      <link href="/donaldwu.github.com/2017/06/25/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day4-CollectionView-Crash/"/>
      <url>/donaldwu.github.com/2017/06/25/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day4-CollectionView-Crash/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶Day4</p><p>決定開始製作之前構想很久的一些Project</p><p>但在開始之前，先挖一些之前遇過的問題紀錄下解法</p><span id="more"></span><p>首先是新專案我打算用CollectionView組成我的主要畫面</p><p>所以我新開了一個專案</p><p>一樣不使用storyboard的情況去設定完(請參照前兩天的文章)</p><p>然後將ViewController.swift重新命名為RecordController.swift並改成下面這樣</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RecordController</span>: <span class="title class_">UICollectionViewController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        collectionView<span class="operator">?</span>.backgroundColor <span class="operator">=</span> .green</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">didReceiveMemoryWarning</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.didReceiveMemoryWarning()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再進入AppDelegate.swift內的didFinishLaunchingWithOptions修改一下變成</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">application</span>(<span class="keyword">_</span> <span class="params">application</span>: <span class="type">UIApplication</span>, <span class="params">didFinishLaunchingWithOptions</span> <span class="params">launchOptions</span>: [<span class="params">UIApplicationLaunchOptionsKey</span>: <span class="keyword">Any</span>]<span class="operator">?</span>) -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        </span><br><span class="line">        window <span class="operator">=</span> <span class="type">UIWindow</span>(frame: <span class="type">UIScreen</span>.main.bounds)</span><br><span class="line">        window<span class="operator">?</span>.makeKeyAndVisible()</span><br><span class="line">        window<span class="operator">?</span>.rootViewController <span class="operator">=</span> <span class="type">UINavigationController</span>(rootViewController: <span class="type">RecordController</span>())</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然後執行下去</p><p>很好</p><p>喜聞樂見的…..Crash了</p><p>錯誤訊息如下</p><p>‘UICollectionView must be initialized with a non-nil layout parameter’</p><p>上stackOverflow看了看</p><p>簡單來說，我指定了我的RecordController作為UICollectionViewController的subClass，但是裡面collectionView的property其實就是UICollectionView本身</p><p>所以才會噴出這樣的錯誤．</p><p>所以需要修改一下內容如下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">application</span>(<span class="keyword">_</span> <span class="params">application</span>: <span class="type">UIApplication</span>, <span class="params">didFinishLaunchingWithOptions</span> <span class="params">launchOptions</span>: [<span class="params">UIApplicationLaunchOptionsKey</span>: <span class="keyword">Any</span>]<span class="operator">?</span>) -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        </span><br><span class="line">        window <span class="operator">=</span> <span class="type">UIWindow</span>(frame: <span class="type">UIScreen</span>.main.bounds)</span><br><span class="line">        window<span class="operator">?</span>.makeKeyAndVisible()</span><br><span class="line">        <span class="keyword">let</span> recordController <span class="operator">=</span> <span class="type">RecordController</span>(collectionViewLayout: <span class="type">UICollectionViewFlowLayout</span>())</span><br><span class="line">        window<span class="operator">?</span>.rootViewController <span class="operator">=</span> <span class="type">UINavigationController</span>(rootViewController: recordController)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再次執行</p><p>這次就順利編譯成功</p><p>並且如預期的顯示了我要的綠色背景．</p><p>專案內容都放在Github上</p><p><a href="https://github.com/DonaldlWu/HBCRecord"> HBCRecord Github </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift-隨手紀錄Day3-Button控制</title>
      <link href="/donaldwu.github.com/2017/06/24/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day3-Button%E6%8E%A7%E5%88%B6/"/>
      <url>/donaldwu.github.com/2017/06/24/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day3-Button%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶日記Day3</p><p>今天就來實作換圖用的button</p><p>來修改一下昨天實作的兩個button</p><span id="more"></span><p>但在這之前，由於我希望這兩個button的作用是換圖</p><p>因此我需要知道我要換到哪一張圖</p><p>所以先在viewController內定義一個變數來代表我們的圖片</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> imgIndex <span class="operator">=</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>再來就開始幫button加上一些新動作拉</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nextButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">    button.backgroundColor <span class="operator">=</span> .gray</span><br><span class="line">    button.setTitle(<span class="string">&quot;next&gt;&quot;</span>, for: .normal)</span><br><span class="line">    button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(btnNextPressed), for: .touchUpInside)</span><br><span class="line">    <span class="keyword">return</span> button</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> prevButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">    button.backgroundColor <span class="operator">=</span> .gray</span><br><span class="line">    button.setTitle(<span class="string">&quot;&lt;prev&quot;</span>, for: .normal)</span><br><span class="line">    button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    button.addTarget(<span class="keyword">self</span>, action: <span class="keyword">#selector</span>(btnPrevPressed), for: .touchUpInside)</span><br><span class="line">    <span class="keyword">return</span> button</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>在6與15行加上了偵測點擊的動作</p><p>而當觀察到button被點擊時會執行#selector()當中的function</p><p>再來就來定義兩個function的內容</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">btnNextPressed</span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> imgIndex <span class="operator">&lt;</span> <span class="number">5</span> &#123;</span><br><span class="line">        imgIndex <span class="operator">+=</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> strImage <span class="operator">=</span> <span class="string">&quot;image<span class="subst">\(imgIndex)</span>&quot;</span></span><br><span class="line">    <span class="keyword">self</span>.imageView.image <span class="operator">=</span> <span class="type">UIImage</span>(named: strImage)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">btnPrevPressed</span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> imgIndex <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">        imgIndex <span class="operator">-=</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> strImage <span class="operator">=</span> <span class="string">&quot;image<span class="subst">\(imgIndex)</span>&quot;</span></span><br><span class="line">    <span class="keyword">self</span>.imageView.image <span class="operator">=</span> <span class="type">UIImage</span>(named: strImage)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>裡面我們用一個if敘述來判斷現在我的imgIndex是多少</p><p>並用這個數字來代表我要顯示哪張圖在imageView上</p><p>然後就在Assets裡面加入命名為image0~image5的圖片</p><p>今天就先到這裡</p><p>明天再來繼續做．</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift-隨手紀錄Day2 - Layout</title>
      <link href="/donaldwu.github.com/2017/06/23/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day2-Layout/"/>
      <url>/donaldwu.github.com/2017/06/23/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day2-Layout/</url>
      
        <content type="html"><![CDATA[<p>防止偷懶日記Day2</p><p>今天來重製一個之前用來學習CoreImage的Demo</p><p>延續上篇，這次一樣用程式碼來做畫面的刻畫</p><span id="more"></span><p>首先，畫面大概長這樣</p><img src="/donaldwu.github.com/2017/06/23/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84Day2-Layout/main.png" class=""><p>非常簡單的畫面，中央黃色區塊是一個imageView負責顯示各種輸入的畫面</p><p>左下跟右下兩個按鈕分別負責做出移動至上一張圖片跟下一張圖片的動作</p><p>ＯＫ！ ＳＴＡＲＴ！</p><p>首先是正中央的imageView，來到viewController</p><p>在class內部實做一個imageView</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> imageView: <span class="type">UIImageView</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> image <span class="operator">=</span> <span class="type">UIImageView</span>()</span><br><span class="line">    image.backgroundColor <span class="operator">=</span> .yellow</span><br><span class="line">    image.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    image.contentMode <span class="operator">=</span> .scaleAspectFit</span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>這裡我們先指定背景顏色為黃色</p><p>然後第4行的值設定之所以為false</p><p>是為了讓之後的layout能順利運作，如果不做系統預設會是true</p><p>這樣系統會替元件做resizing的動作．</p><p>再來設定圖片內的顯示模式，這邊就可以看需要的模式去做調整</p><p>接下來就來實現兩個button吧</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nextButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">    button.backgroundColor <span class="operator">=</span> .gray</span><br><span class="line">    button.setTitle(<span class="string">&quot;next&gt;&quot;</span>, for: .normal)</span><br><span class="line">    button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">return</span> button</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> prevButton: <span class="type">UIButton</span> <span class="operator">=</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> button <span class="operator">=</span> <span class="type">UIButton</span>()</span><br><span class="line">    button.backgroundColor <span class="operator">=</span> .gray</span><br><span class="line">    button.setTitle(<span class="string">&quot;&lt;prev&quot;</span>, for: .normal)</span><br><span class="line">    button.translatesAutoresizingMaskIntoConstraints <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">return</span> button</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>為了確實知道按鈕大小的範圍我們先設定灰色當按鈕的背景色</p><p>然後設定按鈕的標題</p><p>然後別忘了把translatesAutoresizingMaskIntoConstraints設為false</p><p>到這邊要新增的UI元件都實做了</p><p>再來就是把它們放到畫面中適當的位置了</p><p>第一步當然是把三個新物件放到view裡面</p><p>所以改寫一下viewDidLoad</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    view.backgroundColor <span class="operator">=</span> .white</span><br><span class="line">    view.addSubview(imageView)</span><br><span class="line">    view.addSubview(nextButton)</span><br><span class="line">    view.addSubview(prevButton)</span><br><span class="line">    setConstraint()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4到6行我們將剛做好的物件當作view的subView加入畫面中</p><p>第7行我們呼叫了一個新定義的函數</p><p>我準備在裡面設定上面三個物件的layout</p><p>詳細的設定就慢慢看下去吧</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">setConstraint</span>() &#123;     </span><br><span class="line">    imageView.topAnchor.constraint(equalTo: view.topAnchor, constant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    imageView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: <span class="operator">-</span><span class="number">100</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    imageView.leftAnchor.constraint(equalTo: view.leftAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    imageView.rightAnchor.constraint(equalTo: view.rightAnchor).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">    nextButton.topAnchor.constraint(equalTo: imageView.bottomAnchor, constant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nextButton.rightAnchor.constraint(equalTo: view.rightAnchor, constant: <span class="operator">-</span><span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nextButton.heightAnchor.constraint(equalToConstant: <span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    nextButton.widthAnchor.constraint(equalToConstant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">    prevButton.topAnchor.constraint(equalTo: imageView.bottomAnchor, constant: <span class="number">48</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    prevButton.leftAnchor.constraint(equalTo: view.leftAnchor, constant: <span class="number">12</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    prevButton.heightAnchor.constraint(equalToConstant: <span class="number">24</span>).isActive <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    prevButton.widthAnchor.constraint(equalToConstant: <span class="number">64</span>).isActive <span class="operator">=</span> <span class="literal">true</span>    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的概念是利用anchor constraint可以幫我們設定物件的上下左右跟寬高應該怎麼對齊</p><p>以imageView來說我希望上緣跟畫面上緣對齊，但要保留navigationbar的高度</p><p>因此定topAnchor跟整個view的topAnchor相等，並向下一個常數值64Points</p><pre><code>備註：在iPhone6s下寬高分別為375 Points, 667 Points</code></pre><p>而imageView的下緣我希望保留一段空間來放兩個按鈕</p><p>因此讓下緣對齊畫面下緣但向上移動100Points</p><p>最後imageView的左右都是跟畫面對齊，直接等於view的anchor即可</p><p>最尾端要加上isActive &#x3D; true讓這個constraint實際作用</p><p>同理來設定兩個按鈕</p><p>右下方放置的NextButton上緣對齊imageView的下緣後下移48Points</p><p>右端則與畫面右邊對齊後往內縮12Points</p><p>然後設定寬跟高為64Points與24Points</p><p>左下的PrevButton上緣對齊方式與NextButton相同</p><p>左端則與畫面左邊對其並內縮12Points</p><p>寬高也與NextButton相同</p><p>OK，到這裡command + R按下去應該就可以看到我們所想像的畫面了．</p><p>下次再來實作按鈕的作用跟imageView換圖．</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift 隨手紀錄</title>
      <link href="/donaldwu.github.com/2017/06/22/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84/"/>
      <url>/donaldwu.github.com/2017/06/22/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84/</url>
      
        <content type="html"><![CDATA[<p>每天寫一點點iOS開發的路程，不然會偷懶ＱＱ</p><p>最一開始就從捨棄Storyboard之旅開始好了</p><p>對剛開始開發iOS的我來說，Storyboard確實帶給我不少方便</p><p>也減少了不少我開發的時間</p><p>但當project越來越大，Controller越來越多</p><p>課金多少的差異在每次要開啟龐大的Storyboard的時候就非常有感覺了！！？？</p><pre><code>謎之聲：這裡有新的mac好便宜啊～買吧～買吧</code></pre><p>所以為了我的錢包著想(X)裝逼(O)</p><p>就來學學怎麼用程式碼來刻自己要的畫面吧</p><span id="more"></span><p>首先，必須將 TARGETS -&gt; General -&gt; Deployment Info內 Main interface給清空(預設是main)</p><img src="/donaldwu.github.com/2017/06/22/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84/TARGETS.png" class=""><p>接下來就移動到AppDelegate.swift當中來指定我們要從哪裡開始吧</p><p>在AppDelegate.swift檔案中我們可以找到<code>didFinishLaunchingWithOptions</code>這個Function，在裡面我們可以照這樣去設定</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">application</span>(<span class="keyword">_</span> <span class="params">application</span>: <span class="type">UIApplication</span>, <span class="params">didFinishLaunchingWithOptions</span> <span class="params">launchOptions</span>: [<span class="params">UIApplicationLaunchOptionsKey</span>: <span class="keyword">Any</span>]<span class="operator">?</span>) -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    </span><br><span class="line">    window <span class="operator">=</span> <span class="type">UIWindow</span>(frame: <span class="type">UIScreen</span>.main.bounds)</span><br><span class="line">    window<span class="operator">?</span>.makeKeyAndVisible()</span><br><span class="line">    window<span class="operator">?</span>.rootViewController <span class="operator">=</span> <span class="type">ViewController</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們手動去增加新的UIWindow Object來幫我們處理ＵＩ的行為(內略n行說明請自行Option左鍵UIWindow)，但光只有UIWindow並不夠</p><p>我們需要去指定這個window的<code>rootViewController</code></p><p>在這裡我們將專案開啟時就會幫我們建好的<code>ViewController</code>指定為<code>rootViewController</code></p><p>這樣就完成拉</p><p>command + R 給他催落去</p><p>恩？ 全黑一片？ </p><img src="/donaldwu.github.com/2017/06/22/Swift-%E9%9A%A8%E6%89%8B%E7%B4%80%E9%8C%84/hanjomain.jpeg" class=""><p>別急，這很正常</p><p>因為<code>viewController</code>還啥都沒有啊</p><p>來～給他變個色確認一下</p><p>回到<code>viewController</code>在viewdidLoad裡面加上</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    view.backgroundColor <span class="operator">=</span> .purple</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次啟動就會發現畫面如我所想的變成全部一片紫色摟</p><p>最後</p><p>如果需要用到navigation bar在你的controller中</p><p>只需要將指定的rootViewcontroller那行稍微修改一下</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window<span class="operator">?</span>.rootViewController <span class="operator">=</span> <span class="type">UINavigationController</span>(rootViewController: <span class="type">ViewController</span>())</span><br></pre></td></tr></table></figure><p>當然，<code>ViewController</code>也能換成其他自己新增的Controller</p><p>下次再來談談怎麼用程式碼加上其他元件吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift 語法日記 -  記憶體管理</title>
      <link href="/donaldwu.github.com/2017/06/08/Swift-%E8%AA%9E%E6%B3%95%E6%97%A5%E8%A8%98/"/>
      <url>/donaldwu.github.com/2017/06/08/Swift-%E8%AA%9E%E6%B3%95%E6%97%A5%E8%A8%98/</url>
      
        <content type="html"><![CDATA[<h2 id="Swift記憶體管理"><a href="#Swift記憶體管理" class="headerlink" title="Swift記憶體管理"></a>Swift記憶體管理</h2><p>Swift當中，引用類型(class)儲存在(棧)stack上，而值類型(enum, struct)儲存在(堆)裡面，而這兩個的定義為</p><h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><p>系統自動分配之記憶體，空間較小但運行較快，遵循LIFO原則，透過移動stack尾端的指針去實現pop與push操作</p><p>在執行一個方法需要在stack上為此方法開闢新的記憶體空間，stack的尾針指向stack底端移動</p><p>當執行完畢之後再將指針移回stack頂端釋放掉這些空間．</p><span id="more"></span><h3 id="heap"><a href="#heap" class="headerlink" title="heap"></a>heap</h3><p>相較stack有較大的空間，但運行也相對的較慢，優點在於可以動態分配，不像stack中調用完直接回收</p><p>系統會在heap上尋找不再需要的記憶體(Swift中使用了ARC來幫我們處理)，再多線程環境下，多線程會共享heap上的記憶體</p><p>為了確保線程安全，必須在heap上進行加鎖操作，但這動作相對浪費效能．</p><p>以一個範例來做說明</p><p>首先是我們定義一個值類型的struct並實現它</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ValueType</span> &#123;</span><br><span class="line"><span class="keyword">var</span> a, b: <span class="type">Double</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> value1 <span class="operator">=</span> <span class="type">ValueType</span>(a: <span class="number">3</span>, b: <span class="number">4</span>)</span><br><span class="line"><span class="keyword">var</span> value2 <span class="operator">=</span> value1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>value1</code>與<code>value2</code>會在stack上各分配到一塊記憶體，這兩者的儲存是獨立的，意思是你不必擔心兩者會互相影響</p><p>例如下面我們修改了<code>value2</code>的值，然後再去印出<code>value1</code>的值來觀察</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">value2.a <span class="operator">=</span> <span class="number">100</span></span><br><span class="line"><span class="built_in">print</span>(value1.a)</span><br></pre></td></tr></table></figure><p>可以發現印出來的依然是<code>value1</code>原來的值3.0</p><p>再來我們用class再來定義一次試試</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ValueType</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> a, b: <span class="type">Double</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="params">a</span>: <span class="type">Double</span>, <span class="params">b</span>: <span class="type">Double</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.a <span class="operator">=</span> a</span><br><span class="line">        <span class="keyword">self</span>.b <span class="operator">=</span> b</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> value1 <span class="operator">=</span> <span class="type">ValueType</span>(a: <span class="number">3</span>, b: <span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>由於這次<code>ValueType</code>是class因此並不會直接將資料存在stack上，而是在stack上開闢兩個指針</p><p>由這兩個指針負責去尋找被儲存在heap上的資料，而當我們指定</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value2 <span class="operator">=</span> value1</span><br></pre></td></tr></table></figure><p><code>value2</code>的指針就會跟<code>value1</code>的指針指向同一位置，因此我們可以知道，在引用類型的賦值並不會發生拷貝的動作</p><p>所以當你修改<code>value2</code>的內容時也會導致指向同一位置的<code>value1</code>一同變動．</p><p>p.s.在這裡我們使用了<code>let</code>關鍵字來定義<code>value1</code>，限制它為一不可變動的值，但在引用類型中，不可變動的只有</p><p>裡面所儲存的指針位置保證不會發生變化，並不代表所指向的數值不會發生變動．</p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
